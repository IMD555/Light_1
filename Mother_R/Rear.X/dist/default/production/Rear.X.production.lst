

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 10 17:48:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18LF67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  0118D4                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _hello
    96  0118D4  0D                 	db	13
    97  0118D5  0A                 	db	10
    98  0118D6  48                 	db	72
    99  0118D7  65                 	db	101
   100  0118D8  6C                 	db	108
   101  0118D9  6C                 	db	108
   102  0118DA  6F                 	db	111
   103  0118DB  21                 	db	33
   104  0118DC  0D                 	db	13
   105  0118DD  0A                 	db	10
   106  0118DE  00                 	db	0
   107  0000                     _TX5REG	set	3805
   108  0000                     _PIR4bits	set	3639
   109  0000                     _RE1PPS	set	3699
   110  0000                     _RE0PPS	set	3698
   111  0000                     _RG3PPS	set	3717
   112  0000                     _SP5BRGL	set	3806
   113  0000                     _TX5STA	set	3809
   114  0000                     _RC5STA	set	3808
   115  0000                     _BAUD5CON	set	3810
   116  0000                     _RX5PPSbits	set	3607
   117  0000                     _ANSELGbits	set	3772
   118  0000                     _ANSELF	set	3764
   119  0000                     _OSCFRQ	set	3657
   120  0000                     _OSCCON1	set	3651
   121  0000                     _ANSELFbits	set	3764
   122  0000                     _ODCONFbits	set	3762
   123  0000                     _WPUC	set	3745
   124  0000                     _SSP1DATPPS	set	3610
   125  0000                     _SSP1CLKPPS	set	3609
   126  0000                     _RC4PPS	set	3686
   127  0000                     _RC3PPS	set	3685
   128  0000                     _WPUE	set	3758
   129  0000                     _INLVLCbits	set	3742
   130  0000                     _WPUCbits	set	3745
   131  0000                     _ODCONCbits	set	3744
   132  0000                     _PWM7DC	set	3999
   133  0000                     _TBLPTRU	set	4088
   134  0000                     _TRISEbits	set	3973
   135  0000                     _PWM7CON	set	4001
   136  0000                     _CCPTMRS1bits	set	4014
   137  0000                     _T2CLKCON	set	4031
   138  0000                     _T2CON	set	4029
   139  0000                     _T2PR	set	4028
   140  0000                     _TRISGbits	set	3975
   141  0000                     _TRISFbits	set	3974
   142  0000                     _TRISDbits	set	3972
   143  0000                     _TRISAbits	set	3969
   144  0000                     _SSP1CON1bits	set	3989
   145  0000                     _SSP1ADD	set	3986
   146  0000                     _SSP1CON3	set	3991
   147  0000                     _SSP1CON2	set	3990
   148  0000                     _SSP1CON1	set	3989
   149  0000                     _SSP1STAT	set	3988
   150  0000                     _SSP1STATbits	set	3988
   151  0000                     _SSP1BUF	set	3985
   152  0000                     _SSP1CON2bits	set	3990
   153  0000                     _TRISCbits	set	3971
   154  0000                     _WREG	set	4072
   155  0000                     _PORTCbits	set	3979
   156  0000                     _LATCbits	set	3963
   157  0000                     _RF5	set	31861
   158  0000                     _RF7	set	31863
   159  0000                     _RF6	set	31862
   160  0000                     _LATF0	set	31728
   161  0000                     _LATD7	set	31719
   162                           
   163                           	psect	mediumconst
   164  00FD12                     __pmediumconst:
   165                           	callstack 0
   166  00FD12  00                 	db	0
   167  00FD13                     STR_35:
   168  00FD13  49                 	db	73	;'I'
   169  00FD14  49                 	db	73	;'I'
   170  00FD15  4E                 	db	78	;'N'
   171  00FD16  50                 	db	80	;'P'
   172  00FD17  56                 	db	86	;'V'
   173  00FD18  6F                 	db	111	;'o'
   174  00FD19  6C                 	db	108	;'l'
   175  00FD1A  74                 	db	116	;'t'
   176  00FD1B  61                 	db	97	;'a'
   177  00FD1C  67                 	db	103	;'g'
   178  00FD1D  65                 	db	101	;'e'
   179  00FD1E  20                 	db	32
   180  00FD1F  20                 	db	32
   181  00FD20  20                 	db	32
   182  00FD21  20                 	db	32
   183  00FD22  3D                 	db	61	;'='
   184  00FD23  25                 	db	37
   185  00FD24  30                 	db	48	;'0'
   186  00FD25  34                 	db	52	;'4'
   187  00FD26  78                 	db	120	;'x'
   188  00FD27  20                 	db	32
   189  00FD28  25                 	db	37
   190  00FD29  35                 	db	53	;'5'
   191  00FD2A  64                 	db	100	;'d'
   192  00FD2B  5B                 	db	91	;'['
   193  00FD2C  6D                 	db	109	;'m'
   194  00FD2D  41                 	db	65	;'A'
   195  00FD2E  5D                 	db	93	;']'
   196  00FD2F  0A                 	db	10
   197  00FD30  00                 	db	0
   198  00FD31                     STR_36:
   199  00FD31  49                 	db	73	;'I'
   200  00FD32  6E                 	db	110	;'n'
   201  00FD33  70                 	db	112	;'p'
   202  00FD34  75                 	db	117	;'u'
   203  00FD35  74                 	db	116	;'t'
   204  00FD36  43                 	db	67	;'C'
   205  00FD37  75                 	db	117	;'u'
   206  00FD38  72                 	db	114	;'r'
   207  00FD39  72                 	db	114	;'r'
   208  00FD3A  65                 	db	101	;'e'
   209  00FD3B  6E                 	db	110	;'n'
   210  00FD3C  74                 	db	116	;'t'
   211  00FD3D  20                 	db	32
   212  00FD3E  20                 	db	32
   213  00FD3F  20                 	db	32
   214  00FD40  3D                 	db	61	;'='
   215  00FD41  25                 	db	37
   216  00FD42  30                 	db	48	;'0'
   217  00FD43  34                 	db	52	;'4'
   218  00FD44  78                 	db	120	;'x'
   219  00FD45  20                 	db	32
   220  00FD46  25                 	db	37
   221  00FD47  35                 	db	53	;'5'
   222  00FD48  64                 	db	100	;'d'
   223  00FD49  5B                 	db	91	;'['
   224  00FD4A  6D                 	db	109	;'m'
   225  00FD4B  41                 	db	65	;'A'
   226  00FD4C  5D                 	db	93	;']'
   227  00FD4D  0A                 	db	10
   228  00FD4E  00                 	db	0
   229  00FD4F  54                 	db	84	;'T'
   230  00FD50  65                 	db	101	;'e'
   231  00FD51  6D                 	db	109	;'m'
   232  00FD52  70                 	db	112	;'p'
   233  00FD53  20                 	db	32
   234  00FD54  20                 	db	32
   235  00FD55  20                 	db	32
   236  00FD56  20                 	db	32
   237  00FD57  20                 	db	32
   238  00FD58  20                 	db	32
   239  00FD59  3D                 	db	61	;'='
   240  00FD5A  25                 	db	37
   241  00FD5B  30                 	db	48	;'0'
   242  00FD5C  34                 	db	52	;'4'
   243  00FD5D  78                 	db	120	;'x'
   244  00FD5E  20                 	db	32
   245  00FD5F  20                 	db	32
   246  00FD60  25                 	db	37
   247  00FD61  33                 	db	51	;'3'
   248  00FD62  64                 	db	100	;'d'
   249  00FD63  5B                 	db	91	;'['
   250  00FD64  64                 	db	100	;'d'
   251  00FD65  65                 	db	101	;'e'
   252  00FD66  67                 	db	103	;'g'
   253  00FD67  43                 	db	67	;'C'
   254  00FD68  5D                 	db	93	;']'
   255  00FD69  0A                 	db	10
   256  00FD6A  00                 	db	0
   257  00FD6B  52                 	db	82	;'R'
   258  00FD6C  65                 	db	101	;'e'
   259  00FD6D  70                 	db	112	;'p'
   260  00FD6E  43                 	db	67	;'C'
   261  00FD6F  61                 	db	97	;'a'
   262  00FD70  70                 	db	112	;'p'
   263  00FD71  20                 	db	32
   264  00FD72  20                 	db	32
   265  00FD73  20                 	db	32
   266  00FD74  20                 	db	32
   267  00FD75  3D                 	db	61	;'='
   268  00FD76  25                 	db	37
   269  00FD77  30                 	db	48	;'0'
   270  00FD78  34                 	db	52	;'4'
   271  00FD79  78                 	db	120	;'x'
   272  00FD7A  20                 	db	32
   273  00FD7B  20                 	db	32
   274  00FD7C  25                 	db	37
   275  00FD7D  35                 	db	53	;'5'
   276  00FD7E  64                 	db	100	;'d'
   277  00FD7F  5B                 	db	91	;'['
   278  00FD80  6D                 	db	109	;'m'
   279  00FD81  41                 	db	65	;'A'
   280  00FD82  68                 	db	104	;'h'
   281  00FD83  5D                 	db	93	;']'
   282  00FD84  0A                 	db	10
   283  00FD85  00                 	db	0
   284  00FD86  44                 	db	68	;'D'
   285  00FD87  65                 	db	101	;'e'
   286  00FD88  73                 	db	115	;'s'
   287  00FD89  69                 	db	105	;'i'
   288  00FD8A  67                 	db	103	;'g'
   289  00FD8B  6E                 	db	110	;'n'
   290  00FD8C  43                 	db	67	;'C'
   291  00FD8D  61                 	db	97	;'a'
   292  00FD8E  70                 	db	112	;'p'
   293  00FD8F  20                 	db	32
   294  00FD90  3D                 	db	61	;'='
   295  00FD91  25                 	db	37
   296  00FD92  30                 	db	48	;'0'
   297  00FD93  34                 	db	52	;'4'
   298  00FD94  78                 	db	120	;'x'
   299  00FD95  20                 	db	32
   300  00FD96  20                 	db	32
   301  00FD97  25                 	db	37
   302  00FD98  35                 	db	53	;'5'
   303  00FD99  64                 	db	100	;'d'
   304  00FD9A  5B                 	db	91	;'['
   305  00FD9B  6D                 	db	109	;'m'
   306  00FD9C  41                 	db	65	;'A'
   307  00FD9D  68                 	db	104	;'h'
   308  00FD9E  5D                 	db	93	;']'
   309  00FD9F  0A                 	db	10
   310  00FDA0  00                 	db	0
   311  00FDA1  41                 	db	65	;'A'
   312  00FDA2  76                 	db	118	;'v'
   313  00FDA3  53                 	db	83	;'S'
   314  00FDA4  4F                 	db	79	;'O'
   315  00FDA5  43                 	db	67	;'C'
   316  00FDA6  20                 	db	32
   317  00FDA7  20                 	db	32
   318  00FDA8  20                 	db	32
   319  00FDA9  20                 	db	32
   320  00FDAA  20                 	db	32
   321  00FDAB  3D                 	db	61	;'='
   322  00FDAC  25                 	db	37
   323  00FDAD  30                 	db	48	;'0'
   324  00FDAE  34                 	db	52	;'4'
   325  00FDAF  78                 	db	120	;'x'
   326  00FDB0  20                 	db	32
   327  00FDB1  20                 	db	32
   328  00FDB2  25                 	db	37
   329  00FDB3  33                 	db	51	;'3'
   330  00FDB4  64                 	db	100	;'d'
   331  00FDB5  5B                 	db	91	;'['
   332  00FDB6  25                 	db	37
   333  00FDB7  25                 	db	37
   334  00FDB8  5D                 	db	93	;']'
   335  00FDB9  0A                 	db	10
   336  00FDBA  00                 	db	0
   337  00FDBB  52                 	db	82	;'R'
   338  00FDBC  65                 	db	101	;'e'
   339  00FDBD  70                 	db	112	;'p'
   340  00FDBE  53                 	db	83	;'S'
   341  00FDBF  4F                 	db	79	;'O'
   342  00FDC0  43                 	db	67	;'C'
   343  00FDC1  20                 	db	32
   344  00FDC2  20                 	db	32
   345  00FDC3  20                 	db	32
   346  00FDC4  20                 	db	32
   347  00FDC5  3D                 	db	61	;'='
   348  00FDC6  25                 	db	37
   349  00FDC7  30                 	db	48	;'0'
   350  00FDC8  34                 	db	52	;'4'
   351  00FDC9  78                 	db	120	;'x'
   352  00FDCA  20                 	db	32
   353  00FDCB  20                 	db	32
   354  00FDCC  25                 	db	37
   355  00FDCD  33                 	db	51	;'3'
   356  00FDCE  64                 	db	100	;'d'
   357  00FDCF  5B                 	db	91	;'['
   358  00FDD0  25                 	db	37
   359  00FDD1  25                 	db	37
   360  00FDD2  5D                 	db	93	;']'
   361  00FDD3  0A                 	db	10
   362  00FDD4  00                 	db	0
   363  00FDD5  43                 	db	67	;'C'
   364  00FDD6  75                 	db	117	;'u'
   365  00FDD7  72                 	db	114	;'r'
   366  00FDD8  72                 	db	114	;'r'
   367  00FDD9  65                 	db	101	;'e'
   368  00FDDA  6E                 	db	110	;'n'
   369  00FDDB  74                 	db	116	;'t'
   370  00FDDC  20                 	db	32
   371  00FDDD  20                 	db	32
   372  00FDDE  20                 	db	32
   373  00FDDF  3D                 	db	61	;'='
   374  00FDE0  25                 	db	37
   375  00FDE1  30                 	db	48	;'0'
   376  00FDE2  34                 	db	52	;'4'
   377  00FDE3  78                 	db	120	;'x'
   378  00FDE4  20                 	db	32
   379  00FDE5  20                 	db	32
   380  00FDE6  25                 	db	37
   381  00FDE7  35                 	db	53	;'5'
   382  00FDE8  64                 	db	100	;'d'
   383  00FDE9  5B                 	db	91	;'['
   384  00FDEA  6D                 	db	109	;'m'
   385  00FDEB  41                 	db	65	;'A'
   386  00FDEC  5D                 	db	93	;']'
   387  00FDED  0A                 	db	10
   388  00FDEE  00                 	db	0
   389  00FDEF  43                 	db	67	;'C'
   390  00FDF0  68                 	db	104	;'h'
   391  00FDF1  67                 	db	103	;'g'
   392  00FDF2  69                 	db	105	;'i'
   393  00FDF3  6E                 	db	110	;'n'
   394  00FDF4  67                 	db	103	;'g'
   395  00FDF5  43                 	db	67	;'C'
   396  00FDF6  75                 	db	117	;'u'
   397  00FDF7  72                 	db	114	;'r'
   398  00FDF8  72                 	db	114	;'r'
   399  00FDF9  3D                 	db	61	;'='
   400  00FDFA  25                 	db	37
   401  00FDFB  30                 	db	48	;'0'
   402  00FDFC  34                 	db	52	;'4'
   403  00FDFD  78                 	db	120	;'x'
   404  00FDFE  20                 	db	32
   405  00FDFF  20                 	db	32
   406  00FE00  25                 	db	37
   407  00FE01  35                 	db	53	;'5'
   408  00FE02  64                 	db	100	;'d'
   409  00FE03  5B                 	db	91	;'['
   410  00FE04  6D                 	db	109	;'m'
   411  00FE05  41                 	db	65	;'A'
   412  00FE06  5D                 	db	93	;']'
   413  00FE07  0A                 	db	10
   414  00FE08  00                 	db	0
   415  00FE09  50                 	db	80	;'P'
   416  00FE0A  43                 	db	67	;'C'
   417  00FE0B  4B                 	db	75	;'K'
   418  00FE0C  50                 	db	80	;'P'
   419  00FE0D  20                 	db	32
   420  00FE0E  20                 	db	32
   421  00FE0F  20                 	db	32
   422  00FE10  20                 	db	32
   423  00FE11  20                 	db	32
   424  00FE12  20                 	db	32
   425  00FE13  3D                 	db	61	;'='
   426  00FE14  25                 	db	37
   427  00FE15  30                 	db	48	;'0'
   428  00FE16  34                 	db	52	;'4'
   429  00FE17  78                 	db	120	;'x'
   430  00FE18  20                 	db	32
   431  00FE19  20                 	db	32
   432  00FE1A  25                 	db	37
   433  00FE1B  35                 	db	53	;'5'
   434  00FE1C  64                 	db	100	;'d'
   435  00FE1D  5B                 	db	91	;'['
   436  00FE1E  6D                 	db	109	;'m'
   437  00FE1F  56                 	db	86	;'V'
   438  00FE20  5D                 	db	93	;']'
   439  00FE21  0A                 	db	10
   440  00FE22  00                 	db	0
   441  00FE23  42                 	db	66	;'B'
   442  00FE24  61                 	db	97	;'a'
   443  00FE25  74                 	db	116	;'t'
   444  00FE26  74                 	db	116	;'t'
   445  00FE27  20                 	db	32
   446  00FE28  20                 	db	32
   447  00FE29  20                 	db	32
   448  00FE2A  20                 	db	32
   449  00FE2B  20                 	db	32
   450  00FE2C  20                 	db	32
   451  00FE2D  3D                 	db	61	;'='
   452  00FE2E  25                 	db	37
   453  00FE2F  30                 	db	48	;'0'
   454  00FE30  34                 	db	52	;'4'
   455  00FE31  78                 	db	120	;'x'
   456  00FE32  20                 	db	32
   457  00FE33  20                 	db	32
   458  00FE34  25                 	db	37
   459  00FE35  35                 	db	53	;'5'
   460  00FE36  64                 	db	100	;'d'
   461  00FE37  5B                 	db	91	;'['
   462  00FE38  6D                 	db	109	;'m'
   463  00FE39  56                 	db	86	;'V'
   464  00FE3A  5D                 	db	93	;']'
   465  00FE3B  0A                 	db	10
   466  00FE3C  00                 	db	0
   467  00FE3D  43                 	db	67	;'C'
   468  00FE3E  45                 	db	69	;'E'
   469  00FE3F  4C                 	db	76	;'L'
   470  00FE40  4C                 	db	76	;'L'
   471  00FE41  31                 	db	49	;'1'
   472  00FE42  20                 	db	32
   473  00FE43  20                 	db	32
   474  00FE44  20                 	db	32
   475  00FE45  20                 	db	32
   476  00FE46  20                 	db	32
   477  00FE47  3D                 	db	61	;'='
   478  00FE48  25                 	db	37
   479  00FE49  30                 	db	48	;'0'
   480  00FE4A  34                 	db	52	;'4'
   481  00FE4B  78                 	db	120	;'x'
   482  00FE4C  20                 	db	32
   483  00FE4D  20                 	db	32
   484  00FE4E  25                 	db	37
   485  00FE4F  35                 	db	53	;'5'
   486  00FE50  64                 	db	100	;'d'
   487  00FE51  5B                 	db	91	;'['
   488  00FE52  6D                 	db	109	;'m'
   489  00FE53  56                 	db	86	;'V'
   490  00FE54  5D                 	db	93	;']'
   491  00FE55  0A                 	db	10
   492  00FE56  00                 	db	0
   493  00FE57  43                 	db	67	;'C'
   494  00FE58  45                 	db	69	;'E'
   495  00FE59  4C                 	db	76	;'L'
   496  00FE5A  4C                 	db	76	;'L'
   497  00FE5B  32                 	db	50	;'2'
   498  00FE5C  20                 	db	32
   499  00FE5D  20                 	db	32
   500  00FE5E  20                 	db	32
   501  00FE5F  20                 	db	32
   502  00FE60  20                 	db	32
   503  00FE61  3D                 	db	61	;'='
   504  00FE62  25                 	db	37
   505  00FE63  30                 	db	48	;'0'
   506  00FE64  34                 	db	52	;'4'
   507  00FE65  78                 	db	120	;'x'
   508  00FE66  20                 	db	32
   509  00FE67  20                 	db	32
   510  00FE68  25                 	db	37
   511  00FE69  35                 	db	53	;'5'
   512  00FE6A  64                 	db	100	;'d'
   513  00FE6B  5B                 	db	91	;'['
   514  00FE6C  6D                 	db	109	;'m'
   515  00FE6D  56                 	db	86	;'V'
   516  00FE6E  5D                 	db	93	;']'
   517  00FE6F  0A                 	db	10
   518  00FE70  00                 	db	0
   519  00FE71  43                 	db	67	;'C'
   520  00FE72  45                 	db	69	;'E'
   521  00FE73  4C                 	db	76	;'L'
   522  00FE74  4C                 	db	76	;'L'
   523  00FE75  33                 	db	51	;'3'
   524  00FE76  20                 	db	32
   525  00FE77  20                 	db	32
   526  00FE78  20                 	db	32
   527  00FE79  20                 	db	32
   528  00FE7A  20                 	db	32
   529  00FE7B  3D                 	db	61	;'='
   530  00FE7C  25                 	db	37
   531  00FE7D  30                 	db	48	;'0'
   532  00FE7E  34                 	db	52	;'4'
   533  00FE7F  78                 	db	120	;'x'
   534  00FE80  20                 	db	32
   535  00FE81  20                 	db	32
   536  00FE82  25                 	db	37
   537  00FE83  35                 	db	53	;'5'
   538  00FE84  64                 	db	100	;'d'
   539  00FE85  5B                 	db	91	;'['
   540  00FE86  6D                 	db	109	;'m'
   541  00FE87  56                 	db	86	;'V'
   542  00FE88  5D                 	db	93	;']'
   543  00FE89  0A                 	db	10
   544  00FE8A  00                 	db	0
   545  00FE8B  43                 	db	67	;'C'
   546  00FE8C  45                 	db	69	;'E'
   547  00FE8D  4C                 	db	76	;'L'
   548  00FE8E  4C                 	db	76	;'L'
   549  00FE8F  34                 	db	52	;'4'
   550  00FE90  20                 	db	32
   551  00FE91  20                 	db	32
   552  00FE92  20                 	db	32
   553  00FE93  20                 	db	32
   554  00FE94  20                 	db	32
   555  00FE95  3D                 	db	61	;'='
   556  00FE96  25                 	db	37
   557  00FE97  30                 	db	48	;'0'
   558  00FE98  34                 	db	52	;'4'
   559  00FE99  78                 	db	120	;'x'
   560  00FE9A  20                 	db	32
   561  00FE9B  20                 	db	32
   562  00FE9C  25                 	db	37
   563  00FE9D  35                 	db	53	;'5'
   564  00FE9E  64                 	db	100	;'d'
   565  00FE9F  5B                 	db	91	;'['
   566  00FEA0  6D                 	db	109	;'m'
   567  00FEA1  56                 	db	86	;'V'
   568  00FEA2  5D                 	db	93	;']'
   569  00FEA3  0A                 	db	10
   570  00FEA4  00                 	db	0
   571  00FEA5  43                 	db	67	;'C'
   572  00FEA6  68                 	db	104	;'h'
   573  00FEA7  67                 	db	103	;'g'
   574  00FEA8  69                 	db	105	;'i'
   575  00FEA9  6E                 	db	110	;'n'
   576  00FEAA  67                 	db	103	;'g'
   577  00FEAB  56                 	db	86	;'V'
   578  00FEAC  6F                 	db	111	;'o'
   579  00FEAD  6C                 	db	108	;'l'
   580  00FEAE  74                 	db	116	;'t'
   581  00FEAF  3D                 	db	61	;'='
   582  00FEB0  25                 	db	37
   583  00FEB1  30                 	db	48	;'0'
   584  00FEB2  34                 	db	52	;'4'
   585  00FEB3  78                 	db	120	;'x'
   586  00FEB4  20                 	db	32
   587  00FEB5  20                 	db	32
   588  00FEB6  25                 	db	37
   589  00FEB7  35                 	db	53	;'5'
   590  00FEB8  64                 	db	100	;'d'
   591  00FEB9  5B                 	db	91	;'['
   592  00FEBA  6D                 	db	109	;'m'
   593  00FEBB  56                 	db	86	;'V'
   594  00FEBC  5D                 	db	93	;']'
   595  00FEBD  0A                 	db	10
   596  00FEBE  00                 	db	0
   597  00FEBF                     STR_33:
   598  00FEBF  43                 	db	67	;'C'
   599  00FEC0  68                 	db	104	;'h'
   600  00FEC1  61                 	db	97	;'a'
   601  00FEC2  72                 	db	114	;'r'
   602  00FEC3  67                 	db	103	;'g'
   603  00FEC4  65                 	db	101	;'e'
   604  00FEC5  56                 	db	86	;'V'
   605  00FEC6  6F                 	db	111	;'o'
   606  00FEC7  6C                 	db	108	;'l'
   607  00FEC8  74                 	db	116	;'t'
   608  00FEC9  61                 	db	97	;'a'
   609  00FECA  67                 	db	103	;'g'
   610  00FECB  65                 	db	101	;'e'
   611  00FECC  20                 	db	32
   612  00FECD  20                 	db	32
   613  00FECE  3D                 	db	61	;'='
   614  00FECF  25                 	db	37
   615  00FED0  30                 	db	48	;'0'
   616  00FED1  34                 	db	52	;'4'
   617  00FED2  78                 	db	120	;'x'
   618  00FED3  0A                 	db	10
   619  00FED4  00                 	db	0
   620  00FED5                     STR_32:
   621  00FED5  43                 	db	67	;'C'
   622  00FED6  68                 	db	104	;'h'
   623  00FED7  61                 	db	97	;'a'
   624  00FED8  72                 	db	114	;'r'
   625  00FED9  67                 	db	103	;'g'
   626  00FEDA  65                 	db	101	;'e'
   627  00FEDB  43                 	db	67	;'C'
   628  00FEDC  75                 	db	117	;'u'
   629  00FEDD  72                 	db	114	;'r'
   630  00FEDE  72                 	db	114	;'r'
   631  00FEDF  65                 	db	101	;'e'
   632  00FEE0  6E                 	db	110	;'n'
   633  00FEE1  74                 	db	116	;'t'
   634  00FEE2  20                 	db	32
   635  00FEE3  20                 	db	32
   636  00FEE4  3D                 	db	61	;'='
   637  00FEE5  25                 	db	37
   638  00FEE6  30                 	db	48	;'0'
   639  00FEE7  34                 	db	52	;'4'
   640  00FEE8  78                 	db	120	;'x'
   641  00FEE9  0A                 	db	10
   642  00FEEA  00                 	db	0
   643  00FEEB                     STR_34:
   644  00FEEB  52                 	db	82	;'R'
   645  00FEEC  65                 	db	101	;'e'
   646  00FEED  6C                 	db	108	;'l'
   647  00FEEE  65                 	db	101	;'e'
   648  00FEEF  61                 	db	97	;'a'
   649  00FEF0  72                 	db	114	;'r'
   650  00FEF1  6E                 	db	110	;'n'
   651  00FEF2  20                 	db	32
   652  00FEF3  56                 	db	86	;'V'
   653  00FEF4  6F                 	db	111	;'o'
   654  00FEF5  6C                 	db	108	;'l'
   655  00FEF6  74                 	db	116	;'t'
   656  00FEF7  61                 	db	97	;'a'
   657  00FEF8  67                 	db	103	;'g'
   658  00FEF9  65                 	db	101	;'e'
   659  00FEFA  3D                 	db	61	;'='
   660  00FEFB  25                 	db	37
   661  00FEFC  30                 	db	48	;'0'
   662  00FEFD  34                 	db	52	;'4'
   663  00FEFE  78                 	db	120	;'x'
   664  00FEFF  0A                 	db	10
   665  00FF00  00                 	db	0
   666  00FF01  43                 	db	67	;'C'
   667  00FF02  6F                 	db	111	;'o'
   668  00FF03  6E                 	db	110	;'n'
   669  00FF04  66                 	db	102	;'f'
   670  00FF05  69                 	db	105	;'i'
   671  00FF06  67                 	db	103	;'g'
   672  00FF07  20                 	db	32
   673  00FF08  20                 	db	32
   674  00FF09  20                 	db	32
   675  00FF0A  20                 	db	32
   676  00FF0B  3D                 	db	61	;'='
   677  00FF0C  25                 	db	37
   678  00FF0D  30                 	db	48	;'0'
   679  00FF0E  34                 	db	52	;'4'
   680  00FF0F  78                 	db	120	;'x'
   681  00FF10  0A                 	db	10
   682  00FF11  00                 	db	0
   683  00FF12  53                 	db	83	;'S'
   684  00FF13  74                 	db	116	;'t'
   685  00FF14  61                 	db	97	;'a'
   686  00FF15  74                 	db	116	;'t'
   687  00FF16  75                 	db	117	;'u'
   688  00FF17  73                 	db	115	;'s'
   689  00FF18  20                 	db	32
   690  00FF19  20                 	db	32
   691  00FF1A  20                 	db	32
   692  00FF1B  20                 	db	32
   693  00FF1C  3D                 	db	61	;'='
   694  00FF1D  25                 	db	37
   695  00FF1E  30                 	db	48	;'0'
   696  00FF1F  34                 	db	52	;'4'
   697  00FF20  78                 	db	120	;'x'
   698  00FF21  0A                 	db	10
   699  00FF22  00                 	db	0
   700  00FF23  43                 	db	67	;'C'
   701  00FF24  6F                 	db	111	;'o'
   702  00FF25  6E                 	db	110	;'n'
   703  00FF26  66                 	db	102	;'f'
   704  00FF27  69                 	db	105	;'i'
   705  00FF28  67                 	db	103	;'g'
   706  00FF29  32                 	db	50	;'2'
   707  00FF2A  20                 	db	32
   708  00FF2B  20                 	db	32
   709  00FF2C  20                 	db	32
   710  00FF2D  3D                 	db	61	;'='
   711  00FF2E  25                 	db	37
   712  00FF2F  30                 	db	48	;'0'
   713  00FF30  34                 	db	52	;'4'
   714  00FF31  78                 	db	120	;'x'
   715  00FF32  0A                 	db	10
   716  00FF33  00                 	db	0
   717  00FF34  53                 	db	83	;'S'
   718  00FF35  74                 	db	116	;'t'
   719  00FF36  61                 	db	97	;'a'
   720  00FF37  74                 	db	116	;'t'
   721  00FF38  75                 	db	117	;'u'
   722  00FF39  73                 	db	115	;'s'
   723  00FF3A  32                 	db	50	;'2'
   724  00FF3B  20                 	db	32
   725  00FF3C  20                 	db	32
   726  00FF3D  20                 	db	32
   727  00FF3E  3D                 	db	61	;'='
   728  00FF3F  25                 	db	37
   729  00FF40  30                 	db	48	;'0'
   730  00FF41  34                 	db	52	;'4'
   731  00FF42  78                 	db	120	;'x'
   732  00FF43  0A                 	db	10
   733  00FF44  00                 	db	0
   734  00FF45  52                 	db	82	;'R'
   735  00FF46  65                 	db	101	;'e'
   736  00FF47  6C                 	db	108	;'l'
   737  00FF48  61                 	db	97	;'a'
   738  00FF49  78                 	db	120	;'x'
   739  00FF4A  43                 	db	67	;'C'
   740  00FF4B  66                 	db	102	;'f'
   741  00FF4C  67                 	db	103	;'g'
   742  00FF4D  20                 	db	32
   743  00FF4E  20                 	db	32
   744  00FF4F  3D                 	db	61	;'='
   745  00FF50  25                 	db	37
   746  00FF51  30                 	db	48	;'0'
   747  00FF52  34                 	db	52	;'4'
   748  00FF53  78                 	db	120	;'x'
   749  00FF54  0A                 	db	10
   750  00FF55  00                 	db	0
   751  00FF56  43                 	db	67	;'C'
   752  00FF57  6F                 	db	111	;'o'
   753  00FF58  6D                 	db	109	;'m'
   754  00FF59  6D                 	db	109	;'m'
   755  00FF5A  53                 	db	83	;'S'
   756  00FF5B  74                 	db	116	;'t'
   757  00FF5C  61                 	db	97	;'a'
   758  00FF5D  74                 	db	116	;'t'
   759  00FF5E  20                 	db	32
   760  00FF5F  20                 	db	32
   761  00FF60  3D                 	db	61	;'='
   762  00FF61  25                 	db	37
   763  00FF62  30                 	db	48	;'0'
   764  00FF63  34                 	db	52	;'4'
   765  00FF64  78                 	db	120	;'x'
   766  00FF65  0A                 	db	10
   767  00FF66  00                 	db	0
   768  00FF67  48                 	db	72	;'H'
   769  00FF68  50                 	db	80	;'P'
   770  00FF69  72                 	db	114	;'r'
   771  00FF6A  6F                 	db	111	;'o'
   772  00FF6B  74                 	db	116	;'t'
   773  00FF6C  43                 	db	67	;'C'
   774  00FF6D  66                 	db	102	;'f'
   775  00FF6E  67                 	db	103	;'g'
   776  00FF6F  32                 	db	50	;'2'
   777  00FF70  20                 	db	32
   778  00FF71  3D                 	db	61	;'='
   779  00FF72  25                 	db	37
   780  00FF73  30                 	db	48	;'0'
   781  00FF74  34                 	db	52	;'4'
   782  00FF75  78                 	db	120	;'x'
   783  00FF76  0A                 	db	10
   784  00FF77  00                 	db	0
   785  00FF78  50                 	db	80	;'P'
   786  00FF79  72                 	db	114	;'r'
   787  00FF7A  6F                 	db	111	;'o'
   788  00FF7B  74                 	db	116	;'t'
   789  00FF7C  41                 	db	65	;'A'
   790  00FF7D  6C                 	db	108	;'l'
   791  00FF7E  65                 	db	101	;'e'
   792  00FF7F  72                 	db	114	;'r'
   793  00FF80  74                 	db	116	;'t'
   794  00FF81  20                 	db	32
   795  00FF82  3D                 	db	61	;'='
   796  00FF83  25                 	db	37
   797  00FF84  30                 	db	48	;'0'
   798  00FF85  34                 	db	52	;'4'
   799  00FF86  78                 	db	120	;'x'
   800  00FF87  0A                 	db	10
   801  00FF88  00                 	db	0
   802  00FF89  50                 	db	80	;'P'
   803  00FF8A  72                 	db	114	;'r'
   804  00FF8B  6F                 	db	111	;'o'
   805  00FF8C  74                 	db	116	;'t'
   806  00FF8D  53                 	db	83	;'S'
   807  00FF8E  74                 	db	116	;'t'
   808  00FF8F  61                 	db	97	;'a'
   809  00FF90  74                 	db	116	;'t'
   810  00FF91  75                 	db	117	;'u'
   811  00FF92  73                 	db	115	;'s'
   812  00FF93  3D                 	db	61	;'='
   813  00FF94  25                 	db	37
   814  00FF95  30                 	db	48	;'0'
   815  00FF96  34                 	db	52	;'4'
   816  00FF97  78                 	db	120	;'x'
   817  00FF98  0A                 	db	10
   818  00FF99  00                 	db	0
   819  00FF9A  41                 	db	65	;'A'
   820  00FF9B  76                 	db	118	;'v'
   821  00FF9C  53                 	db	83	;'S'
   822  00FF9D  4F                 	db	79	;'O'
   823  00FF9E  43                 	db	67	;'C'
   824  00FF9F  20                 	db	32
   825  00FFA0  20                 	db	32
   826  00FFA1  25                 	db	37
   827  00FFA2  33                 	db	51	;'3'
   828  00FFA3  64                 	db	100	;'d'
   829  00FFA4  5B                 	db	91	;'['
   830  00FFA5  25                 	db	37
   831  00FFA6  25                 	db	37
   832  00FFA7  5D                 	db	93	;']'
   833  00FFA8  20                 	db	32
   834  00FFA9  20                 	db	32
   835  00FFAA  00                 	db	0
   836  00FFAB  52                 	db	82	;'R'
   837  00FFAC  65                 	db	101	;'e'
   838  00FFAD  70                 	db	112	;'p'
   839  00FFAE  53                 	db	83	;'S'
   840  00FFAF  4F                 	db	79	;'O'
   841  00FFB0  43                 	db	67	;'C'
   842  00FFB1  20                 	db	32
   843  00FFB2  25                 	db	37
   844  00FFB3  33                 	db	51	;'3'
   845  00FFB4  64                 	db	100	;'d'
   846  00FFB5  5B                 	db	91	;'['
   847  00FFB6  25                 	db	37
   848  00FFB7  25                 	db	37
   849  00FFB8  5D                 	db	93	;']'
   850  00FFB9  20                 	db	32
   851  00FFBA  20                 	db	32
   852  00FFBB  00                 	db	0
   853  00FFBC  44                 	db	68	;'D'
   854  00FFBD  43                 	db	67	;'C'
   855  00FFBE  20                 	db	32
   856  00FFBF  25                 	db	37
   857  00FFC0  35                 	db	53	;'5'
   858  00FFC1  64                 	db	100	;'d'
   859  00FFC2  5B                 	db	91	;'['
   860  00FFC3  6D                 	db	109	;'m'
   861  00FFC4  41                 	db	65	;'A'
   862  00FFC5  68                 	db	104	;'h'
   863  00FFC6  5D                 	db	93	;']'
   864  00FFC7  20                 	db	32
   865  00FFC8  20                 	db	32
   866  00FFC9  00                 	db	0
   867  00FFCA  52                 	db	82	;'R'
   868  00FFCB  43                 	db	67	;'C'
   869  00FFCC  20                 	db	32
   870  00FFCD  25                 	db	37
   871  00FFCE  35                 	db	53	;'5'
   872  00FFCF  64                 	db	100	;'d'
   873  00FFD0  5B                 	db	91	;'['
   874  00FFD1  6D                 	db	109	;'m'
   875  00FFD2  41                 	db	65	;'A'
   876  00FFD3  68                 	db	104	;'h'
   877  00FFD4  5D                 	db	93	;']'
   878  00FFD5  20                 	db	32
   879  00FFD6  20                 	db	32
   880  00FFD7  00                 	db	0
   881  00FFD8                     STR_31:
   882  00FFD8  0A                 	db	10
   883  00FFD9  4D                 	db	77	;'M'
   884  00FFDA  41                 	db	65	;'A'
   885  00FFDB  58                 	db	88	;'X'
   886  00FFDC  31                 	db	49	;'1'
   887  00FFDD  37                 	db	55	;'7'
   888  00FFDE  33                 	db	51	;'3'
   889  00FFDF  34                 	db	52	;'4'
   890  00FFE0  35                 	db	53	;'5'
   891  00FFE1  0A                 	db	10
   892  00FFE2  00                 	db	0
   893  00FFE3  25                 	db	37
   894  00FFE4  35                 	db	53	;'5'
   895  00FFE5  64                 	db	100	;'d'
   896  00FFE6  5B                 	db	91	;'['
   897  00FFE7  6D                 	db	109	;'m'
   898  00FFE8  56                 	db	86	;'V'
   899  00FFE9  5D                 	db	93	;']'
   900  00FFEA  20                 	db	32
   901  00FFEB  20                 	db	32
   902  00FFEC  0A                 	db	10
   903  00FFED  00                 	db	0
   904  00FFEE  25                 	db	37
   905  00FFEF  35                 	db	53	;'5'
   906  00FFF0  64                 	db	100	;'d'
   907  00FFF1  5B                 	db	91	;'['
   908  00FFF2  6D                 	db	109	;'m'
   909  00FFF3  41                 	db	65	;'A'
   910  00FFF4  5D                 	db	93	;']'
   911  00FFF5  20                 	db	32
   912  00FFF6  20                 	db	32
   913  00FFF7  00                 	db	0
   914  00FFF8  62                 	db	98	;'b'
   915  00FFF9  6F                 	db	111	;'o'
   916  00FFFA  6F                 	db	111	;'o'
   917  00FFFB  74                 	db	116	;'t'
   918  00FFFC  21                 	db	33
   919  00FFFD  00                 	db	0
   920  00FFFE  00                 	db	0	; dummy byte at the end
   921  0000                     
   922                           ; #config settings
   923                           
   924                           	psect	cinit
   925  011748                     __pcinit:
   926                           	callstack 0
   927  011748                     start_initialization:
   928                           	callstack 0
   929  011748                     __initialization:
   930                           	callstack 0
   931                           
   932                           ; Initialize objects allocated to BANK0 (11 bytes)
   933                           ; load TBLPTR registers with __pidataBANK0
   934  011748  0ED4               	movlw	low __pidataBANK0
   935  01174A  6EF6               	movwf	tblptrl,c
   936  01174C  0E18               	movlw	high __pidataBANK0
   937  01174E  6EF7               	movwf	tblptrh,c
   938  011750  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   939  011752  6EF8               	movwf	tblptru,c
   940  011754  EE00  F0A1         	lfsr	0,__pdataBANK0
   941  011758  EE10 F00B          	lfsr	1,11
   942  01175C                     copy_data0:
   943  01175C  0009               	tblrd		*+
   944  01175E  CFF5 FFEE          	movff	tablat,postinc0
   945  011762  50E5               	movf	postdec1,w,c
   946  011764  50E1               	movf	fsr1l,w,c
   947  011766  E1FA               	bnz	copy_data0
   948                           
   949                           ; Clear objects allocated to BANK0 (40 bytes)
   950  011768  EE00  F060         	lfsr	0,__pbssBANK0
   951  01176C  0E28               	movlw	40
   952  01176E                     clear_0:
   953  01176E  6AEE               	clrf	postinc0,c
   954  011770  06E8               	decf	wreg,f,c
   955  011772  E1FD               	bnz	clear_0
   956  011774                     end_of_initialization:
   957                           	callstack 0
   958  011774                     __end_of__initialization:
   959                           	callstack 0
   960  011774  0100               	movlb	0
   961  011776  EF8E  F089         	goto	_main	;jump to C main() function
   962                           
   963                           	psect	bssBANK0
   964  000060                     __pbssBANK0:
   965                           	callstack 0
   966  000060                     _nout:
   967                           	callstack 0
   968  000060                     	ds	2
   969  000062                     _width:
   970                           	callstack 0
   971  000062                     	ds	2
   972  000064                     _prec:
   973                           	callstack 0
   974  000064                     	ds	2
   975  000066                     _flags:
   976                           	callstack 0
   977  000066                     	ds	2
   978  000068                     _dbuf:
   979                           	callstack 0
   980  000068                     	ds	32
   981                           
   982                           	psect	dataBANK0
   983  0000A1                     __pdataBANK0:
   984                           	callstack 0
   985  0000A1                     _hello:
   986                           	callstack 0
   987  0000A1                     	ds	11
   988                           
   989                           	psect	cstackBANK0
   990  000088                     __pcstackBANK0:
   991                           	callstack 0
   992  000088                     vfpfcnvrt@ll:
   993                           	callstack 0
   994                           
   995                           ; 8 bytes @ 0x0
   996  000088                     	ds	8
   997  000090                     vfpfcnvrt@llu:
   998                           	callstack 0
   999                           
  1000                           ; 8 bytes @ 0x8
  1001  000090                     	ds	8
  1002  000098                     vfpfcnvrt@done:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x10
  1006  000098                     	ds	2
  1007  00009A                     _vfpfcnvrt$1707:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x12
  1011  00009A                     	ds	2
  1012  00009C                     vfpfcnvrt@c:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x14
  1016  00009C                     	ds	1
  1017  00009D                     _MAX17345_dump$2075:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x15
  1021  00009D                     	ds	2
  1022  00009F                     MAX17345_dump@data:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x17
  1026  00009F                     	ds	2
  1027                           
  1028                           	psect	cstackCOMRAM
  1029  000001                     __pcstackCOMRAM:
  1030                           	callstack 0
  1031  000001                     ?_strlen:
  1032                           	callstack 0
  1033  000001                     ?_isupper:
  1034                           	callstack 0
  1035  000001                     ?_isalpha:
  1036                           	callstack 0
  1037  000001                     ?_isdigit:
  1038                           	callstack 0
  1039  000001                     ?_isspace:
  1040                           	callstack 0
  1041  000001                     ?_islower:
  1042                           	callstack 0
  1043  000001                     ?___wmul:
  1044                           	callstack 0
  1045  000001                     ?___aodiv:
  1046                           	callstack 0
  1047  000001                     ?___aomod:
  1048                           	callstack 0
  1049  000001                     i2c_write_byte@data:
  1050                           	callstack 0
  1051  000001                     SendCharUSB@d:
  1052                           	callstack 0
  1053  000001                     i2c_read_byte@data:
  1054                           	callstack 0
  1055  000001                     ___wmul@multiplier:
  1056                           	callstack 0
  1057  000001                     isalpha@c:
  1058                           	callstack 0
  1059  000001                     isdigit@c:
  1060                           	callstack 0
  1061  000001                     isspace@c:
  1062                           	callstack 0
  1063  000001                     isupper@c:
  1064                           	callstack 0
  1065  000001                     strlen@s:
  1066                           	callstack 0
  1067  000001                     islower@c:
  1068                           	callstack 0
  1069  000001                     ___aodiv@dividend:
  1070                           	callstack 0
  1071  000001                     ___aomod@dividend:
  1072                           	callstack 0
  1073                           
  1074                           ; 8 bytes @ 0x0
  1075  000001                     	ds	1
  1076  000002                     putch@data:
  1077                           	callstack 0
  1078  000002                     MAX17345_write_word@command:
  1079                           	callstack 0
  1080  000002                     showText@t:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x1
  1084  000002                     	ds	1
  1085  000003                     ??_isupper:
  1086  000003                     ??_isalpha:
  1087  000003                     ??_isdigit:
  1088  000003                     ??_isspace:
  1089  000003                     ??_islower:
  1090  000003                     MAX17345_read_word@command:
  1091                           	callstack 0
  1092  000003                     ___wmul@multiplicand:
  1093                           	callstack 0
  1094  000003                     fputc@c:
  1095                           	callstack 0
  1096  000003                     strlen@a:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x2
  1100  000003                     	ds	1
  1101  000004                     MAX17345_write_word@data:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x3
  1105  000004                     	ds	1
  1106  000005                     MAX17345_read_word@data:
  1107                           	callstack 0
  1108  000005                     ___wmul@product:
  1109                           	callstack 0
  1110  000005                     fputc@fp:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x4
  1114  000005                     	ds	1
  1115  000006                     MAX17345_write_word@r:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x5
  1119  000006                     	ds	1
  1120  000007                     ??_fputc:
  1121  000007                     ??_MAX17345_read_word:
  1122  000007                     ?_toupper:
  1123                           	callstack 0
  1124  000007                     _isspace$1755:
  1125                           	callstack 0
  1126  000007                     MAX17345_set_charge_current@charge_current:
  1127                           	callstack 0
  1128  000007                     MAX17345_set_charge_voltage@charge_voltage:
  1129                           	callstack 0
  1130  000007                     MAX17345_set_input_current@input_current:
  1131                           	callstack 0
  1132  000007                     MAX17345_set_relearn_voltage@relearn_voltage:
  1133                           	callstack 0
  1134  000007                     toupper@c:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x6
  1138  000007                     	ds	1
  1139  000008                     ?_atoi:
  1140                           	callstack 0
  1141  000008                     atoi@s:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x7
  1145  000008                     	ds	1
  1146  000009                     ??_toupper:
  1147  000009                     MAX17345_set_charge_current@r:
  1148                           	callstack 0
  1149  000009                     MAX17345_set_charge_voltage@r:
  1150                           	callstack 0
  1151  000009                     MAX17345_set_input_current@r:
  1152                           	callstack 0
  1153  000009                     MAX17345_set_relearn_voltage@r:
  1154                           	callstack 0
  1155  000009                     ___aodiv@divisor:
  1156                           	callstack 0
  1157  000009                     ___aomod@divisor:
  1158                           	callstack 0
  1159                           
  1160                           ; 8 bytes @ 0x8
  1161  000009                     	ds	1
  1162  00000A                     ??_atoi:
  1163                           
  1164                           ; 1 bytes @ 0x9
  1165  00000A                     	ds	1
  1166  00000B                     MAX17345_read_word@dataH:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0xA
  1170  00000B                     	ds	1
  1171  00000C                     MAX17345_read_word@dataL:
  1172                           	callstack 0
  1173  00000C                     fputs@s:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0xB
  1177  00000C                     	ds	1
  1178  00000D                     MAX17345_read_word@r:
  1179                           	callstack 0
  1180  00000D                     _toupper$1804:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0xC
  1184  00000D                     	ds	1
  1185  00000E                     atoi@neg:
  1186                           	callstack 0
  1187  00000E                     fputs@fp:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0xD
  1191  00000E                     	ds	2
  1192  000010                     fputs@c:
  1193                           	callstack 0
  1194  000010                     _atoi$1728:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xF
  1198  000010                     	ds	1
  1199  000011                     ___aodiv@counter:
  1200                           	callstack 0
  1201  000011                     ___aomod@counter:
  1202                           	callstack 0
  1203  000011                     fputs@i:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x10
  1207  000011                     	ds	1
  1208  000012                     ___aodiv@sign:
  1209                           	callstack 0
  1210  000012                     ___aomod@sign:
  1211                           	callstack 0
  1212  000012                     _atoi$1730:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x11
  1216  000012                     	ds	1
  1217  000013                     ?_abs:
  1218                           	callstack 0
  1219  000013                     ?_pad:
  1220                           	callstack 0
  1221  000013                     pad@fp:
  1222                           	callstack 0
  1223  000013                     abs@a:
  1224                           	callstack 0
  1225  000013                     ___aodiv@quotient:
  1226                           	callstack 0
  1227                           
  1228                           ; 8 bytes @ 0x12
  1229  000013                     	ds	1
  1230  000014                     _atoi$1729:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x13
  1234  000014                     	ds	1
  1235  000015                     ??_abs:
  1236  000015                     pad@buf:
  1237                           	callstack 0
  1238  000015                     atoi@n:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x14
  1242  000015                     	ds	2
  1243  000017                     pad@p:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x16
  1247  000017                     	ds	2
  1248  000019                     ??_pad:
  1249                           
  1250                           ; 1 bytes @ 0x18
  1251  000019                     	ds	1
  1252  00001A                     pad@i:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x19
  1256  00001A                     	ds	2
  1257  00001C                     pad@w:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x1B
  1261  00001C                     	ds	2
  1262  00001E                     ?_dtoa:
  1263                           	callstack 0
  1264  00001E                     ?_xtoa:
  1265                           	callstack 0
  1266  00001E                     dtoa@fp:
  1267                           	callstack 0
  1268  00001E                     xtoa@fp:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x1D
  1272  00001E                     	ds	2
  1273  000020                     dtoa@d:
  1274                           	callstack 0
  1275  000020                     xtoa@d:
  1276                           	callstack 0
  1277                           
  1278                           ; 8 bytes @ 0x1F
  1279  000020                     	ds	8
  1280  000028                     ??_dtoa:
  1281  000028                     xtoa@x:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x27
  1285  000028                     	ds	1
  1286  000029                     ??_xtoa:
  1287                           
  1288                           ; 1 bytes @ 0x28
  1289  000029                     	ds	7
  1290  000030                     _dtoa$1681:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x2F
  1294  000030                     	ds	1
  1295  000031                     _xtoa$1692:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x30
  1299  000031                     	ds	1
  1300  000032                     dtoa@p:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x31
  1304  000032                     	ds	1
  1305  000033                     _xtoa$1693:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x32
  1309  000033                     	ds	1
  1310  000034                     dtoa@w:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x33
  1314  000034                     	ds	1
  1315  000035                     xtoa@p:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x34
  1319  000035                     	ds	1
  1320  000036                     dtoa@s:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x35
  1324  000036                     	ds	1
  1325  000037                     xtoa@w:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x36
  1329  000037                     	ds	1
  1330  000038                     dtoa@n:
  1331                           	callstack 0
  1332                           
  1333                           ; 8 bytes @ 0x37
  1334  000038                     	ds	1
  1335  000039                     xtoa@n:
  1336                           	callstack 0
  1337                           
  1338                           ; 8 bytes @ 0x38
  1339  000039                     	ds	7
  1340  000040                     dtoa@i:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x3F
  1344  000040                     	ds	1
  1345  000041                     xtoa@i:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x40
  1349  000041                     	ds	2
  1350  000043                     xtoa@c:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x42
  1354  000043                     	ds	2
  1355  000045                     ?_vfpfcnvrt:
  1356                           	callstack 0
  1357  000045                     vfpfcnvrt@fp:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x44
  1361  000045                     	ds	2
  1362  000047                     vfpfcnvrt@fmt:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x46
  1366  000047                     	ds	2
  1367  000049                     vfpfcnvrt@ap:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x48
  1371  000049                     	ds	2
  1372  00004B                     ??_vfpfcnvrt:
  1373                           
  1374                           ; 1 bytes @ 0x4A
  1375  00004B                     	ds	4
  1376  00004F                     ?_vfprintf:
  1377                           	callstack 0
  1378  00004F                     vfprintf@fp:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x4E
  1382  00004F                     	ds	2
  1383  000051                     vfprintf@fmt:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x50
  1387  000051                     	ds	2
  1388  000053                     vfprintf@ap:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x52
  1392  000053                     	ds	2
  1393  000055                     vfprintf@cfmt:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x54
  1397  000055                     	ds	2
  1398  000057                     ?_printf:
  1399                           	callstack 0
  1400  000057                     printf@fmt:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x56
  1404  000057                     	ds	6
  1405  00005D                     printf@ap:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x5C
  1409  00005D                     	ds	2
  1410  00005F                     MAX17345_init@r:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x5E
  1414  00005F                     	ds	1
  1415  000060                     
  1416                           ; 1 bytes @ 0x5F
  1417 ;;
  1418 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1419 ;;
  1420 ;; *************** function _main *****************
  1421 ;; Defined at:
  1422 ;;		line 104 in file "newmain.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels required when called: 11
  1442 ;; This function calls:
  1443 ;;		_MAX17345_dump
  1444 ;;		_MAX17345_init
  1445 ;;		_showText
  1446 ;; This function is called by:
  1447 ;;		Startup code after reset
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text0
  1452  01131C                     __ptext0:
  1453                           	callstack 0
  1454  01131C                     _main:
  1455                           	callstack 20
  1456  01131C                     
  1457                           ;newmain.c: 107:  TRISAbits.TRISA4 = 0;
  1458  01131C  9881               	bcf	129,4,c	;volatile
  1459                           
  1460                           ;newmain.c: 110:  TRISDbits.TRISD7 = 0;
  1461  01131E  9E84               	bcf	132,7,c	;volatile
  1462                           
  1463                           ;newmain.c: 111:  LATD7 = 1;
  1464  011320  8E7C               	bsf	3964,7,c	;volatile
  1465                           
  1466                           ;newmain.c: 114:  ODCONFbits.ODCF0 = 1;
  1467  011322  010E               	movlb	14	; () banked
  1468  011324  81B2               	bsf	178,0,b	;volatile
  1469                           
  1470                           ;newmain.c: 115:  TRISFbits.TRISF0 = 0;
  1471  011326  9086               	bcf	134,0,c	;volatile
  1472                           
  1473                           ;newmain.c: 116:  ANSELFbits.ANSELF0 = 0;
  1474  011328  91B4               	bcf	180,0,b	;volatile
  1475                           
  1476                           ;newmain.c: 117:  (LATF0=0);
  1477  01132A  907E               	bcf	3966,0,c	;volatile
  1478  01132C                     
  1479                           ; BSR set to: 14
  1480                           ;newmain.c: 121:  OSCCON1 = 0x60;
  1481  01132C  0E60               	movlw	96
  1482  01132E  6F43               	movwf	67,b	;volatile
  1483                           
  1484                           ;newmain.c: 123:  OSCFRQ = 0x02;
  1485  011330  0E02               	movlw	2
  1486  011332  6F49               	movwf	73,b	;volatile
  1487  011334                     
  1488                           ; BSR set to: 14
  1489                           ;newmain.c: 125:  ANSELF &= 0x1f;
  1490  011334  0E1F               	movlw	31
  1491  011336  17B4               	andwf	180,f,b	;volatile
  1492  011338                     
  1493                           ; BSR set to: 14
  1494                           ;newmain.c: 127:  ANSELGbits.ANSELG2 = 0;
  1495  011338  95BC               	bcf	188,2,b	;volatile
  1496  01133A                     
  1497                           ; BSR set to: 14
  1498                           ;newmain.c: 128:  RX5PPSbits.RX5PPS = 0x32;
  1499  01133A  5117               	movf	23,w,b	;volatile
  1500  01133C  0BC0               	andlw	-64
  1501  01133E  0932               	iorlw	50
  1502  011340  6F17               	movwf	23,b	;volatile
  1503  011342                     
  1504                           ; BSR set to: 14
  1505                           ;newmain.c: 131:  BAUD5CON = 0x18;
  1506  011342  0E18               	movlw	24
  1507  011344  6FE2               	movwf	226,b	;volatile
  1508  011346                     
  1509                           ; BSR set to: 14
  1510                           ;newmain.c: 133:  RC5STA = 0x90;
  1511  011346  0E90               	movlw	144
  1512  011348  6FE0               	movwf	224,b	;volatile
  1513  01134A                     
  1514                           ; BSR set to: 14
  1515                           ;newmain.c: 135:  TX5STA = 0x24;
  1516  01134A  0E24               	movlw	36
  1517  01134C  6FE1               	movwf	225,b	;volatile
  1518  01134E                     
  1519                           ; BSR set to: 14
  1520                           ;newmain.c: 137:  SP5BRGL = 103;
  1521  01134E  0E67               	movlw	103
  1522  011350  6FDE               	movwf	222,b	;volatile
  1523  011352                     
  1524                           ; BSR set to: 14
  1525                           ;newmain.c: 141:  RG3PPS = 0x14;
  1526  011352  0E14               	movlw	20
  1527  011354  6F85               	movwf	133,b	;volatile
  1528  011356                     
  1529                           ; BSR set to: 14
  1530                           ;newmain.c: 142:  TRISGbits.TRISG3 = 0;
  1531  011356  9687               	bcf	135,3,c	;volatile
  1532  011358                     
  1533                           ; BSR set to: 14
  1534                           ;newmain.c: 145:  (LATF0=1);
  1535  011358  807E               	bsf	3966,0,c	;volatile
  1536  01135A                     
  1537                           ; BSR set to: 14
  1538                           ;newmain.c: 147:  showText(hello);
  1539  01135A  0EA1               	movlw	low _hello
  1540  01135C  6E02               	movwf	showText@t^0,c
  1541  01135E  0E00               	movlw	high _hello
  1542  011360  6E03               	movwf	(showText@t+1)^0,c
  1543  011362  EC8A  F08B         	call	_showText	;wreg free
  1544  011366                     
  1545                           ;newmain.c: 149:  MAX17345_init();
  1546  011366  ECE5  F088         	call	_MAX17345_init	;wreg free
  1547  01136A                     
  1548                           ;newmain.c: 152:  T2PR = 0x3f;
  1549  01136A  0E3F               	movlw	63
  1550  01136C  6EBC               	movwf	188,c	;volatile
  1551  01136E                     
  1552                           ;newmain.c: 153:  T2CON = 0x80;
  1553  01136E  0E80               	movlw	128
  1554  011370  6EBD               	movwf	189,c	;volatile
  1555  011372                     
  1556                           ;newmain.c: 154:  T2CLKCON = 0x01;
  1557  011372  0E01               	movlw	1
  1558  011374  6EBF               	movwf	191,c	;volatile
  1559  011376                     
  1560                           ;newmain.c: 155:  CCPTMRS1bits.P7TSEL = 0;
  1561  011376  0ECF               	movlw	-49
  1562  011378  16AE               	andwf	174,f,c	;volatile
  1563  01137A                     
  1564                           ;newmain.c: 156:  PWM7DC = 0x03c0;
  1565  01137A  0E03               	movlw	3
  1566  01137C  6EA0               	movwf	160,c	;volatile
  1567  01137E  0EC0               	movlw	192
  1568  011380  6E9F               	movwf	159,c	;volatile
  1569  011382                     
  1570                           ;newmain.c: 157:  PWM7CON = 0x80;
  1571  011382  0E80               	movlw	128
  1572  011384  6EA1               	movwf	161,c	;volatile
  1573  011386                     
  1574                           ;newmain.c: 158:  RE0PPS = 0x0b;
  1575  011386  0E0B               	movlw	11
  1576  011388  010E               	movlb	14	; () banked
  1577  01138A  6F72               	movwf	114,b	;volatile
  1578  01138C                     
  1579                           ; BSR set to: 14
  1580                           ;newmain.c: 159:  RE1PPS = 0x0b;
  1581  01138C  0E0B               	movlw	11
  1582  01138E  6F73               	movwf	115,b	;volatile
  1583  011390                     
  1584                           ; BSR set to: 14
  1585                           ;newmain.c: 160:  TRISEbits.TRISE0 = 0;
  1586  011390  9085               	bcf	133,0,c	;volatile
  1587  011392                     
  1588                           ; BSR set to: 14
  1589                           ;newmain.c: 161:  TRISEbits.TRISE1 = 0;
  1590  011392  9285               	bcf	133,1,c	;volatile
  1591  011394                     l3980:
  1592                           
  1593                           ;newmain.c: 165:  MAX17345_dump();
  1594  011394  EC63  F087         	call	_MAX17345_dump	;wreg free
  1595  011398  EFCA  F089         	goto	l3980
  1596  01139C  EF00  F000         	goto	start
  1597  0113A0                     __end_of_main:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _showText *****************
  1601 ;; Defined at:
  1602 ;;		line 190 in file "newmain.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  t               2    1[COMRAM] PTR unsigned char 
  1605 ;;		 -> hello(11), 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 1
  1624 ;; This function calls:
  1625 ;;		_SendCharUSB
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text1
  1632  011714                     __ptext1:
  1633                           	callstack 0
  1634  011714                     _showText:
  1635                           	callstack 29
  1636  011714                     
  1637                           ;newmain.c: 190: void showText(unsigned char* t);newmain.c: 191: {;newmain.c: 192:  TBLP
      +                          TRU = 0;
  1638  011714  0E00               	movlw	0
  1639  011716  6EF8               	movwf	248,c	;volatile
  1640                           
  1641                           ;newmain.c: 193:  while (*t)
  1642  011718  EF97  F08B         	goto	l3716
  1643  01171C                     l3712:
  1644                           
  1645                           ;newmain.c: 194:  {;newmain.c: 195:   SendCharUSB(*t++);
  1646  01171C  C002  FFD9         	movff	showText@t,fsr2l
  1647  011720  C003  FFDA         	movff	showText@t+1,fsr2h
  1648  011724  50DF               	movf	indf2,w,c
  1649  011726  ECBC  F08A         	call	_SendCharUSB
  1650  01172A  4A02               	infsnz	showText@t^0,f,c
  1651  01172C  2A03               	incf	(showText@t+1)^0,f,c
  1652  01172E                     l3716:
  1653                           
  1654                           ;newmain.c: 193:  while (*t)
  1655  01172E  C002  FFD9         	movff	showText@t,fsr2l
  1656  011732  C003  FFDA         	movff	showText@t+1,fsr2h
  1657  011736  50DF               	movf	indf2,w,c
  1658  011738  A4D8               	btfss	status,2,c
  1659  01173A  EFA1  F08B         	goto	u2931
  1660  01173E  EFA3  F08B         	goto	u2930
  1661  011742                     u2931:
  1662  011742  EF8E  F08B         	goto	l3712
  1663  011746                     u2930:
  1664  011746  0012               	return		;funcret
  1665  011748                     __end_of_showText:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _MAX17345_init *****************
  1669 ;; Defined at:
  1670 ;;		line 166 in file "MAX17435.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  data            2    0        unsigned short 
  1675 ;;  r               1   94[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      unsigned char 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 10
  1692 ;; This function calls:
  1693 ;;		_MAX17345_dump
  1694 ;;		_MAX17345_set_charge_current
  1695 ;;		_MAX17345_set_charge_voltage
  1696 ;;		_MAX17345_set_input_current
  1697 ;;		_MAX17345_set_relearn_voltage
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text2
  1704  0111CA                     __ptext2:
  1705                           	callstack 0
  1706  0111CA                     _MAX17345_init:
  1707                           	callstack 20
  1708  0111CA                     
  1709                           ;MAX17435.c: 169:  unsigned short data;;MAX17435.c: 173:  RC3PPS = 0x19;
  1710  0111CA  0E19               	movlw	25
  1711  0111CC  010E               	movlb	14	; () banked
  1712  0111CE  6F65               	movwf	101,b	;volatile
  1713                           
  1714                           ;MAX17435.c: 174:  RC4PPS = 0x1a;
  1715  0111D0  0E1A               	movlw	26
  1716  0111D2  6F66               	movwf	102,b	;volatile
  1717                           
  1718                           ;MAX17435.c: 175:  SSP1CLKPPS = 0x13;
  1719  0111D4  0E13               	movlw	19
  1720  0111D6  6F19               	movwf	25,b	;volatile
  1721                           
  1722                           ;MAX17435.c: 176:  SSP1DATPPS = 0x14;
  1723  0111D8  0E14               	movlw	20
  1724  0111DA  6F1A               	movwf	26,b	;volatile
  1725  0111DC                     
  1726                           ; BSR set to: 14
  1727                           ;MAX17435.c: 177:  WPUC |= 0x18;
  1728  0111DC  0E18               	movlw	24
  1729  0111DE  13A1               	iorwf	161,f,b	;volatile
  1730  0111E0                     
  1731                           ; BSR set to: 14
  1732                           ;MAX17435.c: 179:  SSP1STAT = 0x40;
  1733  0111E0  0E40               	movlw	64
  1734  0111E2  6E94               	movwf	148,c	;volatile
  1735  0111E4                     
  1736                           ; BSR set to: 14
  1737                           ;MAX17435.c: 180:  SSP1CON1 = 0x08;
  1738  0111E4  0E08               	movlw	8
  1739  0111E6  6E95               	movwf	149,c	;volatile
  1740  0111E8                     
  1741                           ; BSR set to: 14
  1742                           ;MAX17435.c: 181:  SSP1CON2 = 0x00;
  1743  0111E8  0E00               	movlw	0
  1744  0111EA  6E96               	movwf	150,c	;volatile
  1745  0111EC                     
  1746                           ; BSR set to: 14
  1747                           ;MAX17435.c: 182:  SSP1CON3 = 0x00;
  1748  0111EC  0E00               	movlw	0
  1749  0111EE  6E97               	movwf	151,c	;volatile
  1750  0111F0                     
  1751                           ; BSR set to: 14
  1752                           ;MAX17435.c: 183:  SSP1ADD = 255;
  1753  0111F0  6892               	setf	146,c	;volatile
  1754  0111F2                     
  1755                           ; BSR set to: 14
  1756                           ;MAX17435.c: 184:  SSP1CON1bits.SSPEN = 1;
  1757  0111F2  8A95               	bsf	149,5,c	;volatile
  1758  0111F4                     
  1759                           ; BSR set to: 14
  1760                           ;MAX17435.c: 186:  MAX17345_dump();
  1761  0111F4  EC63  F087         	call	_MAX17345_dump	;wreg free
  1762  0111F8                     
  1763                           ;MAX17435.c: 190:  if((r = MAX17345_set_input_current(512)))return r;
  1764  0111F8  0E02               	movlw	2
  1765  0111FA  6E08               	movwf	(MAX17345_set_input_current@input_current+1)^0,c
  1766  0111FC  0E00               	movlw	0
  1767  0111FE  6E07               	movwf	MAX17345_set_input_current@input_current^0,c
  1768  011200  EC14  F08C         	call	_MAX17345_set_input_current	;wreg free
  1769  011204  6E5F               	movwf	MAX17345_init@r^0,c
  1770  011206  505F               	movf	MAX17345_init@r^0,w,c
  1771  011208  B4D8               	btfsc	status,2,c
  1772  01120A  EF09  F089         	goto	u2891
  1773  01120E  EF0B  F089         	goto	u2890
  1774  011212                     u2891:
  1775  011212  EF0D  F089         	goto	l3694
  1776  011216                     u2890:
  1777  011216  EF42  F089         	goto	l231
  1778  01121A                     l3694:
  1779                           
  1780                           ;MAX17435.c: 191:  if((r = MAX17345_set_charge_voltage(16400&0x7ff0)))return r;
  1781  01121A  0E40               	movlw	64
  1782  01121C  6E08               	movwf	(MAX17345_set_charge_voltage@charge_voltage+1)^0,c
  1783  01121E  0E10               	movlw	16
  1784  011220  6E07               	movwf	MAX17345_set_charge_voltage@charge_voltage^0,c
  1785  011222  EC21  F08C         	call	_MAX17345_set_charge_voltage	;wreg free
  1786  011226  6E5F               	movwf	MAX17345_init@r^0,c
  1787  011228  505F               	movf	MAX17345_init@r^0,w,c
  1788  01122A  B4D8               	btfsc	status,2,c
  1789  01122C  EF1A  F089         	goto	u2901
  1790  011230  EF1C  F089         	goto	u2900
  1791  011234                     u2901:
  1792  011234  EF1E  F089         	goto	l3698
  1793  011238                     u2900:
  1794  011238  EF42  F089         	goto	l231
  1795  01123C                     l3698:
  1796                           
  1797                           ;MAX17435.c: 193:  if((r = MAX17345_set_charge_current((512)&0x1f80)))return r;
  1798  01123C  0E02               	movlw	2
  1799  01123E  6E08               	movwf	(MAX17345_set_charge_current@charge_current+1)^0,c
  1800  011240  0E00               	movlw	0
  1801  011242  6E07               	movwf	MAX17345_set_charge_current@charge_current^0,c
  1802  011244  EC2E  F08C         	call	_MAX17345_set_charge_current	;wreg free
  1803  011248  6E5F               	movwf	MAX17345_init@r^0,c
  1804  01124A  505F               	movf	MAX17345_init@r^0,w,c
  1805  01124C  B4D8               	btfsc	status,2,c
  1806  01124E  EF2B  F089         	goto	u2911
  1807  011252  EF2D  F089         	goto	u2910
  1808  011256                     u2911:
  1809  011256  EF2F  F089         	goto	l3702
  1810  01125A                     u2910:
  1811  01125A  EF42  F089         	goto	l231
  1812  01125E                     l3702:
  1813                           
  1814                           ;MAX17435.c: 195:  if((r = MAX17345_set_relearn_voltage(16001&0x7ff1)))return r;
  1815  01125E  0E3E               	movlw	62
  1816  011260  6E08               	movwf	(MAX17345_set_relearn_voltage@relearn_voltage+1)^0,c
  1817  011262  0E81               	movlw	129
  1818  011264  6E07               	movwf	MAX17345_set_relearn_voltage@relearn_voltage^0,c
  1819  011266  EC07  F08C         	call	_MAX17345_set_relearn_voltage	;wreg free
  1820  01126A  6E5F               	movwf	MAX17345_init@r^0,c
  1821  01126C  505F               	movf	MAX17345_init@r^0,w,c
  1822  01126E  B4D8               	btfsc	status,2,c
  1823  011270  EF3C  F089         	goto	u2921
  1824  011274  EF3E  F089         	goto	u2920
  1825  011278                     u2921:
  1826  011278  EF40  F089         	goto	l3706
  1827  01127C                     u2920:
  1828  01127C  EF42  F089         	goto	l231
  1829  011280                     l3706:
  1830                           
  1831                           ;MAX17435.c: 202:  MAX17345_dump();
  1832  011280  EC63  F087         	call	_MAX17345_dump	;wreg free
  1833  011284                     l231:
  1834  011284  0012               	return		;funcret
  1835  011286                     __end_of_MAX17345_init:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _MAX17345_set_relearn_voltage *****************
  1839 ;; Defined at:
  1840 ;;		line 135 in file "MAX17435.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  relearn_volt    2    6[COMRAM] unsigned short 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  r               1    8[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;Total ram usage:        3 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 2
  1861 ;; This function calls:
  1862 ;;		_MAX17345_write_word
  1863 ;; This function is called by:
  1864 ;;		_MAX17345_init
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text3
  1869  01180E                     __ptext3:
  1870                           	callstack 0
  1871  01180E                     _MAX17345_set_relearn_voltage:
  1872                           	callstack 27
  1873  01180E                     
  1874                           ;MAX17435.c: 139:  r = MAX17345_write_word(0x3D, relearn_voltage);
  1875  01180E  0E00               	movlw	0
  1876  011810  6E03               	movwf	(MAX17345_write_word@command+1)^0,c
  1877  011812  0E3D               	movlw	61
  1878  011814  6E02               	movwf	MAX17345_write_word@command^0,c
  1879  011816  C007  F004         	movff	MAX17345_set_relearn_voltage@relearn_voltage,MAX17345_write_word@data
  1880  01181A  C008  F005         	movff	MAX17345_set_relearn_voltage@relearn_voltage+1,MAX17345_write_word@data+1
  1881  01181E  ECD0  F089         	call	_MAX17345_write_word	;wreg free
  1882  011822  6E09               	movwf	MAX17345_set_relearn_voltage@r^0,c
  1883  011824                     
  1884                           ;MAX17435.c: 140:  return r;
  1885  011824  5009               	movf	MAX17345_set_relearn_voltage@r^0,w,c
  1886  011826  0012               	return		;funcret
  1887  011828                     __end_of_MAX17345_set_relearn_voltage:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _MAX17345_set_input_current *****************
  1891 ;; Defined at:
  1892 ;;		line 127 in file "MAX17435.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  input_curren    2    6[COMRAM] unsigned short 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  r               1    8[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      unsigned char 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;Total ram usage:        3 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 2
  1913 ;; This function calls:
  1914 ;;		_MAX17345_write_word
  1915 ;; This function is called by:
  1916 ;;		_MAX17345_init
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text4
  1921  011828                     __ptext4:
  1922                           	callstack 0
  1923  011828                     _MAX17345_set_input_current:
  1924                           	callstack 27
  1925  011828                     
  1926                           ;MAX17435.c: 131:  r = MAX17345_write_word(0x3F, input_current);
  1927  011828  0E00               	movlw	0
  1928  01182A  6E03               	movwf	(MAX17345_write_word@command+1)^0,c
  1929  01182C  0E3F               	movlw	63
  1930  01182E  6E02               	movwf	MAX17345_write_word@command^0,c
  1931  011830  C007  F004         	movff	MAX17345_set_input_current@input_current,MAX17345_write_word@data
  1932  011834  C008  F005         	movff	MAX17345_set_input_current@input_current+1,MAX17345_write_word@data+1
  1933  011838  ECD0  F089         	call	_MAX17345_write_word	;wreg free
  1934  01183C  6E09               	movwf	MAX17345_set_input_current@r^0,c
  1935  01183E                     
  1936                           ;MAX17435.c: 132:  return r;
  1937  01183E  5009               	movf	MAX17345_set_input_current@r^0,w,c
  1938  011840  0012               	return		;funcret
  1939  011842                     __end_of_MAX17345_set_input_current:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _MAX17345_set_charge_voltage *****************
  1943 ;; Defined at:
  1944 ;;		line 119 in file "MAX17435.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  charge_volta    2    6[COMRAM] unsigned short 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  r               1    8[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      unsigned char 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;Total ram usage:        3 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 2
  1965 ;; This function calls:
  1966 ;;		_MAX17345_write_word
  1967 ;; This function is called by:
  1968 ;;		_MAX17345_init
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text5
  1973  011842                     __ptext5:
  1974                           	callstack 0
  1975  011842                     _MAX17345_set_charge_voltage:
  1976                           	callstack 27
  1977  011842                     
  1978                           ;MAX17435.c: 123:  r = MAX17345_write_word(0x15, charge_voltage);
  1979  011842  0E00               	movlw	0
  1980  011844  6E03               	movwf	(MAX17345_write_word@command+1)^0,c
  1981  011846  0E15               	movlw	21
  1982  011848  6E02               	movwf	MAX17345_write_word@command^0,c
  1983  01184A  C007  F004         	movff	MAX17345_set_charge_voltage@charge_voltage,MAX17345_write_word@data
  1984  01184E  C008  F005         	movff	MAX17345_set_charge_voltage@charge_voltage+1,MAX17345_write_word@data+1
  1985  011852  ECD0  F089         	call	_MAX17345_write_word	;wreg free
  1986  011856  6E09               	movwf	MAX17345_set_charge_voltage@r^0,c
  1987  011858                     
  1988                           ;MAX17435.c: 124:  return r;
  1989  011858  5009               	movf	MAX17345_set_charge_voltage@r^0,w,c
  1990  01185A  0012               	return		;funcret
  1991  01185C                     __end_of_MAX17345_set_charge_voltage:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _MAX17345_set_charge_current *****************
  1995 ;; Defined at:
  1996 ;;		line 111 in file "MAX17435.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  charge_curre    2    6[COMRAM] unsigned short 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  r               1    8[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;Total ram usage:        3 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 2
  2017 ;; This function calls:
  2018 ;;		_MAX17345_write_word
  2019 ;; This function is called by:
  2020 ;;		_MAX17345_init
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text6
  2025  01185C                     __ptext6:
  2026                           	callstack 0
  2027  01185C                     _MAX17345_set_charge_current:
  2028                           	callstack 27
  2029  01185C                     
  2030                           ;MAX17435.c: 115:  r = MAX17345_write_word(0x14, charge_current);
  2031  01185C  0E00               	movlw	0
  2032  01185E  6E03               	movwf	(MAX17345_write_word@command+1)^0,c
  2033  011860  0E14               	movlw	20
  2034  011862  6E02               	movwf	MAX17345_write_word@command^0,c
  2035  011864  C007  F004         	movff	MAX17345_set_charge_current@charge_current,MAX17345_write_word@data
  2036  011868  C008  F005         	movff	MAX17345_set_charge_current@charge_current+1,MAX17345_write_word@data+1
  2037  01186C  ECD0  F089         	call	_MAX17345_write_word	;wreg free
  2038  011870  6E09               	movwf	MAX17345_set_charge_current@r^0,c
  2039  011872                     
  2040                           ;MAX17435.c: 116:  return r;
  2041  011872  5009               	movf	MAX17345_set_charge_current@r^0,w,c
  2042  011874  0012               	return		;funcret
  2043  011876                     __end_of_MAX17345_set_charge_current:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _MAX17345_write_word *****************
  2047 ;; Defined at:
  2048 ;;		line 77 in file "MAX17435.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  command         2    1[COMRAM] unsigned short 
  2051 ;;  data            2    3[COMRAM] unsigned short 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  r               1    5[COMRAM] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      unsigned char 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;Total ram usage:        5 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 1
  2070 ;; This function calls:
  2071 ;;		_i2c_start
  2072 ;;		_i2c_stop
  2073 ;;		_i2c_write_byte
  2074 ;; This function is called by:
  2075 ;;		_MAX17345_set_charge_current
  2076 ;;		_MAX17345_set_charge_voltage
  2077 ;;		_MAX17345_set_input_current
  2078 ;;		_MAX17345_set_relearn_voltage
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text7
  2083  0113A0                     __ptext7:
  2084                           	callstack 0
  2085  0113A0                     _MAX17345_write_word:
  2086                           	callstack 27
  2087  0113A0                     
  2088                           ;MAX17435.c: 81:  i2c_start();
  2089  0113A0  EC58  F08C         	call	_i2c_start	;wreg free
  2090                           
  2091                           ;MAX17435.c: 82:  if (r = i2c_write_byte(0x12))return r;
  2092  0113A4  0E12               	movlw	18
  2093  0113A6  ECBD  F08B         	call	_i2c_write_byte
  2094  0113AA  6E06               	movwf	MAX17345_write_word@r^0,c
  2095  0113AC  5006               	movf	MAX17345_write_word@r^0,w,c
  2096  0113AE  B4D8               	btfsc	status,2,c
  2097  0113B0  EFDC  F089         	goto	u2801
  2098  0113B4  EFDE  F089         	goto	u2800
  2099  0113B8                     u2801:
  2100  0113B8  EFE1  F089         	goto	l3590
  2101  0113BC                     u2800:
  2102  0113BC                     l3586:
  2103  0113BC  5006               	movf	MAX17345_write_word@r^0,w,c
  2104  0113BE  EF0E  F08A         	goto	l198
  2105  0113C2                     l3590:
  2106                           
  2107                           ;MAX17435.c: 83:  if (r = i2c_write_byte(command))return r;
  2108  0113C2  5002               	movf	MAX17345_write_word@command^0,w,c
  2109  0113C4  ECBD  F08B         	call	_i2c_write_byte
  2110  0113C8  6E06               	movwf	MAX17345_write_word@r^0,c
  2111  0113CA  5006               	movf	MAX17345_write_word@r^0,w,c
  2112  0113CC  B4D8               	btfsc	status,2,c
  2113  0113CE  EFEB  F089         	goto	u2811
  2114  0113D2  EFED  F089         	goto	u2810
  2115  0113D6                     u2811:
  2116  0113D6  EFEF  F089         	goto	l3596
  2117  0113DA                     u2810:
  2118  0113DA  EFDE  F089         	goto	l3586
  2119  0113DE                     l3596:
  2120                           
  2121                           ;MAX17435.c: 84:  if (r = i2c_write_byte(data))return r;
  2122  0113DE  5004               	movf	MAX17345_write_word@data^0,w,c
  2123  0113E0  ECBD  F08B         	call	_i2c_write_byte
  2124  0113E4  6E06               	movwf	MAX17345_write_word@r^0,c
  2125  0113E6  5006               	movf	MAX17345_write_word@r^0,w,c
  2126  0113E8  B4D8               	btfsc	status,2,c
  2127  0113EA  EFF9  F089         	goto	u2821
  2128  0113EE  EFFB  F089         	goto	u2820
  2129  0113F2                     u2821:
  2130  0113F2  EFFD  F089         	goto	l3602
  2131  0113F6                     u2820:
  2132  0113F6  EFDE  F089         	goto	l3586
  2133  0113FA                     l3602:
  2134                           
  2135                           ;MAX17435.c: 85:  if (r = i2c_write_byte(data >> 8))return r;
  2136  0113FA  5005               	movf	(MAX17345_write_word@data+1)^0,w,c
  2137  0113FC  ECBD  F08B         	call	_i2c_write_byte
  2138  011400  6E06               	movwf	MAX17345_write_word@r^0,c
  2139  011402  5006               	movf	MAX17345_write_word@r^0,w,c
  2140  011404  B4D8               	btfsc	status,2,c
  2141  011406  EF07  F08A         	goto	u2831
  2142  01140A  EF09  F08A         	goto	u2830
  2143  01140E                     u2831:
  2144  01140E  EF0B  F08A         	goto	l3608
  2145  011412                     u2830:
  2146  011412  EFDE  F089         	goto	l3586
  2147  011416                     l3608:
  2148                           
  2149                           ;MAX17435.c: 86:  i2c_stop();
  2150  011416  EC4F  F08C         	call	_i2c_stop	;wreg free
  2151  01141A                     
  2152                           ;MAX17435.c: 87:  return 0;
  2153  01141A  0E00               	movlw	0
  2154  01141C                     l198:
  2155  01141C  0012               	return		;funcret
  2156  01141E                     __end_of_MAX17345_write_word:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _MAX17345_dump *****************
  2160 ;; Defined at:
  2161 ;;		line 143 in file "MAX17435.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  data            2   23[BANK0 ] unsigned short 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;Total ram usage:        4 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 9
  2182 ;; This function calls:
  2183 ;;		_MAX17345_read_word
  2184 ;;		___wmul
  2185 ;;		_printf
  2186 ;; This function is called by:
  2187 ;;		_MAX17345_init
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text8
  2193  010EC6                     __ptext8:
  2194                           	callstack 0
  2195  010EC6                     _MAX17345_dump:
  2196                           	callstack 20
  2197  010EC6                     
  2198                           ;MAX17435.c: 145:     unsigned short data = 0;
  2199  010EC6  0E00               	movlw	0
  2200  010EC8  0100               	movlb	0	; () banked
  2201  010ECA  6FA0               	movwf	(MAX17345_dump@data+1)& (0+255),b
  2202  010ECC  0E00               	movlw	0
  2203  010ECE  6F9F               	movwf	MAX17345_dump@data& (0+255),b
  2204  010ED0                     
  2205                           ; BSR set to: 0
  2206                           ;MAX17435.c: 150:     printf("\nMAX17345\n");
  2207  010ED0  0ED8               	movlw	low STR_31
  2208  010ED2  6E57               	movwf	printf@fmt^0,c
  2209  010ED4  0EFF               	movlw	high STR_31
  2210  010ED6  6E58               	movwf	(printf@fmt+1)^0,c
  2211  010ED8  ECD1  F08B         	call	_printf	;wreg free
  2212  010EDC                     
  2213                           ;MAX17435.c: 151:     if(!MAX17345_read_word(0x14,&data)){printf("ChargeCurrent  =%04x\n
      +                          ",data);}
  2214  010EDC  0E00               	movlw	0
  2215  010EDE  6E04               	movwf	(MAX17345_read_word@command+1)^0,c
  2216  010EE0  0E14               	movlw	20
  2217  010EE2  6E03               	movwf	MAX17345_read_word@command^0,c
  2218  010EE4  0E9F               	movlw	low MAX17345_dump@data
  2219  010EE6  6E05               	movwf	MAX17345_read_word@data^0,c
  2220  010EE8  0E00               	movlw	high MAX17345_dump@data
  2221  010EEA  6E06               	movwf	(MAX17345_read_word@data+1)^0,c
  2222  010EEC  EC13  F088         	call	_MAX17345_read_word	;wreg free
  2223  010EF0  0900               	iorlw	0
  2224  010EF2  A4D8               	btfss	status,2,c
  2225  010EF4  EF7E  F087         	goto	u2841
  2226  010EF8  EF80  F087         	goto	u2840
  2227  010EFC                     u2841:
  2228  010EFC  EF8A  F087         	goto	l3654
  2229  010F00                     u2840:
  2230  010F00  0ED5               	movlw	low STR_32
  2231  010F02  6E57               	movwf	printf@fmt^0,c
  2232  010F04  0EFE               	movlw	high STR_32
  2233  010F06  6E58               	movwf	(printf@fmt+1)^0,c
  2234  010F08  C09F  F059         	movff	MAX17345_dump@data,?_printf+2
  2235  010F0C  C0A0  F05A         	movff	MAX17345_dump@data+1,?_printf+3
  2236  010F10  ECD1  F08B         	call	_printf	;wreg free
  2237  010F14                     l3654:
  2238                           
  2239                           ;MAX17435.c: 152:     if(!MAX17345_read_word(0x15,&data)){printf("ChargeVoltage  =%04x\n
      +                          ",data);}
  2240  010F14  0E00               	movlw	0
  2241  010F16  6E04               	movwf	(MAX17345_read_word@command+1)^0,c
  2242  010F18  0E15               	movlw	21
  2243  010F1A  6E03               	movwf	MAX17345_read_word@command^0,c
  2244  010F1C  0E9F               	movlw	low MAX17345_dump@data
  2245  010F1E  6E05               	movwf	MAX17345_read_word@data^0,c
  2246  010F20  0E00               	movlw	high MAX17345_dump@data
  2247  010F22  6E06               	movwf	(MAX17345_read_word@data+1)^0,c
  2248  010F24  EC13  F088         	call	_MAX17345_read_word	;wreg free
  2249  010F28  0900               	iorlw	0
  2250  010F2A  A4D8               	btfss	status,2,c
  2251  010F2C  EF9A  F087         	goto	u2851
  2252  010F30  EF9C  F087         	goto	u2850
  2253  010F34                     u2851:
  2254  010F34  EFA6  F087         	goto	l3658
  2255  010F38                     u2850:
  2256  010F38  0EBF               	movlw	low STR_33
  2257  010F3A  6E57               	movwf	printf@fmt^0,c
  2258  010F3C  0EFE               	movlw	high STR_33
  2259  010F3E  6E58               	movwf	(printf@fmt+1)^0,c
  2260  010F40  C09F  F059         	movff	MAX17345_dump@data,?_printf+2
  2261  010F44  C0A0  F05A         	movff	MAX17345_dump@data+1,?_printf+3
  2262  010F48  ECD1  F08B         	call	_printf	;wreg free
  2263  010F4C                     l3658:
  2264                           
  2265                           ;MAX17435.c: 153:     if(!MAX17345_read_word(0x3d,&data)){printf("Relearn Voltage=%04x\n
      +                          ",data);}
  2266  010F4C  0E00               	movlw	0
  2267  010F4E  6E04               	movwf	(MAX17345_read_word@command+1)^0,c
  2268  010F50  0E3D               	movlw	61
  2269  010F52  6E03               	movwf	MAX17345_read_word@command^0,c
  2270  010F54  0E9F               	movlw	low MAX17345_dump@data
  2271  010F56  6E05               	movwf	MAX17345_read_word@data^0,c
  2272  010F58  0E00               	movlw	high MAX17345_dump@data
  2273  010F5A  6E06               	movwf	(MAX17345_read_word@data+1)^0,c
  2274  010F5C  EC13  F088         	call	_MAX17345_read_word	;wreg free
  2275  010F60  0900               	iorlw	0
  2276  010F62  A4D8               	btfss	status,2,c
  2277  010F64  EFB6  F087         	goto	u2861
  2278  010F68  EFB8  F087         	goto	u2860
  2279  010F6C                     u2861:
  2280  010F6C  EFC2  F087         	goto	l3662
  2281  010F70                     u2860:
  2282  010F70  0EEB               	movlw	low STR_34
  2283  010F72  6E57               	movwf	printf@fmt^0,c
  2284  010F74  0EFE               	movlw	high STR_34
  2285  010F76  6E58               	movwf	(printf@fmt+1)^0,c
  2286  010F78  C09F  F059         	movff	MAX17345_dump@data,?_printf+2
  2287  010F7C  C0A0  F05A         	movff	MAX17345_dump@data+1,?_printf+3
  2288  010F80  ECD1  F08B         	call	_printf	;wreg free
  2289  010F84                     l3662:
  2290                           
  2291                           ;MAX17435.c: 154:     if(!MAX17345_read_word(0x3e,&data)){printf("IINPVoltage    =%04x %
      +                          5d[mA]\n",data,data*80);}
  2292  010F84  0E00               	movlw	0
  2293  010F86  6E04               	movwf	(MAX17345_read_word@command+1)^0,c
  2294  010F88  0E3E               	movlw	62
  2295  010F8A  6E03               	movwf	MAX17345_read_word@command^0,c
  2296  010F8C  0E9F               	movlw	low MAX17345_dump@data
  2297  010F8E  6E05               	movwf	MAX17345_read_word@data^0,c
  2298  010F90  0E00               	movlw	high MAX17345_dump@data
  2299  010F92  6E06               	movwf	(MAX17345_read_word@data+1)^0,c
  2300  010F94  EC13  F088         	call	_MAX17345_read_word	;wreg free
  2301  010F98  0900               	iorlw	0
  2302  010F9A  A4D8               	btfss	status,2,c
  2303  010F9C  EFD2  F087         	goto	u2871
  2304  010FA0  EFD4  F087         	goto	u2870
  2305  010FA4                     u2871:
  2306  010FA4  EFF0  F087         	goto	l3668
  2307  010FA8                     u2870:
  2308  010FA8  C09F  F001         	movff	MAX17345_dump@data,___wmul@multiplier
  2309  010FAC  C0A0  F002         	movff	MAX17345_dump@data+1,___wmul@multiplier+1
  2310  010FB0  0E00               	movlw	0
  2311  010FB2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2312  010FB4  0E50               	movlw	80
  2313  010FB6  6E03               	movwf	___wmul@multiplicand^0,c
  2314  010FB8  ECE4  F08B         	call	___wmul	;wreg free
  2315  010FBC  C001  F09D         	movff	?___wmul,_MAX17345_dump$2075
  2316  010FC0  C002  F09E         	movff	?___wmul+1,_MAX17345_dump$2075+1
  2317  010FC4  0E13               	movlw	low STR_35
  2318  010FC6  6E57               	movwf	printf@fmt^0,c
  2319  010FC8  0EFD               	movlw	high STR_35
  2320  010FCA  6E58               	movwf	(printf@fmt+1)^0,c
  2321  010FCC  C09F  F059         	movff	MAX17345_dump@data,?_printf+2
  2322  010FD0  C0A0  F05A         	movff	MAX17345_dump@data+1,?_printf+3
  2323  010FD4  C09D  F05B         	movff	_MAX17345_dump$2075,?_printf+4
  2324  010FD8  C09E  F05C         	movff	_MAX17345_dump$2075+1,?_printf+5
  2325  010FDC  ECD1  F08B         	call	_printf	;wreg free
  2326  010FE0                     l3668:
  2327                           
  2328                           ;MAX17435.c: 155:     if(!MAX17345_read_word(0x3f,&data)){printf("InputCurrent   =%04x %
      +                          5d[mA]\n",data,data*2);}
  2329  010FE0  0E00               	movlw	0
  2330  010FE2  6E04               	movwf	(MAX17345_read_word@command+1)^0,c
  2331  010FE4  0E3F               	movlw	63
  2332  010FE6  6E03               	movwf	MAX17345_read_word@command^0,c
  2333  010FE8  0E9F               	movlw	low MAX17345_dump@data
  2334  010FEA  6E05               	movwf	MAX17345_read_word@data^0,c
  2335  010FEC  0E00               	movlw	high MAX17345_dump@data
  2336  010FEE  6E06               	movwf	(MAX17345_read_word@data+1)^0,c
  2337  010FF0  EC13  F088         	call	_MAX17345_read_word	;wreg free
  2338  010FF4  0900               	iorlw	0
  2339  010FF6  A4D8               	btfss	status,2,c
  2340  010FF8  EF00  F088         	goto	u2881
  2341  010FFC  EF02  F088         	goto	u2880
  2342  011000                     u2881:
  2343  011000  EF12  F088         	goto	l227
  2344  011004                     u2880:
  2345  011004  0E31               	movlw	low STR_36
  2346  011006  6E57               	movwf	printf@fmt^0,c
  2347  011008  0EFD               	movlw	high STR_36
  2348  01100A  6E58               	movwf	(printf@fmt+1)^0,c
  2349  01100C  C09F  F059         	movff	MAX17345_dump@data,?_printf+2
  2350  011010  C0A0  F05A         	movff	MAX17345_dump@data+1,?_printf+3
  2351  011014  90D8               	bcf	status,0,c
  2352  011016  0100               	movlb	0	; () banked
  2353  011018  359F               	rlcf	MAX17345_dump@data& (0+255),w,b
  2354  01101A  6E5B               	movwf	(?_printf+4)^0,c
  2355  01101C  35A0               	rlcf	(MAX17345_dump@data+1)& (0+255),w,b
  2356  01101E  6E5C               	movwf	(?_printf+5)^0,c
  2357  011020  ECD1  F08B         	call	_printf	;wreg free
  2358  011024                     l227:
  2359  011024  0012               	return		;funcret
  2360  011026                     __end_of_MAX17345_dump:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _printf *****************
  2364 ;; Defined at:
  2365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  fmt             2   86[COMRAM] PTR const unsigned char 
  2368 ;;		 -> STR_36(30), STR_35(30), STR_34(22), STR_33(22), 
  2369 ;;		 -> STR_32(22), STR_31(11), STR_30(17), STR_29(17), 
  2370 ;;		 -> STR_28(26), STR_27(26), STR_26(26), STR_25(28), 
  2371 ;;		 -> STR_24(26), STR_23(26), STR_22(26), STR_21(26), 
  2372 ;;		 -> STR_20(26), STR_19(26), STR_18(26), STR_17(26), 
  2373 ;;		 -> STR_16(27), STR_15(27), STR_14(17), STR_13(17), 
  2374 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2375 ;;		 -> STR_8(17), STR_7(11), STR_6(10), STR_5(17), 
  2376 ;;		 -> STR_4(17), STR_3(14), STR_2(14), STR_1(6), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  ap              2   92[COMRAM] PTR void [1]
  2379 ;;		 -> ?_printf(2), 
  2380 ;;  ret             2    0        int 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  2   86[COMRAM] int 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2390 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;Total ram usage:        8 bytes
  2395 ;; Hardware stack levels used: 1
  2396 ;; Hardware stack levels required when called: 8
  2397 ;; This function calls:
  2398 ;;		_vfprintf
  2399 ;; This function is called by:
  2400 ;;		_MAX17345_dump
  2401 ;;		_MAX17320_init
  2402 ;;		_MAX17320_dump
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text9
  2407  0117A2                     __ptext9:
  2408                           	callstack 0
  2409  0117A2                     _printf:
  2410                           	callstack 20
  2411  0117A2  0E59               	movlw	low (?_printf+2)
  2412  0117A4  6E5D               	movwf	printf@ap^0,c
  2413  0117A6  0E00               	movlw	high (?_printf+2)
  2414  0117A8  6E5E               	movwf	(printf@ap+1)^0,c
  2415  0117AA  0E00               	movlw	0
  2416  0117AC  6E4F               	movwf	vfprintf@fp^0,c
  2417  0117AE  0E00               	movlw	0
  2418  0117B0  6E50               	movwf	(vfprintf@fp+1)^0,c
  2419  0117B2  C057  F051         	movff	printf@fmt,vfprintf@fmt
  2420  0117B6  C058  F052         	movff	printf@fmt+1,vfprintf@fmt+1
  2421  0117BA  0E5D               	movlw	low printf@ap
  2422  0117BC  6E53               	movwf	vfprintf@ap^0,c
  2423  0117BE  0E00               	movlw	high printf@ap
  2424  0117C0  6E54               	movwf	(vfprintf@ap+1)^0,c
  2425  0117C2  EC0F  F08A         	call	_vfprintf	;wreg free
  2426  0117C6  0012               	return		;funcret
  2427  0117C8                     __end_of_printf:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _vfprintf *****************
  2431 ;; Defined at:
  2432 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2435 ;;		 -> NULL(0), 
  2436 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  2437 ;;		 -> STR_36(30), STR_35(30), STR_34(22), STR_33(22), 
  2438 ;;		 -> STR_32(22), STR_31(11), STR_30(17), STR_29(17), 
  2439 ;;		 -> STR_28(26), STR_27(26), STR_26(26), STR_25(28), 
  2440 ;;		 -> STR_24(26), STR_23(26), STR_22(26), STR_21(26), 
  2441 ;;		 -> STR_20(26), STR_19(26), STR_18(26), STR_17(26), 
  2442 ;;		 -> STR_16(27), STR_15(27), STR_14(17), STR_13(17), 
  2443 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2444 ;;		 -> STR_8(17), STR_7(11), STR_6(10), STR_5(17), 
  2445 ;;		 -> STR_4(17), STR_3(14), STR_2(14), STR_1(6), 
  2446 ;;  ap              2   82[COMRAM] PTR PTR void 
  2447 ;;		 -> printf@ap(2), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  2450 ;;		 -> STR_36(30), STR_35(30), STR_34(22), STR_33(22), 
  2451 ;;		 -> STR_32(22), STR_31(11), STR_30(17), STR_29(17), 
  2452 ;;		 -> STR_28(26), STR_27(26), STR_26(26), STR_25(28), 
  2453 ;;		 -> STR_24(26), STR_23(26), STR_22(26), STR_21(26), 
  2454 ;;		 -> STR_20(26), STR_19(26), STR_18(26), STR_17(26), 
  2455 ;;		 -> STR_16(27), STR_15(27), STR_14(17), STR_13(17), 
  2456 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2457 ;;		 -> STR_8(17), STR_7(11), STR_6(10), STR_5(17), 
  2458 ;;		 -> STR_4(17), STR_3(14), STR_2(14), STR_1(6), 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2   78[COMRAM] int 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2468 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;Total ram usage:        8 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 7
  2475 ;; This function calls:
  2476 ;;		_vfpfcnvrt
  2477 ;; This function is called by:
  2478 ;;		_printf
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text10
  2483  01141E                     __ptext10:
  2484                           	callstack 0
  2485  01141E                     _vfprintf:
  2486                           	callstack 20
  2487  01141E                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2489  01141E  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  2490  011422  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2491  011426                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2493  011426  0E00               	movlw	0
  2494  011428  0100               	movlb	0	; () banked
  2495  01142A  6F61               	movwf	(_nout+1)& (0+255),b
  2496  01142C  0E00               	movlw	0
  2497  01142E  6F60               	movwf	_nout& (0+255),b
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2500  011430  EF2D  F08A         	goto	l3530
  2501  011434                     l3528:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2505  011434  C04F  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  2506  011438  C050  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2507  01143C  0E55               	movlw	low vfprintf@cfmt
  2508  01143E  6E47               	movwf	vfpfcnvrt@fmt^0,c
  2509  011440  0E00               	movlw	high vfprintf@cfmt
  2510  011442  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2511  011444  C053  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  2512  011448  C054  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2513  01144C  EC00  F080         	call	_vfpfcnvrt	;wreg free
  2514  011450  5045               	movf	?_vfpfcnvrt^0,w,c
  2515  011452  0100               	movlb	0	; () banked
  2516  011454  2760               	addwf	_nout& (0+255),f,b
  2517  011456  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  2518  011458  2361               	addwfc	(_nout+1)& (0+255),f,b
  2519  01145A                     l3530:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2523  01145A  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  2524  01145E  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2525  011462                     	if	0	;tblptru may be non-zero
  2526  011462                     	endif
  2527  011462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2528  011462  0E00               	movlw	low (__mediumconst shr (0+16))
  2529  011464  6EF8               	movwf	tblptru,c
  2530  011466                     	endif
  2531  011466  0008               	tblrd		*
  2532  011468  50F5               	movf	tablat,w,c
  2533  01146A  0900               	iorlw	0
  2534  01146C  A4D8               	btfss	status,2,c
  2535  01146E  EF3B  F08A         	goto	u2741
  2536  011472  EF3D  F08A         	goto	u2740
  2537  011476                     u2741:
  2538  011476  EF1A  F08A         	goto	l3528
  2539  01147A                     u2740:
  2540  01147A                     
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2543  01147A  C060  F04F         	movff	_nout,?_vfprintf
  2544  01147E  C061  F050         	movff	_nout+1,?_vfprintf+1
  2545  011482                     
  2546                           ; BSR set to: 0
  2547  011482  0012               	return		;funcret
  2548  011484                     __end_of_vfprintf:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _vfpfcnvrt *****************
  2552 ;; Defined at:
  2553 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  2556 ;;		 -> NULL(0), 
  2557 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  2558 ;;		 -> vfprintf@cfmt(2), 
  2559 ;;  ap              2   72[COMRAM] PTR PTR void 
  2560 ;;		 -> printf@ap(2), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  llu             8    8[BANK0 ] unsigned long long 
  2563 ;;  ll              8    0[BANK0 ] long long 
  2564 ;;  f               4    0        long long 
  2565 ;;  vp              3    0        PTR void 
  2566 ;;  ct              3    0        unsigned char [3]
  2567 ;;  cp              3    0        PTR unsigned char 
  2568 ;;  done            2   16[BANK0 ] int 
  2569 ;;  i               2    0        int 
  2570 ;;  c               1   20[BANK0 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2   68[COMRAM] int 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:       31 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 6
  2587 ;; This function calls:
  2588 ;;		_atoi
  2589 ;;		_dtoa
  2590 ;;		_fputc
  2591 ;;		_isdigit
  2592 ;;		_xtoa
  2593 ;; This function is called by:
  2594 ;;		_vfprintf
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text11
  2599  010000                     __ptext11:
  2600                           	callstack 0
  2601  010000                     _vfpfcnvrt:
  2602                           	callstack 20
  2603  010000                     
  2604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2605  010000  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2606  010004  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2607  010008  CFDE FFF6          	movff	postinc2,tblptrl
  2608  01000C  CFDD FFF7          	movff	postdec2,tblptrh
  2609  010010                     	if	0	;tblptru may be non-zero
  2610  010010                     	endif
  2611  010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2612  010010  0E00               	movlw	low (__mediumconst shr (0+16))
  2613  010012  6EF8               	movwf	tblptru,c
  2614  010014                     	endif
  2615  010014  0008               	tblrd		*
  2616  010016  50F5               	movf	tablat,w,c
  2617  010018  0A25               	xorlw	37
  2618  01001A  A4D8               	btfss	status,2,c
  2619  01001C  EF12  F080         	goto	u2531
  2620  010020  EF14  F080         	goto	u2530
  2621  010024                     u2531:
  2622  010024  EF20  F082         	goto	l3490
  2623  010028                     u2530:
  2624  010028                     
  2625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2626  010028  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627  01002C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628  010030  2ADE               	incf	postinc2,f,c
  2629  010032  0E00               	movlw	0
  2630  010034  22DD               	addwfc	postdec2,f,c
  2631  010036                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2633  010036  0E00               	movlw	0
  2634  010038  0100               	movlb	0	; () banked
  2635  01003A  6F63               	movwf	(_width+1)& (0+255),b
  2636  01003C  0E00               	movlw	0
  2637  01003E  6F62               	movwf	_width& (0+255),b
  2638  010040  C062  F066         	movff	_width,_flags
  2639  010044  C063  F067         	movff	_width+1,_flags+1
  2640  010048                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2643  010048  6964               	setf	_prec& (0+255),b
  2644  01004A  6965               	setf	(_prec+1)& (0+255),b
  2645  01004C                     
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2648  01004C  0E00               	movlw	0
  2649  01004E  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2650  010050  0E00               	movlw	0
  2651  010052  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2654  010054  EF74  F080         	goto	l3428
  2655  010058                     l3402:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2659  010058  8166               	bsf	_flags& (0+255),0,b
  2660  01005A                     l3404:
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2664  01005A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2665  01005E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2666  010062  2ADE               	incf	postinc2,f,c
  2667  010064  0E00               	movlw	0
  2668  010066  22DD               	addwfc	postdec2,f,c
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2671  010068  EF74  F080         	goto	l3428
  2672  01006C                     l3406:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2676  01006C  8366               	bsf	_flags& (0+255),1,b
  2677  01006E  EF2D  F080         	goto	l3404
  2678  010072                     l3410:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2682  010072  8566               	bsf	_flags& (0+255),2,b
  2683  010074  EF2D  F080         	goto	l3404
  2684  010078                     l3414:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2688  010078  8766               	bsf	_flags& (0+255),3,b
  2689  01007A  EF2D  F080         	goto	l3404
  2690  01007E                     l3418:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2694  01007E  8966               	bsf	_flags& (0+255),4,b
  2695  010080  EF2D  F080         	goto	l3404
  2696  010084                     l3422:
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2700  010084  0E00               	movlw	0
  2701  010086  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2702  010088  0E01               	movlw	1
  2703  01008A  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2706  01008C  EF74  F080         	goto	l3428
  2707  010090                     l3426:
  2708                           
  2709                           ; BSR set to: 0
  2710  010090  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2711  010094  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2712  010098  CFDE FFF6          	movff	postinc2,tblptrl
  2713  01009C  CFDD FFF7          	movff	postdec2,tblptrh
  2714  0100A0                     	if	0	;tblptru may be non-zero
  2715  0100A0                     	endif
  2716  0100A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2717  0100A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2718  0100A2  6EF8               	movwf	tblptru,c
  2719  0100A4                     	endif
  2720  0100A4  0008               	tblrd		*
  2721  0100A6  50F5               	movf	tablat,w,c
  2722  0100A8  6E4B               	movwf	??_vfpfcnvrt^0,c
  2723  0100AA  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  2724                           
  2725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2726                           ; Switch size 1, requested type "simple"
  2727                           ; Number of cases is 1, Range of values is 0 to 0
  2728                           ; switch strategies available:
  2729                           ; Name         Instructions Cycles
  2730                           ; simple_byte            4     3 (average)
  2731                           ;	Chosen strategy is simple_byte
  2732  0100AC  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2733  0100AE  0A00               	xorlw	0	; case 0
  2734  0100B0  B4D8               	btfsc	status,2,c
  2735  0100B2  EF5D  F080         	goto	l4032
  2736  0100B6  EF42  F080         	goto	l3422
  2737  0100BA                     l4032:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ; Switch size 1, requested type "simple"
  2741                           ; Number of cases is 5, Range of values is 32 to 48
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte           16     9 (average)
  2745                           ;	Chosen strategy is simple_byte
  2746  0100BA  504B               	movf	??_vfpfcnvrt^0,w,c
  2747  0100BC  0A20               	xorlw	32	; case 32
  2748  0100BE  B4D8               	btfsc	status,2,c
  2749  0100C0  EF3C  F080         	goto	l3414
  2750  0100C4  0A03               	xorlw	3	; case 35
  2751  0100C6  B4D8               	btfsc	status,2,c
  2752  0100C8  EF3F  F080         	goto	l3418
  2753  0100CC  0A08               	xorlw	8	; case 43
  2754  0100CE  B4D8               	btfsc	status,2,c
  2755  0100D0  EF39  F080         	goto	l3410
  2756  0100D4  0A06               	xorlw	6	; case 45
  2757  0100D6  B4D8               	btfsc	status,2,c
  2758  0100D8  EF2C  F080         	goto	l3402
  2759  0100DC  0A1D               	xorlw	29	; case 48
  2760  0100DE  B4D8               	btfsc	status,2,c
  2761  0100E0  EF36  F080         	goto	l3406
  2762  0100E4  EF42  F080         	goto	l3422
  2763  0100E8                     l3428:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2767  0100E8  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  2768  0100EA  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2769  0100EC  B4D8               	btfsc	status,2,c
  2770  0100EE  EF7B  F080         	goto	u2541
  2771  0100F2  EF7D  F080         	goto	u2540
  2772  0100F6                     u2541:
  2773  0100F6  EF48  F080         	goto	l3426
  2774  0100FA                     u2540:
  2775  0100FA                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2778  0100FA  A166               	btfss	_flags& (0+255),0,b
  2779  0100FC  EF82  F080         	goto	u2551
  2780  010100  EF84  F080         	goto	u2550
  2781  010104                     u2551:
  2782  010104  EF85  F080         	goto	l3432
  2783  010108                     u2550:
  2784  010108                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2787  010108  9366               	bcf	_flags& (0+255),1,b
  2788  01010A                     l3432:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2792  01010A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2793  01010E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2794  010112  CFDE FFF6          	movff	postinc2,tblptrl
  2795  010116  CFDD FFF7          	movff	postdec2,tblptrh
  2796  01011A                     	if	0	;tblptru may be non-zero
  2797  01011A                     	endif
  2798  01011A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2799  01011A  0E00               	movlw	low (__mediumconst shr (0+16))
  2800  01011C  6EF8               	movwf	tblptru,c
  2801  01011E                     	endif
  2802  01011E  0008               	tblrd		*
  2803  010120  50F5               	movf	tablat,w,c
  2804  010122  0A2A               	xorlw	42
  2805  010124  A4D8               	btfss	status,2,c
  2806  010126  EF97  F080         	goto	u2561
  2807  01012A  EF99  F080         	goto	u2560
  2808  01012E                     u2561:
  2809  01012E  EFC2  F080         	goto	l3440
  2810  010132                     u2560:
  2811  010132                     
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2814  010132  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2815  010136  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2816  01013A  2ADE               	incf	postinc2,f,c
  2817  01013C  0E00               	movlw	0
  2818  01013E  22DD               	addwfc	postdec2,f,c
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2821  010140  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2822  010144  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2823  010148  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2824  01014C  0E02               	movlw	2
  2825  01014E  26DE               	addwf	postinc2,f,c
  2826  010150  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2827  010154  0E00               	movlw	0
  2828  010156  22DD               	addwfc	postdec2,f,c
  2829  010158  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2830  01015C  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2831  010160  CFDE F062          	movff	postinc2,_width
  2832  010164  CFDD F063          	movff	postdec2,_width+1
  2833  010168                     
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2836  010168  BF63               	btfsc	(_width+1)& (0+255),7,b
  2837  01016A  EFBB  F080         	goto	u2570
  2838  01016E  EFB9  F080         	goto	u2571
  2839  010172                     u2571:
  2840  010172  EF08  F081         	goto	l3450
  2841  010176                     u2570:
  2842  010176                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2845  010176  8166               	bsf	_flags& (0+255),0,b
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2848  010178  6D62               	negf	_width& (0+255),b
  2849  01017A  1F63               	comf	(_width+1)& (0+255),f,b
  2850  01017C  B0D8               	btfsc	status,0,c
  2851  01017E  2B63               	incf	(_width+1)& (0+255),f,b
  2852  010180  EF08  F081         	goto	l3450
  2853  010184                     l3440:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2857  010184  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2858  010188  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2859  01018C  CFDE F008          	movff	postinc2,atoi@s
  2860  010190  CFDD F009          	movff	postdec2,atoi@s+1
  2861  010194  EC1B  F085         	call	_atoi	;wreg free
  2862  010198  C008  F062         	movff	?_atoi,_width
  2863  01019C  C009  F063         	movff	?_atoi+1,_width+1
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2866  0101A0  EFD9  F080         	goto	l3444
  2867  0101A4                     l3442:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2871  0101A4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2872  0101A8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2873  0101AC  2ADE               	incf	postinc2,f,c
  2874  0101AE  0E00               	movlw	0
  2875  0101B0  22DD               	addwfc	postdec2,f,c
  2876  0101B2                     l3444:
  2877  0101B2  0ED0               	movlw	208
  2878  0101B4  6E4B               	movwf	??_vfpfcnvrt^0,c
  2879  0101B6  0EFF               	movlw	255
  2880  0101B8  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  2881  0101BA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2882  0101BE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2883  0101C2  CFDE FFF6          	movff	postinc2,tblptrl
  2884  0101C6  CFDD FFF7          	movff	postdec2,tblptrh
  2885  0101CA                     	if	0	;tblptru may be non-zero
  2886  0101CA                     	endif
  2887  0101CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2888  0101CA  0E00               	movlw	low (__mediumconst shr (0+16))
  2889  0101CC  6EF8               	movwf	tblptru,c
  2890  0101CE                     	endif
  2891  0101CE  0008               	tblrd		*
  2892  0101D0  50F5               	movf	tablat,w,c
  2893  0101D2  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2894  0101D4  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  2895  0101D6  504B               	movf	??_vfpfcnvrt^0,w,c
  2896  0101D8  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2897  0101DA  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2898  0101DC  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2899  0101DE  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2900  0101E0  E10A               	bnz	u2580
  2901  0101E2  0E0A               	movlw	10
  2902  0101E4  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2903  0101E6  A0D8               	btfss	status,0,c
  2904  0101E8  EFF8  F080         	goto	u2581
  2905  0101EC  EFFB  F080         	goto	u2580
  2906  0101F0                     u2581:
  2907  0101F0  0E01               	movlw	1
  2908  0101F2  EFFC  F080         	goto	u2590
  2909  0101F6                     u2580:
  2910  0101F6  0E00               	movlw	0
  2911  0101F8                     u2590:
  2912  0101F8  0100               	movlb	0	; () banked
  2913  0101FA  6F9A               	movwf	_vfpfcnvrt$1707& (0+255),b
  2914  0101FC  6B9B               	clrf	(_vfpfcnvrt$1707+1)& (0+255),b
  2915  0101FE                     
  2916                           ; BSR set to: 0
  2917  0101FE  519A               	movf	_vfpfcnvrt$1707& (0+255),w,b
  2918  010200  119B               	iorwf	(_vfpfcnvrt$1707+1)& (0+255),w,b
  2919  010202  A4D8               	btfss	status,2,c
  2920  010204  EF06  F081         	goto	u2601
  2921  010208  EF08  F081         	goto	u2600
  2922  01020C                     u2601:
  2923  01020C  EFD2  F080         	goto	l3442
  2924  010210                     u2600:
  2925  010210                     l3450:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2929  010210  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  010214  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  010218  CFDE FFF6          	movff	postinc2,tblptrl
  2932  01021C  CFDD FFF7          	movff	postdec2,tblptrh
  2933  010220                     	if	0	;tblptru may be non-zero
  2934  010220                     	endif
  2935  010220                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2936  010220  0E00               	movlw	low (__mediumconst shr (0+16))
  2937  010222  6EF8               	movwf	tblptru,c
  2938  010224                     	endif
  2939  010224  0008               	tblrd		*
  2940  010226  50F5               	movf	tablat,w,c
  2941  010228  0A64               	xorlw	100
  2942  01022A  B4D8               	btfsc	status,2,c
  2943  01022C  EF1A  F081         	goto	u2611
  2944  010230  EF1C  F081         	goto	u2610
  2945  010234                     u2611:
  2946  010234  EF30  F081         	goto	l3454
  2947  010238                     u2610:
  2948  010238                     
  2949                           ; BSR set to: 0
  2950  010238  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2951  01023C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2952  010240  CFDE FFF6          	movff	postinc2,tblptrl
  2953  010244  CFDD FFF7          	movff	postdec2,tblptrh
  2954  010248                     	if	0	;tblptru may be non-zero
  2955  010248                     	endif
  2956  010248                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2957  010248  0E00               	movlw	low (__mediumconst shr (0+16))
  2958  01024A  6EF8               	movwf	tblptru,c
  2959  01024C                     	endif
  2960  01024C  0008               	tblrd		*
  2961  01024E  50F5               	movf	tablat,w,c
  2962  010250  0A69               	xorlw	105
  2963  010252  A4D8               	btfss	status,2,c
  2964  010254  EF2E  F081         	goto	u2621
  2965  010258  EF30  F081         	goto	u2620
  2966  01025C                     u2621:
  2967  01025C  EF70  F081         	goto	l3460
  2968  010260                     u2620:
  2969  010260                     l3454:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2973  010260  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2974  010264  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2975  010268  2ADE               	incf	postinc2,f,c
  2976  01026A  0E00               	movlw	0
  2977  01026C  22DD               	addwfc	postdec2,f,c
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2980  01026E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2981  010272  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2982  010276  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2983  01027A  0E02               	movlw	2
  2984  01027C  26DE               	addwf	postinc2,f,c
  2985  01027E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2986  010282  0E00               	movlw	0
  2987  010284  22DD               	addwfc	postdec2,f,c
  2988  010286  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2989  01028A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2990  01028E  CFDE F088          	movff	postinc2,vfpfcnvrt@ll
  2991  010292  CFDD F089          	movff	postdec2,vfpfcnvrt@ll+1
  2992  010296  0E00               	movlw	0
  2993  010298  BF89               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2994  01029A  0EFF               	movlw	-1
  2995  01029C  6F8A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2996  01029E  6F8B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2997  0102A0  6F8C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2998  0102A2  6F8D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2999  0102A4  6F8E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3000  0102A6  6F8F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3001  0102A8                     
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3004  0102A8  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3005  0102AC  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3006  0102B0  C088  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3007  0102B4  C089  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3008  0102B8  C08A  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3009  0102BC  C08B  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3010  0102C0  C08C  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3011  0102C4  C08D  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3012  0102C8  C08E  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3013  0102CC  C08F  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3014  0102D0  EC3E  F082         	call	_dtoa	;wreg free
  3015  0102D4  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  3016  0102D8  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3017  0102DC  EF3D  F082         	goto	l1137
  3018  0102E0                     l3460:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3022  0102E0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3023  0102E4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3024  0102E8  CFDE FFF6          	movff	postinc2,tblptrl
  3025  0102EC  CFDD FFF7          	movff	postdec2,tblptrh
  3026  0102F0                     	if	0	;tblptru may be non-zero
  3027  0102F0                     	endif
  3028  0102F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3029  0102F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3030  0102F2  6EF8               	movwf	tblptru,c
  3031  0102F4                     	endif
  3032  0102F4  0008               	tblrd		*
  3033  0102F6  50F5               	movf	tablat,w,c
  3034  0102F8  0A78               	xorlw	120
  3035  0102FA  B4D8               	btfsc	status,2,c
  3036  0102FC  EF82  F081         	goto	u2631
  3037  010300  EF84  F081         	goto	u2630
  3038  010304                     u2631:
  3039  010304  EF98  F081         	goto	l3464
  3040  010308                     u2630:
  3041  010308                     
  3042                           ; BSR set to: 0
  3043  010308  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3044  01030C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3045  010310  CFDE FFF6          	movff	postinc2,tblptrl
  3046  010314  CFDD FFF7          	movff	postdec2,tblptrh
  3047  010318                     	if	0	;tblptru may be non-zero
  3048  010318                     	endif
  3049  010318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3050  010318  0E00               	movlw	low (__mediumconst shr (0+16))
  3051  01031A  6EF8               	movwf	tblptru,c
  3052  01031C                     	endif
  3053  01031C  0008               	tblrd		*
  3054  01031E  50F5               	movf	tablat,w,c
  3055  010320  0A58               	xorlw	88
  3056  010322  A4D8               	btfss	status,2,c
  3057  010324  EF96  F081         	goto	u2641
  3058  010328  EF98  F081         	goto	u2640
  3059  01032C                     u2641:
  3060  01032C  EFE8  F081         	goto	l3474
  3061  010330                     u2640:
  3062  010330                     l3464:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3066  010330  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3067  010334  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3068  010338  CFDE FFF6          	movff	postinc2,tblptrl
  3069  01033C  CFDD FFF7          	movff	postdec2,tblptrh
  3070  010340                     	if	0	;tblptru may be non-zero
  3071  010340                     	endif
  3072  010340                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3073  010340  0E00               	movlw	low (__mediumconst shr (0+16))
  3074  010342  6EF8               	movwf	tblptru,c
  3075  010344                     	endif
  3076  010344  0008               	tblrd		*
  3077  010346  CFF5 F09C          	movff	tablat,vfpfcnvrt@c
  3078  01034A                     
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3081  01034A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3082  01034E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3083  010352  2ADE               	incf	postinc2,f,c
  3084  010354  0E00               	movlw	0
  3085  010356  22DD               	addwfc	postdec2,f,c
  3086  010358                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3089  010358  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3090  01035C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3091  010360  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3092  010364  0E02               	movlw	2
  3093  010366  26DE               	addwf	postinc2,f,c
  3094  010368  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3095  01036C  0E00               	movlw	0
  3096  01036E  22DD               	addwfc	postdec2,f,c
  3097  010370  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3098  010374  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3099  010378  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  3100  01037C  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  3101  010380  C04D  F090         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3102  010384  C04E  F091         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3103  010388  6B92               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3104  01038A  6B93               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3105  01038C  6B94               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3106  01038E  6B95               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3107  010390  6B96               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3108  010392  6B97               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3109  010394                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3112  010394  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3113  010398  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3114  01039C  C090  F020         	movff	vfpfcnvrt@llu,xtoa@d
  3115  0103A0  C091  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3116  0103A4  C092  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3117  0103A8  C093  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3118  0103AC  C094  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3119  0103B0  C095  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3120  0103B4  C096  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3121  0103B8  C097  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3122  0103BC  C09C  F028         	movff	vfpfcnvrt@c,xtoa@x
  3123  0103C0  ECAF  F083         	call	_xtoa	;wreg free
  3124  0103C4  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  3125  0103C8  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3126  0103CC  EF3D  F082         	goto	l1137
  3127  0103D0                     l3474:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3131  0103D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3132  0103D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3133  0103D8  CFDE FFF6          	movff	postinc2,tblptrl
  3134  0103DC  CFDD FFF7          	movff	postdec2,tblptrh
  3135  0103E0                     	if	0	;tblptru may be non-zero
  3136  0103E0                     	endif
  3137  0103E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3138  0103E0  0E00               	movlw	low (__mediumconst shr (0+16))
  3139  0103E2  6EF8               	movwf	tblptru,c
  3140  0103E4                     	endif
  3141  0103E4  0008               	tblrd		*
  3142  0103E6  50F5               	movf	tablat,w,c
  3143  0103E8  0A25               	xorlw	37
  3144  0103EA  A4D8               	btfss	status,2,c
  3145  0103EC  EFFA  F081         	goto	u2651
  3146  0103F0  EFFC  F081         	goto	u2650
  3147  0103F4                     u2651:
  3148  0103F4  EF13  F082         	goto	l3484
  3149  0103F8                     u2650:
  3150  0103F8                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3153  0103F8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3154  0103FC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3155  010400  2ADE               	incf	postinc2,f,c
  3156  010402  0E00               	movlw	0
  3157  010404  22DD               	addwfc	postdec2,f,c
  3158  010406                     
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3161  010406  0E00               	movlw	0
  3162  010408  6E04               	movwf	(fputc@c+1)^0,c
  3163  01040A  0E25               	movlw	37
  3164  01040C  6E03               	movwf	fputc@c^0,c
  3165  01040E  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3166  010412  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3167  010416  EC43  F089         	call	_fputc	;wreg free
  3168  01041A                     l3480:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3171  01041A  0E00               	movlw	0
  3172  01041C  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3173  01041E  0E01               	movlw	1
  3174  010420  6E45               	movwf	?_vfpfcnvrt^0,c
  3175  010422  EF3D  F082         	goto	l1137
  3176  010426                     l3484:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3180  010426  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3181  01042A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3182  01042E  2ADE               	incf	postinc2,f,c
  3183  010430  0E00               	movlw	0
  3184  010432  22DD               	addwfc	postdec2,f,c
  3185  010434                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3188  010434  0E00               	movlw	0
  3189  010436  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  3190  010438  0E00               	movlw	0
  3191  01043A  6E45               	movwf	?_vfpfcnvrt^0,c
  3192  01043C  EF3D  F082         	goto	l1137
  3193  010440                     l3490:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3196  010440  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3197  010444  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3198  010448  CFDE FFF6          	movff	postinc2,tblptrl
  3199  01044C  CFDD FFF7          	movff	postdec2,tblptrh
  3200  010450                     	if	0	;tblptru may be non-zero
  3201  010450                     	endif
  3202  010450                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3203  010450  0E00               	movlw	low (__mediumconst shr (0+16))
  3204  010452  6EF8               	movwf	tblptru,c
  3205  010454                     	endif
  3206  010454  0008               	tblrd		*
  3207  010456  50F5               	movf	tablat,w,c
  3208  010458  6E03               	movwf	fputc@c^0,c
  3209  01045A  6A04               	clrf	(fputc@c+1)^0,c
  3210  01045C  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3211  010460  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3212  010464  EC43  F089         	call	_fputc	;wreg free
  3213  010468                     
  3214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3215  010468  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3216  01046C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3217  010470  2ADE               	incf	postinc2,f,c
  3218  010472  0E00               	movlw	0
  3219  010474  22DD               	addwfc	postdec2,f,c
  3220  010476  EF0D  F082         	goto	l3480
  3221  01047A                     l1137:
  3222  01047A  0012               	return		;funcret
  3223  01047C                     __end_of_vfpfcnvrt:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _xtoa *****************
  3227 ;; Defined at:
  3228 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3231 ;;		 -> NULL(0), 
  3232 ;;  d               8   31[COMRAM] unsigned long long 
  3233 ;;  x               1   39[COMRAM] unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  n               8   56[COMRAM] unsigned long long 
  3236 ;;  c               2   66[COMRAM] int 
  3237 ;;  i               2   64[COMRAM] int 
  3238 ;;  w               2   54[COMRAM] int 
  3239 ;;  p               2   52[COMRAM] int 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2   29[COMRAM] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3249 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;Total ram usage:       39 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 5
  3256 ;; This function calls:
  3257 ;;		_isalpha
  3258 ;;		_isupper
  3259 ;;		_pad
  3260 ;;		_toupper
  3261 ;; This function is called by:
  3262 ;;		_vfpfcnvrt
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text12
  3267  01075E                     __ptext12:
  3268                           	callstack 0
  3269  01075E                     _xtoa:
  3270                           	callstack 20
  3271  01075E                     
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3273  01075E  0100               	movlb	0	; () banked
  3274  010760  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3275  010762  EFB5  F083         	goto	u2291
  3276  010766  EFB7  F083         	goto	u2290
  3277  01076A                     u2291:
  3278  01076A  EFB8  F083         	goto	l3288
  3279  01076E                     u2290:
  3280  01076E                     
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3283  01076E  9366               	bcf	_flags& (0+255),1,b
  3284  010770                     l3288:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3288  010770  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3289  010772  EFC5  F083         	goto	u2300
  3290  010776  5165               	movf	(_prec+1)& (0+255),w,b
  3291  010778  E106               	bnz	u2301
  3292  01077A  0564               	decf	_prec& (0+255),w,b
  3293  01077C  B0D8               	btfsc	status,0,c
  3294  01077E  EFC3  F083         	goto	u2301
  3295  010782  EFC5  F083         	goto	u2300
  3296  010786                     u2301:
  3297  010786  EFCB  F083         	goto	l1083
  3298  01078A                     u2300:
  3299  01078A                     
  3300                           ; BSR set to: 0
  3301  01078A  0E00               	movlw	0
  3302  01078C  6E36               	movwf	(xtoa@p+1)^0,c
  3303  01078E  0E01               	movlw	1
  3304  010790  6E35               	movwf	xtoa@p^0,c
  3305  010792  EFCF  F083         	goto	l1085
  3306  010796                     l1083:
  3307                           
  3308                           ; BSR set to: 0
  3309  010796  C064  F035         	movff	_prec,xtoa@p
  3310  01079A  C065  F036         	movff	_prec+1,xtoa@p+1
  3311  01079E                     l1085:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3315  01079E  C062  F037         	movff	_width,xtoa@w
  3316  0107A2  C063  F038         	movff	_width+1,xtoa@w+1
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3319  0107A6  A966               	btfss	_flags& (0+255),4,b
  3320  0107A8  EFD8  F083         	goto	u2311
  3321  0107AC  EFDA  F083         	goto	u2310
  3322  0107B0                     u2311:
  3323  0107B0  EFDE  F083         	goto	l3294
  3324  0107B4                     u2310:
  3325  0107B4                     
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3328  0107B4  0EFE               	movlw	254
  3329  0107B6  2637               	addwf	xtoa@w^0,f,c
  3330  0107B8  0EFF               	movlw	255
  3331  0107BA  2238               	addwfc	(xtoa@w+1)^0,f,c
  3332  0107BC                     l3294:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3336  0107BC  C020  F039         	movff	xtoa@d,xtoa@n
  3337  0107C0  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  3338  0107C4  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  3339  0107C8  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  3340  0107CC  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  3341  0107D0  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  3342  0107D4  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  3343  0107D8  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  3344  0107DC                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3347  0107DC  0E00               	movlw	0
  3348  0107DE  6E42               	movwf	(xtoa@i+1)^0,c
  3349  0107E0  0E1F               	movlw	31
  3350  0107E2  6E41               	movwf	xtoa@i^0,c
  3351  0107E4                     
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3354  0107E4  0E00               	movlw	0
  3355  0107E6  6F87               	movwf	(_dbuf+31)& (0+255),b
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3358  0107E8  EFA9  F084         	goto	l3330
  3359  0107EC                     l3300:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  3362  0107EC  0641               	decf	xtoa@i^0,f,c
  3363  0107EE  A0D8               	btfss	status,0,c
  3364  0107F0  0642               	decf	(xtoa@i+1)^0,f,c
  3365  0107F2                     
  3366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3367  0107F2  0E0F               	movlw	15
  3368  0107F4  1439               	andwf	xtoa@n^0,w,c
  3369  0107F6  6E43               	movwf	xtoa@c^0,c
  3370  0107F8  6A44               	clrf	(xtoa@c+1)^0,c
  3371  0107FA                     
  3372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3373  0107FA  BE44               	btfsc	(xtoa@c+1)^0,7,c
  3374  0107FC  EF09  F084         	goto	u2321
  3375  010800  5044               	movf	(xtoa@c+1)^0,w,c
  3376  010802  E109               	bnz	u2320
  3377  010804  0E0A               	movlw	10
  3378  010806  5C43               	subwf	xtoa@c^0,w,c
  3379  010808  A0D8               	btfss	status,0,c
  3380  01080A  EF09  F084         	goto	u2321
  3381  01080E  EF0B  F084         	goto	u2320
  3382  010812                     u2321:
  3383  010812  EF13  F084         	goto	l3308
  3384  010816                     u2320:
  3385  010816  0E57               	movlw	87
  3386  010818  2443               	addwf	xtoa@c^0,w,c
  3387  01081A  6E43               	movwf	xtoa@c^0,c
  3388  01081C  0E00               	movlw	0
  3389  01081E  2044               	addwfc	(xtoa@c+1)^0,w,c
  3390  010820  6E44               	movwf	(xtoa@c+1)^0,c
  3391  010822  EF19  F084         	goto	l1092
  3392  010826                     l3308:
  3393  010826  0E30               	movlw	48
  3394  010828  2443               	addwf	xtoa@c^0,w,c
  3395  01082A  6E43               	movwf	xtoa@c^0,c
  3396  01082C  0E00               	movlw	0
  3397  01082E  2044               	addwfc	(xtoa@c+1)^0,w,c
  3398  010830  6E44               	movwf	(xtoa@c+1)^0,c
  3399  010832                     l1092:
  3400  010832  0EBF               	movlw	191
  3401  010834  6E29               	movwf	??_xtoa^0,c
  3402  010836  0EFF               	movlw	255
  3403  010838  6E2A               	movwf	(??_xtoa+1)^0,c
  3404  01083A  5028               	movf	xtoa@x^0,w,c
  3405  01083C  6E2B               	movwf	(??_xtoa+2)^0,c
  3406  01083E  6A2C               	clrf	(??_xtoa+3)^0,c
  3407  010840  5029               	movf	??_xtoa^0,w,c
  3408  010842  262B               	addwf	(??_xtoa+2)^0,f,c
  3409  010844  502A               	movf	(??_xtoa+1)^0,w,c
  3410  010846  222C               	addwfc	(??_xtoa+3)^0,f,c
  3411  010848  502C               	movf	(??_xtoa+3)^0,w,c
  3412  01084A  E10A               	bnz	u2330
  3413  01084C  0E1A               	movlw	26
  3414  01084E  5C2B               	subwf	(??_xtoa+2)^0,w,c
  3415  010850  A0D8               	btfss	status,0,c
  3416  010852  EF2D  F084         	goto	u2331
  3417  010856  EF30  F084         	goto	u2330
  3418  01085A                     u2331:
  3419  01085A  0E01               	movlw	1
  3420  01085C  EF31  F084         	goto	u2340
  3421  010860                     u2330:
  3422  010860  0E00               	movlw	0
  3423  010862                     u2340:
  3424  010862  6E31               	movwf	_xtoa$1692^0,c
  3425  010864  6A32               	clrf	(_xtoa$1692+1)^0,c
  3426  010866  5031               	movf	_xtoa$1692^0,w,c
  3427  010868  1032               	iorwf	(_xtoa$1692+1)^0,w,c
  3428  01086A  B4D8               	btfsc	status,2,c
  3429  01086C  EF3A  F084         	goto	u2351
  3430  010870  EF3C  F084         	goto	u2350
  3431  010874                     u2351:
  3432  010874  EF6C  F084         	goto	l3322
  3433  010878                     u2350:
  3434  010878  0E9F               	movlw	159
  3435  01087A  6E29               	movwf	??_xtoa^0,c
  3436  01087C  0EFF               	movlw	255
  3437  01087E  6E2A               	movwf	(??_xtoa+1)^0,c
  3438  010880  0E20               	movlw	32
  3439  010882  1043               	iorwf	xtoa@c^0,w,c
  3440  010884  6E2B               	movwf	(??_xtoa+2)^0,c
  3441  010886  0E00               	movlw	0
  3442  010888  1044               	iorwf	(xtoa@c+1)^0,w,c
  3443  01088A  6E2C               	movwf	(??_xtoa+3)^0,c
  3444  01088C  5029               	movf	??_xtoa^0,w,c
  3445  01088E  262B               	addwf	(??_xtoa+2)^0,f,c
  3446  010890  502A               	movf	(??_xtoa+1)^0,w,c
  3447  010892  222C               	addwfc	(??_xtoa+3)^0,f,c
  3448  010894  502C               	movf	(??_xtoa+3)^0,w,c
  3449  010896  E10A               	bnz	u2360
  3450  010898  0E1A               	movlw	26
  3451  01089A  5C2B               	subwf	(??_xtoa+2)^0,w,c
  3452  01089C  A0D8               	btfss	status,0,c
  3453  01089E  EF53  F084         	goto	u2361
  3454  0108A2  EF56  F084         	goto	u2360
  3455  0108A6                     u2361:
  3456  0108A6  0E01               	movlw	1
  3457  0108A8  EF57  F084         	goto	u2370
  3458  0108AC                     u2360:
  3459  0108AC  0E00               	movlw	0
  3460  0108AE                     u2370:
  3461  0108AE  6E33               	movwf	_xtoa$1693^0,c
  3462  0108B0  6A34               	clrf	(_xtoa$1693+1)^0,c
  3463  0108B2  5033               	movf	_xtoa$1693^0,w,c
  3464  0108B4  1034               	iorwf	(_xtoa$1693+1)^0,w,c
  3465  0108B6  B4D8               	btfsc	status,2,c
  3466  0108B8  EF60  F084         	goto	u2381
  3467  0108BC  EF62  F084         	goto	u2380
  3468  0108C0                     u2381:
  3469  0108C0  EF6C  F084         	goto	l3322
  3470  0108C4                     u2380:
  3471  0108C4                     
  3472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3473  0108C4  C043  F007         	movff	xtoa@c,toupper@c
  3474  0108C8  C044  F008         	movff	xtoa@c+1,toupper@c+1
  3475  0108CC  EC42  F08A         	call	_toupper	;wreg free
  3476  0108D0  C007  F043         	movff	?_toupper,xtoa@c
  3477  0108D4  C008  F044         	movff	?_toupper+1,xtoa@c+1
  3478  0108D8                     l3322:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3481  0108D8  0E68               	movlw	low _dbuf
  3482  0108DA  2441               	addwf	xtoa@i^0,w,c
  3483  0108DC  6ED9               	movwf	fsr2l,c
  3484  0108DE  0E00               	movlw	high _dbuf
  3485  0108E0  2042               	addwfc	(xtoa@i+1)^0,w,c
  3486  0108E2  6EDA               	movwf	fsr2h,c
  3487  0108E4  C043  FFDF         	movff	xtoa@c,indf2
  3488  0108E8                     
  3489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  3490  0108E8  0635               	decf	xtoa@p^0,f,c
  3491  0108EA  A0D8               	btfss	status,0,c
  3492  0108EC  0636               	decf	(xtoa@p+1)^0,f,c
  3493  0108EE                     
  3494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  3495  0108EE  0637               	decf	xtoa@w^0,f,c
  3496  0108F0  A0D8               	btfss	status,0,c
  3497  0108F2  0638               	decf	(xtoa@w+1)^0,f,c
  3498  0108F4                     
  3499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3500  0108F4  C039  F029         	movff	xtoa@n,??_xtoa
  3501  0108F8  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  3502  0108FC  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  3503  010900  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  3504  010904  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  3505  010908  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  3506  01090C  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  3507  010910  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  3508  010914  0E05               	movlw	5
  3509  010916  EF96  F084         	goto	u2390
  3510  01091A                     u2395:
  3511  01091A  90D8               	bcf	status,0,c
  3512  01091C  3230               	rrcf	(??_xtoa+7)^0,f,c
  3513  01091E  322F               	rrcf	(??_xtoa+6)^0,f,c
  3514  010920  322E               	rrcf	(??_xtoa+5)^0,f,c
  3515  010922  322D               	rrcf	(??_xtoa+4)^0,f,c
  3516  010924  322C               	rrcf	(??_xtoa+3)^0,f,c
  3517  010926  322B               	rrcf	(??_xtoa+2)^0,f,c
  3518  010928  322A               	rrcf	(??_xtoa+1)^0,f,c
  3519  01092A  3229               	rrcf	??_xtoa^0,f,c
  3520  01092C                     u2390:
  3521  01092C  2EE8               	decfsz	wreg,f,c
  3522  01092E  EF8D  F084         	goto	u2395
  3523  010932  C029  F039         	movff	??_xtoa,xtoa@n
  3524  010936  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  3525  01093A  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  3526  01093E  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  3527  010942  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  3528  010946  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  3529  01094A  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  3530  01094E  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  3531  010952                     l3330:
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3534  010952  BE42               	btfsc	(xtoa@i+1)^0,7,c
  3535  010954  EFB5  F084         	goto	u2401
  3536  010958  5042               	movf	(xtoa@i+1)^0,w,c
  3537  01095A  E109               	bnz	u2400
  3538  01095C  0E02               	movlw	2
  3539  01095E  5C41               	subwf	xtoa@i^0,w,c
  3540  010960  A0D8               	btfss	status,0,c
  3541  010962  EFB5  F084         	goto	u2401
  3542  010966  EFB7  F084         	goto	u2400
  3543  01096A                     u2401:
  3544  01096A  EFE8  F084         	goto	l1106
  3545  01096E                     u2400:
  3546  01096E  5039               	movf	xtoa@n^0,w,c
  3547  010970  103A               	iorwf	(xtoa@n+1)^0,w,c
  3548  010972  103B               	iorwf	(xtoa@n+2)^0,w,c
  3549  010974  103C               	iorwf	(xtoa@n+3)^0,w,c
  3550  010976  103D               	iorwf	(xtoa@n+4)^0,w,c
  3551  010978  103E               	iorwf	(xtoa@n+5)^0,w,c
  3552  01097A  103F               	iorwf	(xtoa@n+6)^0,w,c
  3553  01097C  1040               	iorwf	(xtoa@n+7)^0,w,c
  3554  01097E  A4D8               	btfss	status,2,c
  3555  010980  EFC4  F084         	goto	u2411
  3556  010984  EFC6  F084         	goto	u2410
  3557  010988                     u2411:
  3558  010988  EFF6  F083         	goto	l3300
  3559  01098C                     u2410:
  3560  01098C  BE36               	btfsc	(xtoa@p+1)^0,7,c
  3561  01098E  EFD3  F084         	goto	u2420
  3562  010992  5036               	movf	(xtoa@p+1)^0,w,c
  3563  010994  E106               	bnz	u2421
  3564  010996  0435               	decf	xtoa@p^0,w,c
  3565  010998  B0D8               	btfsc	status,0,c
  3566  01099A  EFD1  F084         	goto	u2421
  3567  01099E  EFD3  F084         	goto	u2420
  3568  0109A2                     u2421:
  3569  0109A2  EFF6  F083         	goto	l3300
  3570  0109A6                     u2420:
  3571  0109A6  BE38               	btfsc	(xtoa@w+1)^0,7,c
  3572  0109A8  EFDE  F084         	goto	u2431
  3573  0109AC  5038               	movf	(xtoa@w+1)^0,w,c
  3574  0109AE  E108               	bnz	u2430
  3575  0109B0  0437               	decf	xtoa@w^0,w,c
  3576  0109B2  A0D8               	btfss	status,0,c
  3577  0109B4  EFDE  F084         	goto	u2431
  3578  0109B8  EFE0  F084         	goto	u2430
  3579  0109BC                     u2431:
  3580  0109BC  EFE8  F084         	goto	l1106
  3581  0109C0                     u2430:
  3582  0109C0  0100               	movlb	0	; () banked
  3583  0109C2  B366               	btfsc	_flags& (0+255),1,b
  3584  0109C4  EFE6  F084         	goto	u2441
  3585  0109C8  EFE8  F084         	goto	u2440
  3586  0109CC                     u2441:
  3587  0109CC  EFF6  F083         	goto	l3300
  3588  0109D0                     u2440:
  3589  0109D0                     l1106:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3592  0109D0  0100               	movlb	0	; () banked
  3593  0109D2  A966               	btfss	_flags& (0+255),4,b
  3594  0109D4  EFEE  F084         	goto	u2451
  3595  0109D8  EFF0  F084         	goto	u2450
  3596  0109DC                     u2451:
  3597  0109DC  EF06  F085         	goto	l3346
  3598  0109E0                     u2450:
  3599  0109E0                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  3602  0109E0  0641               	decf	xtoa@i^0,f,c
  3603  0109E2  A0D8               	btfss	status,0,c
  3604  0109E4  0642               	decf	(xtoa@i+1)^0,f,c
  3605  0109E6                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3608  0109E6  0E68               	movlw	low _dbuf
  3609  0109E8  2441               	addwf	xtoa@i^0,w,c
  3610  0109EA  6ED9               	movwf	fsr2l,c
  3611  0109EC  0E00               	movlw	high _dbuf
  3612  0109EE  2042               	addwfc	(xtoa@i+1)^0,w,c
  3613  0109F0  6EDA               	movwf	fsr2h,c
  3614  0109F2  C028  FFDF         	movff	xtoa@x,indf2
  3615  0109F6                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  3618  0109F6  0641               	decf	xtoa@i^0,f,c
  3619  0109F8  A0D8               	btfss	status,0,c
  3620  0109FA  0642               	decf	(xtoa@i+1)^0,f,c
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3623  0109FC  0E68               	movlw	low _dbuf
  3624  0109FE  2441               	addwf	xtoa@i^0,w,c
  3625  010A00  6ED9               	movwf	fsr2l,c
  3626  010A02  0E00               	movlw	high _dbuf
  3627  010A04  2042               	addwfc	(xtoa@i+1)^0,w,c
  3628  010A06  6EDA               	movwf	fsr2h,c
  3629  010A08  0E30               	movlw	48
  3630  010A0A  6EDF               	movwf	indf2,c
  3631  010A0C                     l3346:
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3635  010A0C  C01E  F013         	movff	xtoa@fp,pad@fp
  3636  010A10  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  3637  010A14  0E68               	movlw	low _dbuf
  3638  010A16  2441               	addwf	xtoa@i^0,w,c
  3639  010A18  6E15               	movwf	pad@buf^0,c
  3640  010A1A  0E00               	movlw	high _dbuf
  3641  010A1C  2042               	addwfc	(xtoa@i+1)^0,w,c
  3642  010A1E  6E16               	movwf	(pad@buf+1)^0,c
  3643  010A20  C037  F017         	movff	xtoa@w,pad@p
  3644  010A24  C038  F018         	movff	xtoa@w+1,pad@p+1
  3645  010A28  EC82  F088         	call	_pad	;wreg free
  3646  010A2C  C013  F01E         	movff	?_pad,?_xtoa
  3647  010A30  C014  F01F         	movff	?_pad+1,?_xtoa+1
  3648  010A34  0012               	return		;funcret
  3649  010A36                     __end_of_xtoa:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _toupper *****************
  3653 ;; Defined at:
  3654 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  c               2    6[COMRAM] int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  2    6[COMRAM] int 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;Total ram usage:        8 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 1
  3675 ;; This function calls:
  3676 ;;		_islower
  3677 ;; This function is called by:
  3678 ;;		_xtoa
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text13
  3683  011484                     __ptext13:
  3684                           	callstack 0
  3685  011484                     _toupper:
  3686                           	callstack 23
  3687  011484  0E9F               	movlw	159
  3688  011486  6E09               	movwf	??_toupper^0,c
  3689  011488  0EFF               	movlw	255
  3690  01148A  6E0A               	movwf	(??_toupper+1)^0,c
  3691  01148C  C007  F00B         	movff	toupper@c,??_toupper+2
  3692  011490  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3693  011494  5009               	movf	??_toupper^0,w,c
  3694  011496  260B               	addwf	(??_toupper+2)^0,f,c
  3695  011498  500A               	movf	(??_toupper+1)^0,w,c
  3696  01149A  220C               	addwfc	(??_toupper+3)^0,f,c
  3697  01149C  500C               	movf	(??_toupper+3)^0,w,c
  3698  01149E  E10A               	bnz	u2070
  3699  0114A0  0E1A               	movlw	26
  3700  0114A2  5C0B               	subwf	(??_toupper+2)^0,w,c
  3701  0114A4  A0D8               	btfss	status,0,c
  3702  0114A6  EF57  F08A         	goto	u2071
  3703  0114AA  EF5A  F08A         	goto	u2070
  3704  0114AE                     u2071:
  3705  0114AE  0E01               	movlw	1
  3706  0114B0  EF5B  F08A         	goto	u2080
  3707  0114B4                     u2070:
  3708  0114B4  0E00               	movlw	0
  3709  0114B6                     u2080:
  3710  0114B6  6E0D               	movwf	_toupper$1804^0,c
  3711  0114B8  6A0E               	clrf	(_toupper$1804+1)^0,c
  3712  0114BA  500D               	movf	_toupper$1804^0,w,c
  3713  0114BC  100E               	iorwf	(_toupper$1804+1)^0,w,c
  3714  0114BE  B4D8               	btfsc	status,2,c
  3715  0114C0  EF64  F08A         	goto	u2091
  3716  0114C4  EF66  F08A         	goto	u2090
  3717  0114C8                     u2091:
  3718  0114C8  EF6C  F08A         	goto	l1242
  3719  0114CC                     u2090:
  3720  0114CC  0E5F               	movlw	95
  3721  0114CE  1407               	andwf	toupper@c^0,w,c
  3722  0114D0  6E07               	movwf	?_toupper^0,c
  3723  0114D2  6A08               	clrf	(?_toupper+1)^0,c
  3724  0114D4  EF70  F08A         	goto	l1247
  3725  0114D8                     l1242:
  3726  0114D8  C007  F007         	movff	toupper@c,?_toupper
  3727  0114DC  C008  F008         	movff	toupper@c+1,?_toupper+1
  3728  0114E0                     l1247:
  3729  0114E0  0012               	return		;funcret
  3730  0114E2                     __end_of_toupper:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _islower *****************
  3734 ;; Defined at:
  3735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  c               2    0[COMRAM] int 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2    0[COMRAM] int 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3753 ;;Total ram usage:        6 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_toupper
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text14
  3763  011636                     __ptext14:
  3764                           	callstack 0
  3765  011636                     _islower:
  3766                           	callstack 23
  3767  011636  0E9F               	movlw	159
  3768  011638  6E03               	movwf	??_islower^0,c
  3769  01163A  0EFF               	movlw	255
  3770  01163C  6E04               	movwf	(??_islower+1)^0,c
  3771  01163E  C001  F005         	movff	islower@c,??_islower+2
  3772  011642  C002  F006         	movff	islower@c+1,??_islower+3
  3773  011646  5003               	movf	??_islower^0,w,c
  3774  011648  2605               	addwf	(??_islower+2)^0,f,c
  3775  01164A  5004               	movf	(??_islower+1)^0,w,c
  3776  01164C  2206               	addwfc	(??_islower+3)^0,f,c
  3777  01164E  5006               	movf	(??_islower+3)^0,w,c
  3778  011650  E10A               	bnz	u1830
  3779  011652  0E1A               	movlw	26
  3780  011654  5C05               	subwf	(??_islower+2)^0,w,c
  3781  011656  A0D8               	btfss	status,0,c
  3782  011658  EF30  F08B         	goto	u1831
  3783  01165C  EF33  F08B         	goto	u1830
  3784  011660                     u1831:
  3785  011660  0E01               	movlw	1
  3786  011662  EF34  F08B         	goto	u1840
  3787  011666                     u1830:
  3788  011666  0E00               	movlw	0
  3789  011668                     u1840:
  3790  011668  6E01               	movwf	?_islower^0,c
  3791  01166A  6A02               	clrf	(?_islower+1)^0,c
  3792  01166C  0012               	return		;funcret
  3793  01166E                     __end_of_islower:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _isupper *****************
  3797 ;; Defined at:
  3798 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  c               2    0[COMRAM] int 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  2    0[COMRAM] int 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;Total ram usage:        6 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_xtoa
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text15
  3826  01166E                     __ptext15:
  3827                           	callstack 0
  3828  01166E                     _isupper:
  3829                           	callstack 24
  3830  01166E  0EBF               	movlw	191
  3831  011670  6E03               	movwf	??_isupper^0,c
  3832  011672  0EFF               	movlw	255
  3833  011674  6E04               	movwf	(??_isupper+1)^0,c
  3834  011676  C001  F005         	movff	isupper@c,??_isupper+2
  3835  01167A  C002  F006         	movff	isupper@c+1,??_isupper+3
  3836  01167E  5003               	movf	??_isupper^0,w,c
  3837  011680  2605               	addwf	(??_isupper+2)^0,f,c
  3838  011682  5004               	movf	(??_isupper+1)^0,w,c
  3839  011684  2206               	addwfc	(??_isupper+3)^0,f,c
  3840  011686  5006               	movf	(??_isupper+3)^0,w,c
  3841  011688  E10A               	bnz	u2030
  3842  01168A  0E1A               	movlw	26
  3843  01168C  5C05               	subwf	(??_isupper+2)^0,w,c
  3844  01168E  A0D8               	btfss	status,0,c
  3845  011690  EF4C  F08B         	goto	u2031
  3846  011694  EF4F  F08B         	goto	u2030
  3847  011698                     u2031:
  3848  011698  0E01               	movlw	1
  3849  01169A  EF50  F08B         	goto	u2040
  3850  01169E                     u2030:
  3851  01169E  0E00               	movlw	0
  3852  0116A0                     u2040:
  3853  0116A0  6E01               	movwf	?_isupper^0,c
  3854  0116A2  6A02               	clrf	(?_isupper+1)^0,c
  3855  0116A4  0012               	return		;funcret
  3856  0116A6                     __end_of_isupper:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _isalpha *****************
  3860 ;; Defined at:
  3861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  c               2    0[COMRAM] int 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    0[COMRAM] int 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;Total ram usage:        6 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_xtoa
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text16
  3889  0115FA                     __ptext16:
  3890                           	callstack 0
  3891  0115FA                     _isalpha:
  3892                           	callstack 24
  3893  0115FA  0E9F               	movlw	159
  3894  0115FC  6E03               	movwf	??_isalpha^0,c
  3895  0115FE  0EFF               	movlw	255
  3896  011600  6E04               	movwf	(??_isalpha+1)^0,c
  3897  011602  0E20               	movlw	32
  3898  011604  1001               	iorwf	isalpha@c^0,w,c
  3899  011606  6E05               	movwf	(??_isalpha+2)^0,c
  3900  011608  0E00               	movlw	0
  3901  01160A  1002               	iorwf	(isalpha@c+1)^0,w,c
  3902  01160C  6E06               	movwf	(??_isalpha+3)^0,c
  3903  01160E  5003               	movf	??_isalpha^0,w,c
  3904  011610  2605               	addwf	(??_isalpha+2)^0,f,c
  3905  011612  5004               	movf	(??_isalpha+1)^0,w,c
  3906  011614  2206               	addwfc	(??_isalpha+3)^0,f,c
  3907  011616  5006               	movf	(??_isalpha+3)^0,w,c
  3908  011618  E10A               	bnz	u2050
  3909  01161A  0E1A               	movlw	26
  3910  01161C  5C05               	subwf	(??_isalpha+2)^0,w,c
  3911  01161E  A0D8               	btfss	status,0,c
  3912  011620  EF14  F08B         	goto	u2051
  3913  011624  EF17  F08B         	goto	u2050
  3914  011628                     u2051:
  3915  011628  0E01               	movlw	1
  3916  01162A  EF18  F08B         	goto	u2060
  3917  01162E                     u2050:
  3918  01162E  0E00               	movlw	0
  3919  011630                     u2060:
  3920  011630  6E01               	movwf	?_isalpha^0,c
  3921  011632  6A02               	clrf	(?_isalpha+1)^0,c
  3922  011634  0012               	return		;funcret
  3923  011636                     __end_of_isalpha:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _dtoa *****************
  3927 ;; Defined at:
  3928 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3931 ;;		 -> NULL(0), 
  3932 ;;  d               8   31[COMRAM] long long 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  n               8   55[COMRAM] long long 
  3935 ;;  i               2   63[COMRAM] int 
  3936 ;;  s               2   53[COMRAM] int 
  3937 ;;  w               2   51[COMRAM] int 
  3938 ;;  p               2   49[COMRAM] int 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2   29[COMRAM] int 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3948 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;Total ram usage:       36 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		___aodiv
  3957 ;;		___aomod
  3958 ;;		_abs
  3959 ;;		_pad
  3960 ;; This function is called by:
  3961 ;;		_vfpfcnvrt
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text17
  3966  01047C                     __ptext17:
  3967                           	callstack 0
  3968  01047C                     _dtoa:
  3969                           	callstack 20
  3970  01047C                     
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3972  01047C  C020  F038         	movff	dtoa@d,dtoa@n
  3973  010480  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  3974  010484  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  3975  010488  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  3976  01048C  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  3977  010490  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  3978  010494  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  3979  010498  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  3980  01049C                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3982  01049C  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  3983  01049E  EF53  F082         	goto	u2141
  3984  0104A2  EF56  F082         	goto	u2140
  3985  0104A6                     u2141:
  3986  0104A6  0E01               	movlw	1
  3987  0104A8  EF57  F082         	goto	u2150
  3988  0104AC                     u2140:
  3989  0104AC  0E00               	movlw	0
  3990  0104AE                     u2150:
  3991  0104AE  6E36               	movwf	dtoa@s^0,c
  3992  0104B0  6A37               	clrf	(dtoa@s+1)^0,c
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3995  0104B2  5036               	movf	dtoa@s^0,w,c
  3996  0104B4  1037               	iorwf	(dtoa@s+1)^0,w,c
  3997  0104B6  B4D8               	btfsc	status,2,c
  3998  0104B8  EF60  F082         	goto	u2161
  3999  0104BC  EF62  F082         	goto	u2160
  4000  0104C0                     u2161:
  4001  0104C0  EF72  F082         	goto	l3228
  4002  0104C4                     u2160:
  4003  0104C4                     
  4004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4005  0104C4  1E3F               	comf	(dtoa@n+7)^0,f,c
  4006  0104C6  1E3E               	comf	(dtoa@n+6)^0,f,c
  4007  0104C8  1E3D               	comf	(dtoa@n+5)^0,f,c
  4008  0104CA  1E3C               	comf	(dtoa@n+4)^0,f,c
  4009  0104CC  1E3B               	comf	(dtoa@n+3)^0,f,c
  4010  0104CE  1E3A               	comf	(dtoa@n+2)^0,f,c
  4011  0104D0  1E39               	comf	(dtoa@n+1)^0,f,c
  4012  0104D2  6C38               	negf	dtoa@n^0,c
  4013  0104D4  0E00               	movlw	0
  4014  0104D6  2239               	addwfc	(dtoa@n+1)^0,f,c
  4015  0104D8  223A               	addwfc	(dtoa@n+2)^0,f,c
  4016  0104DA  223B               	addwfc	(dtoa@n+3)^0,f,c
  4017  0104DC  223C               	addwfc	(dtoa@n+4)^0,f,c
  4018  0104DE  223D               	addwfc	(dtoa@n+5)^0,f,c
  4019  0104E0  223E               	addwfc	(dtoa@n+6)^0,f,c
  4020  0104E2  223F               	addwfc	(dtoa@n+7)^0,f,c
  4021  0104E4                     l3228:
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4024  0104E4  0100               	movlb	0	; () banked
  4025  0104E6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  4026  0104E8  EF78  F082         	goto	u2171
  4027  0104EC  EF7A  F082         	goto	u2170
  4028  0104F0                     u2171:
  4029  0104F0  EF7B  F082         	goto	l3232
  4030  0104F4                     u2170:
  4031  0104F4                     
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4034  0104F4  9366               	bcf	_flags& (0+255),1,b
  4035  0104F6                     l3232:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4039  0104F6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  4040  0104F8  EF88  F082         	goto	u2180
  4041  0104FC  5165               	movf	(_prec+1)& (0+255),w,b
  4042  0104FE  E106               	bnz	u2181
  4043  010500  0564               	decf	_prec& (0+255),w,b
  4044  010502  B0D8               	btfsc	status,0,c
  4045  010504  EF86  F082         	goto	u2181
  4046  010508  EF88  F082         	goto	u2180
  4047  01050C                     u2181:
  4048  01050C  EF8E  F082         	goto	l1058
  4049  010510                     u2180:
  4050  010510                     
  4051                           ; BSR set to: 0
  4052  010510  0E00               	movlw	0
  4053  010512  6E33               	movwf	(dtoa@p+1)^0,c
  4054  010514  0E01               	movlw	1
  4055  010516  6E32               	movwf	dtoa@p^0,c
  4056  010518  EF92  F082         	goto	l1060
  4057  01051C                     l1058:
  4058                           
  4059                           ; BSR set to: 0
  4060  01051C  C064  F032         	movff	_prec,dtoa@p
  4061  010520  C065  F033         	movff	_prec+1,dtoa@p+1
  4062  010524                     l1060:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4066  010524  C062  F034         	movff	_width,dtoa@w
  4067  010528  C063  F035         	movff	_width+1,dtoa@w+1
  4068  01052C                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4071  01052C  5036               	movf	dtoa@s^0,w,c
  4072  01052E  1037               	iorwf	(dtoa@s+1)^0,w,c
  4073  010530  A4D8               	btfss	status,2,c
  4074  010532  EF9D  F082         	goto	u2191
  4075  010536  EF9F  F082         	goto	u2190
  4076  01053A                     u2191:
  4077  01053A  EFA6  F082         	goto	l3240
  4078  01053E                     u2190:
  4079  01053E                     
  4080                           ; BSR set to: 0
  4081  01053E  A566               	btfss	_flags& (0+255),2,b
  4082  010540  EFA4  F082         	goto	u2201
  4083  010544  EFA6  F082         	goto	u2200
  4084  010548                     u2201:
  4085  010548  EFA9  F082         	goto	l3242
  4086  01054C                     u2200:
  4087  01054C                     l3240:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4091  01054C  0634               	decf	dtoa@w^0,f,c
  4092  01054E  A0D8               	btfss	status,0,c
  4093  010550  0635               	decf	(dtoa@w+1)^0,f,c
  4094  010552                     l3242:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4098  010552  0E00               	movlw	0
  4099  010554  6E41               	movwf	(dtoa@i+1)^0,c
  4100  010556  0E1F               	movlw	31
  4101  010558  6E40               	movwf	dtoa@i^0,c
  4102  01055A                     
  4103                           ; BSR set to: 0
  4104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4105  01055A  0E00               	movlw	0
  4106  01055C  6F87               	movwf	(_dbuf+31)& (0+255),b
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4109  01055E  EF2D  F083         	goto	l3256
  4110  010562                     l3246:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4113  010562  0640               	decf	dtoa@i^0,f,c
  4114  010564  A0D8               	btfss	status,0,c
  4115  010566  0641               	decf	(dtoa@i+1)^0,f,c
  4116  010568                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4118  010568  0E68               	movlw	low _dbuf
  4119  01056A  2440               	addwf	dtoa@i^0,w,c
  4120  01056C  6ED9               	movwf	fsr2l,c
  4121  01056E  0E00               	movlw	high _dbuf
  4122  010570  2041               	addwfc	(dtoa@i+1)^0,w,c
  4123  010572  6EDA               	movwf	fsr2h,c
  4124  010574  C038  F001         	movff	dtoa@n,___aomod@dividend
  4125  010578  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4126  01057C  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4127  010580  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4128  010584  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4129  010588  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4130  01058C  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4131  010590  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4132  010594  0E0A               	movlw	10
  4133  010596  6E09               	movwf	___aomod@divisor^0,c
  4134  010598  0E00               	movlw	0
  4135  01059A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4136  01059C  0E00               	movlw	0
  4137  01059E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4138  0105A0  0E00               	movlw	0
  4139  0105A2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4140  0105A4  0E00               	movlw	0
  4141  0105A6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4142  0105A8  0E00               	movlw	0
  4143  0105AA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4144  0105AC  0E00               	movlw	0
  4145  0105AE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4146  0105B0  0E00               	movlw	0
  4147  0105B2  6E10               	movwf	(___aomod@divisor+7)^0,c
  4148  0105B4  ECB1  F086         	call	___aomod	;wreg free
  4149  0105B8  C001  F028         	movff	?___aomod,??_dtoa
  4150  0105BC  C002  F029         	movff	?___aomod+1,??_dtoa+1
  4151  0105C0  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  4152  0105C4  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  4153  0105C8  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  4154  0105CC  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  4155  0105D0  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  4156  0105D4  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  4157  0105D8  C028  F013         	movff	??_dtoa,abs@a
  4158  0105DC  C02A  F014         	movff	??_dtoa+2,abs@a+1
  4159  0105E0  ECDD  F08A         	call	_abs	;wreg free
  4160  0105E4  5013               	movf	?_abs^0,w,c
  4161  0105E6  0F30               	addlw	48
  4162  0105E8  6EDF               	movwf	indf2,c
  4163  0105EA                     
  4164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4165  0105EA  0632               	decf	dtoa@p^0,f,c
  4166  0105EC  A0D8               	btfss	status,0,c
  4167  0105EE  0633               	decf	(dtoa@p+1)^0,f,c
  4168  0105F0                     
  4169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4170  0105F0  0634               	decf	dtoa@w^0,f,c
  4171  0105F2  A0D8               	btfss	status,0,c
  4172  0105F4  0635               	decf	(dtoa@w+1)^0,f,c
  4173  0105F6                     
  4174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4175  0105F6  C038  F001         	movff	dtoa@n,___aodiv@dividend
  4176  0105FA  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4177  0105FE  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4178  010602  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4179  010606  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4180  01060A  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4181  01060E  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4182  010612  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4183  010616  0E0A               	movlw	10
  4184  010618  6E09               	movwf	___aodiv@divisor^0,c
  4185  01061A  0E00               	movlw	0
  4186  01061C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4187  01061E  0E00               	movlw	0
  4188  010620  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4189  010622  0E00               	movlw	0
  4190  010624  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4191  010626  0E00               	movlw	0
  4192  010628  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4193  01062A  0E00               	movlw	0
  4194  01062C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4195  01062E  0E00               	movlw	0
  4196  010630  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4197  010632  0E00               	movlw	0
  4198  010634  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4199  010636  ECED  F085         	call	___aodiv	;wreg free
  4200  01063A  C001  F038         	movff	?___aodiv,dtoa@n
  4201  01063E  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  4202  010642  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  4203  010646  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  4204  01064A  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  4205  01064E  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  4206  010652  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  4207  010656  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  4208  01065A                     l3256:
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4211  01065A  BE41               	btfsc	(dtoa@i+1)^0,7,c
  4212  01065C  EF38  F083         	goto	u2211
  4213  010660  5041               	movf	(dtoa@i+1)^0,w,c
  4214  010662  E108               	bnz	u2210
  4215  010664  0440               	decf	dtoa@i^0,w,c
  4216  010666  A0D8               	btfss	status,0,c
  4217  010668  EF38  F083         	goto	u2211
  4218  01066C  EF3A  F083         	goto	u2210
  4219  010670                     u2211:
  4220  010670  EF6B  F083         	goto	l3266
  4221  010674                     u2210:
  4222  010674  5038               	movf	dtoa@n^0,w,c
  4223  010676  1039               	iorwf	(dtoa@n+1)^0,w,c
  4224  010678  103A               	iorwf	(dtoa@n+2)^0,w,c
  4225  01067A  103B               	iorwf	(dtoa@n+3)^0,w,c
  4226  01067C  103C               	iorwf	(dtoa@n+4)^0,w,c
  4227  01067E  103D               	iorwf	(dtoa@n+5)^0,w,c
  4228  010680  103E               	iorwf	(dtoa@n+6)^0,w,c
  4229  010682  103F               	iorwf	(dtoa@n+7)^0,w,c
  4230  010684  A4D8               	btfss	status,2,c
  4231  010686  EF47  F083         	goto	u2221
  4232  01068A  EF49  F083         	goto	u2220
  4233  01068E                     u2221:
  4234  01068E  EFB1  F082         	goto	l3246
  4235  010692                     u2220:
  4236  010692  BE33               	btfsc	(dtoa@p+1)^0,7,c
  4237  010694  EF56  F083         	goto	u2230
  4238  010698  5033               	movf	(dtoa@p+1)^0,w,c
  4239  01069A  E106               	bnz	u2231
  4240  01069C  0432               	decf	dtoa@p^0,w,c
  4241  01069E  B0D8               	btfsc	status,0,c
  4242  0106A0  EF54  F083         	goto	u2231
  4243  0106A4  EF56  F083         	goto	u2230
  4244  0106A8                     u2231:
  4245  0106A8  EFB1  F082         	goto	l3246
  4246  0106AC                     u2230:
  4247  0106AC  BE35               	btfsc	(dtoa@w+1)^0,7,c
  4248  0106AE  EF61  F083         	goto	u2241
  4249  0106B2  5035               	movf	(dtoa@w+1)^0,w,c
  4250  0106B4  E108               	bnz	u2240
  4251  0106B6  0434               	decf	dtoa@w^0,w,c
  4252  0106B8  A0D8               	btfss	status,0,c
  4253  0106BA  EF61  F083         	goto	u2241
  4254  0106BE  EF63  F083         	goto	u2240
  4255  0106C2                     u2241:
  4256  0106C2  EF6B  F083         	goto	l3266
  4257  0106C6                     u2240:
  4258  0106C6  0100               	movlb	0	; () banked
  4259  0106C8  B366               	btfsc	_flags& (0+255),1,b
  4260  0106CA  EF69  F083         	goto	u2251
  4261  0106CE  EF6B  F083         	goto	u2250
  4262  0106D2                     u2251:
  4263  0106D2  EFB1  F082         	goto	l3246
  4264  0106D6                     u2250:
  4265  0106D6                     l3266:
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4268  0106D6  5036               	movf	dtoa@s^0,w,c
  4269  0106D8  1037               	iorwf	(dtoa@s+1)^0,w,c
  4270  0106DA  A4D8               	btfss	status,2,c
  4271  0106DC  EF72  F083         	goto	u2261
  4272  0106E0  EF74  F083         	goto	u2260
  4273  0106E4                     u2261:
  4274  0106E4  EF7C  F083         	goto	l3270
  4275  0106E8                     u2260:
  4276  0106E8  0100               	movlb	0	; () banked
  4277  0106EA  A566               	btfss	_flags& (0+255),2,b
  4278  0106EC  EF7A  F083         	goto	u2271
  4279  0106F0  EF7C  F083         	goto	u2270
  4280  0106F4                     u2271:
  4281  0106F4  EF9A  F083         	goto	l3280
  4282  0106F8                     u2270:
  4283  0106F8                     l3270:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4286  0106F8  0640               	decf	dtoa@i^0,f,c
  4287  0106FA  A0D8               	btfss	status,0,c
  4288  0106FC  0641               	decf	(dtoa@i+1)^0,f,c
  4289  0106FE                     
  4290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4291  0106FE  5036               	movf	dtoa@s^0,w,c
  4292  010700  1037               	iorwf	(dtoa@s+1)^0,w,c
  4293  010702  A4D8               	btfss	status,2,c
  4294  010704  EF86  F083         	goto	u2281
  4295  010708  EF88  F083         	goto	u2280
  4296  01070C                     u2281:
  4297  01070C  EF8E  F083         	goto	l3276
  4298  010710                     u2280:
  4299  010710  0E00               	movlw	0
  4300  010712  6E31               	movwf	(_dtoa$1681+1)^0,c
  4301  010714  0E2B               	movlw	43
  4302  010716  6E30               	movwf	_dtoa$1681^0,c
  4303  010718  EF92  F083         	goto	l3278
  4304  01071C                     l3276:
  4305  01071C  0E00               	movlw	0
  4306  01071E  6E31               	movwf	(_dtoa$1681+1)^0,c
  4307  010720  0E2D               	movlw	45
  4308  010722  6E30               	movwf	_dtoa$1681^0,c
  4309  010724                     l3278:
  4310  010724  0E68               	movlw	low _dbuf
  4311  010726  2440               	addwf	dtoa@i^0,w,c
  4312  010728  6ED9               	movwf	fsr2l,c
  4313  01072A  0E00               	movlw	high _dbuf
  4314  01072C  2041               	addwfc	(dtoa@i+1)^0,w,c
  4315  01072E  6EDA               	movwf	fsr2h,c
  4316  010730  C030  FFDF         	movff	_dtoa$1681,indf2
  4317  010734                     l3280:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4320  010734  C01E  F013         	movff	dtoa@fp,pad@fp
  4321  010738  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  4322  01073C  0E68               	movlw	low _dbuf
  4323  01073E  2440               	addwf	dtoa@i^0,w,c
  4324  010740  6E15               	movwf	pad@buf^0,c
  4325  010742  0E00               	movlw	high _dbuf
  4326  010744  2041               	addwfc	(dtoa@i+1)^0,w,c
  4327  010746  6E16               	movwf	(pad@buf+1)^0,c
  4328  010748  C034  F017         	movff	dtoa@w,pad@p
  4329  01074C  C035  F018         	movff	dtoa@w+1,pad@p+1
  4330  010750  EC82  F088         	call	_pad	;wreg free
  4331  010754  C013  F01E         	movff	?_pad,?_dtoa
  4332  010758  C014  F01F         	movff	?_pad+1,?_dtoa+1
  4333  01075C  0012               	return		;funcret
  4334  01075E                     __end_of_dtoa:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _pad *****************
  4338 ;; Defined at:
  4339 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4342 ;;		 -> NULL(0), 
  4343 ;;  buf             2   20[COMRAM] PTR unsigned char 
  4344 ;;		 -> dbuf(32), 
  4345 ;;  p               2   22[COMRAM] int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  w               2   27[COMRAM] int 
  4348 ;;  i               2   25[COMRAM] int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2   18[COMRAM] int 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;Total ram usage:       11 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 4
  4365 ;; This function calls:
  4366 ;;		_fputc
  4367 ;;		_fputs
  4368 ;;		_strlen
  4369 ;; This function is called by:
  4370 ;;		_dtoa
  4371 ;;		_xtoa
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text18
  4376  011104                     __ptext18:
  4377                           	callstack 0
  4378  011104                     _pad:
  4379                           	callstack 20
  4380  011104                     
  4381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4382  011104  0100               	movlb	0	; () banked
  4383  011106  A166               	btfss	_flags& (0+255),0,b
  4384  011108  EF88  F088         	goto	u1981
  4385  01110C  EF8A  F088         	goto	u1980
  4386  011110                     u1981:
  4387  011110  EF94  F088         	goto	l3166
  4388  011114                     u1980:
  4389  011114                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4392  011114  C015  F00C         	movff	pad@buf,fputs@s
  4393  011118  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4394  01111C  C013  F00E         	movff	pad@fp,fputs@fp
  4395  011120  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4396  011124  EC9A  F08A         	call	_fputs	;wreg free
  4397  011128                     l3166:
  4398                           
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4400  011128  BE18               	btfsc	(pad@p+1)^0,7,c
  4401  01112A  EF99  F088         	goto	u1991
  4402  01112E  EF9B  F088         	goto	u1990
  4403  011132                     u1991:
  4404  011132  EFA1  F088         	goto	l3170
  4405  011136                     u1990:
  4406  011136  C017  F01C         	movff	pad@p,pad@w
  4407  01113A  C018  F01D         	movff	pad@p+1,pad@w+1
  4408  01113E  EFA5  F088         	goto	l1047
  4409  011142                     l3170:
  4410  011142  0E00               	movlw	0
  4411  011144  6E1D               	movwf	(pad@w+1)^0,c
  4412  011146  0E00               	movlw	0
  4413  011148  6E1C               	movwf	pad@w^0,c
  4414  01114A                     l1047:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4417  01114A  0E00               	movlw	0
  4418  01114C  6E1B               	movwf	(pad@i+1)^0,c
  4419  01114E  0E00               	movlw	0
  4420  011150  6E1A               	movwf	pad@i^0,c
  4421                           
  4422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4423  011152  EFB7  F088         	goto	l3176
  4424  011156                     l3172:
  4425                           
  4426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4427  011156  0E00               	movlw	0
  4428  011158  6E04               	movwf	(fputc@c+1)^0,c
  4429  01115A  0E20               	movlw	32
  4430  01115C  6E03               	movwf	fputc@c^0,c
  4431  01115E  C013  F005         	movff	pad@fp,fputc@fp
  4432  011162  C014  F006         	movff	pad@fp+1,fputc@fp+1
  4433  011166  EC43  F089         	call	_fputc	;wreg free
  4434  01116A                     
  4435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4436  01116A  4A1A               	infsnz	pad@i^0,f,c
  4437  01116C  2A1B               	incf	(pad@i+1)^0,f,c
  4438  01116E                     l3176:
  4439                           
  4440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4441  01116E  501C               	movf	pad@w^0,w,c
  4442  011170  5C1A               	subwf	pad@i^0,w,c
  4443  011172  501B               	movf	(pad@i+1)^0,w,c
  4444  011174  0A80               	xorlw	128
  4445  011176  6E19               	movwf	??_pad^0,c
  4446  011178  501D               	movf	(pad@w+1)^0,w,c
  4447  01117A  0A80               	xorlw	128
  4448  01117C  5819               	subwfb	??_pad^0,w,c
  4449  01117E  A0D8               	btfss	status,0,c
  4450  011180  EFC4  F088         	goto	u2001
  4451  011184  EFC6  F088         	goto	u2000
  4452  011188                     u2001:
  4453  011188  EFAB  F088         	goto	l3172
  4454  01118C                     u2000:
  4455  01118C                     
  4456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4457  01118C  0100               	movlb	0	; () banked
  4458  01118E  B166               	btfsc	_flags& (0+255),0,b
  4459  011190  EFCC  F088         	goto	u2011
  4460  011194  EFCE  F088         	goto	u2010
  4461  011198                     u2011:
  4462  011198  EFD8  F088         	goto	l3180
  4463  01119C                     u2010:
  4464  01119C                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4467  01119C  C015  F00C         	movff	pad@buf,fputs@s
  4468  0111A0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4469  0111A4  C013  F00E         	movff	pad@fp,fputs@fp
  4470  0111A8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4471  0111AC  EC9A  F08A         	call	_fputs	;wreg free
  4472  0111B0                     l3180:
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4475  0111B0  C015  F001         	movff	pad@buf,strlen@s
  4476  0111B4  C016  F002         	movff	pad@buf+1,strlen@s+1
  4477  0111B8  EC6F  F08B         	call	_strlen	;wreg free
  4478  0111BC  501C               	movf	pad@w^0,w,c
  4479  0111BE  2401               	addwf	?_strlen^0,w,c
  4480  0111C0  6E13               	movwf	?_pad^0,c
  4481  0111C2  501D               	movf	(pad@w+1)^0,w,c
  4482  0111C4  2002               	addwfc	(?_strlen+1)^0,w,c
  4483  0111C6  6E14               	movwf	(?_pad+1)^0,c
  4484  0111C8  0012               	return		;funcret
  4485  0111CA                     __end_of_pad:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function _strlen *****************
  4489 ;; Defined at:
  4490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4493 ;;		 -> dbuf(32), 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4496 ;;		 -> dbuf(32), 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2    0[COMRAM] unsigned int 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;Total ram usage:        4 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_pad
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text19
  4520  0116DE                     __ptext19:
  4521                           	callstack 0
  4522  0116DE                     _strlen:
  4523                           	callstack 23
  4524  0116DE  C001  F003         	movff	strlen@s,strlen@a
  4525  0116E2  C002  F004         	movff	strlen@s+1,strlen@a+1
  4526  0116E6  EF77  F08B         	goto	l3066
  4527  0116EA                     l3064:
  4528  0116EA  4A01               	infsnz	strlen@s^0,f,c
  4529  0116EC  2A02               	incf	(strlen@s+1)^0,f,c
  4530  0116EE                     l3066:
  4531  0116EE  C001  FFD9         	movff	strlen@s,fsr2l
  4532  0116F2  C002  FFDA         	movff	strlen@s+1,fsr2h
  4533  0116F6  50DF               	movf	indf2,w,c
  4534  0116F8  A4D8               	btfss	status,2,c
  4535  0116FA  EF81  F08B         	goto	u1821
  4536  0116FE  EF83  F08B         	goto	u1820
  4537  011702                     u1821:
  4538  011702  EF75  F08B         	goto	l3064
  4539  011706                     u1820:
  4540  011706  5003               	movf	strlen@a^0,w,c
  4541  011708  5C01               	subwf	strlen@s^0,w,c
  4542  01170A  6E01               	movwf	?_strlen^0,c
  4543  01170C  5004               	movf	(strlen@a+1)^0,w,c
  4544  01170E  5802               	subwfb	(strlen@s+1)^0,w,c
  4545  011710  6E02               	movwf	(?_strlen+1)^0,c
  4546  011712  0012               	return		;funcret
  4547  011714                     __end_of_strlen:
  4548                           	callstack 0
  4549                           
  4550 ;; *************** function _fputs *****************
  4551 ;; Defined at:
  4552 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4555 ;;		 -> dbuf(32), 
  4556 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4557 ;;		 -> NULL(0), 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  i               2   16[COMRAM] int 
  4560 ;;  c               1   15[COMRAM] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2   11[COMRAM] int 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;Total ram usage:        7 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 3
  4577 ;; This function calls:
  4578 ;;		_fputc
  4579 ;; This function is called by:
  4580 ;;		_pad
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text20
  4585  011534                     __ptext20:
  4586                           	callstack 0
  4587  011534                     _fputs:
  4588                           	callstack 20
  4589  011534  0E00               	movlw	0
  4590  011536  6E12               	movwf	(fputs@i+1)^0,c
  4591  011538  0E00               	movlw	0
  4592  01153A  6E11               	movwf	fputs@i^0,c
  4593  01153C  EFAB  F08A         	goto	l3060
  4594  011540                     l3056:
  4595  011540  C010  F003         	movff	fputs@c,fputc@c
  4596  011544  6A04               	clrf	(fputc@c+1)^0,c
  4597  011546  C00E  F005         	movff	fputs@fp,fputc@fp
  4598  01154A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  4599  01154E  EC43  F089         	call	_fputc	;wreg free
  4600  011552  4A11               	infsnz	fputs@i^0,f,c
  4601  011554  2A12               	incf	(fputs@i+1)^0,f,c
  4602  011556                     l3060:
  4603  011556  5011               	movf	fputs@i^0,w,c
  4604  011558  240C               	addwf	fputs@s^0,w,c
  4605  01155A  6ED9               	movwf	fsr2l,c
  4606  01155C  5012               	movf	(fputs@i+1)^0,w,c
  4607  01155E  200D               	addwfc	(fputs@s+1)^0,w,c
  4608  011560  6EDA               	movwf	fsr2h,c
  4609  011562  50DF               	movf	indf2,w,c
  4610  011564  6E10               	movwf	fputs@c^0,c
  4611  011566  5010               	movf	fputs@c^0,w,c
  4612  011568  A4D8               	btfss	status,2,c
  4613  01156A  EFB9  F08A         	goto	u1811
  4614  01156E  EFBB  F08A         	goto	u1810
  4615  011572                     u1811:
  4616  011572  EFA0  F08A         	goto	l3056
  4617  011576                     u1810:
  4618  011576  0012               	return		;funcret
  4619  011578                     __end_of_fputs:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _fputc *****************
  4623 ;; Defined at:
  4624 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  c               2    2[COMRAM] int 
  4627 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4628 ;;		 -> NULL(0), 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2    2[COMRAM] int 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;Total ram usage:        9 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 2
  4647 ;; This function calls:
  4648 ;;		_putch
  4649 ;; This function is called by:
  4650 ;;		_pad
  4651 ;;		_vfpfcnvrt
  4652 ;;		_fputs
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text21
  4657  011286                     __ptext21:
  4658                           	callstack 0
  4659  011286                     _fputc:
  4660                           	callstack 20
  4661  011286  5005               	movf	fputc@fp^0,w,c
  4662  011288  1006               	iorwf	(fputc@fp+1)^0,w,c
  4663  01128A  B4D8               	btfsc	status,2,c
  4664  01128C  EF4A  F089         	goto	u1771
  4665  011290  EF4C  F089         	goto	u1770
  4666  011294                     u1771:
  4667  011294  EF55  F089         	goto	l3044
  4668  011298                     u1770:
  4669  011298  5005               	movf	fputc@fp^0,w,c
  4670  01129A  1006               	iorwf	(fputc@fp+1)^0,w,c
  4671  01129C  A4D8               	btfss	status,2,c
  4672  01129E  EF53  F089         	goto	u1781
  4673  0112A2  EF55  F089         	goto	u1780
  4674  0112A6                     u1781:
  4675  0112A6  EF5A  F089         	goto	l3046
  4676  0112AA                     u1780:
  4677  0112AA                     l3044:
  4678  0112AA  5003               	movf	fputc@c^0,w,c
  4679  0112AC  EC70  F08C         	call	_putch
  4680  0112B0  EF8D  F089         	goto	l1223
  4681  0112B4                     l3046:
  4682  0112B4  EE20 F004          	lfsr	2,4
  4683  0112B8  5005               	movf	fputc@fp^0,w,c
  4684  0112BA  26D9               	addwf	fsr2l,f,c
  4685  0112BC  5006               	movf	(fputc@fp+1)^0,w,c
  4686  0112BE  22DA               	addwfc	fsr2h,f,c
  4687  0112C0  50DE               	movf	postinc2,w,c
  4688  0112C2  10DE               	iorwf	postinc2,w,c
  4689  0112C4  B4D8               	btfsc	status,2,c
  4690  0112C6  EF67  F089         	goto	u1791
  4691  0112CA  EF69  F089         	goto	u1790
  4692  0112CE                     u1791:
  4693  0112CE  EF84  F089         	goto	l3050
  4694  0112D2                     u1790:
  4695  0112D2  EE20 F004          	lfsr	2,4
  4696  0112D6  5005               	movf	fputc@fp^0,w,c
  4697  0112D8  26D9               	addwf	fsr2l,f,c
  4698  0112DA  5006               	movf	(fputc@fp+1)^0,w,c
  4699  0112DC  22DA               	addwfc	fsr2h,f,c
  4700  0112DE  EE10 F002          	lfsr	1,2
  4701  0112E2  5005               	movf	fputc@fp^0,w,c
  4702  0112E4  26E1               	addwf	fsr1l,f,c
  4703  0112E6  5006               	movf	(fputc@fp+1)^0,w,c
  4704  0112E8  22E2               	addwfc	fsr1h,f,c
  4705  0112EA  50DE               	movf	postinc2,w,c
  4706  0112EC  5CE6               	subwf	postinc1,w,c
  4707  0112EE  50E6               	movf	postinc1,w,c
  4708  0112F0  0A80               	xorlw	128
  4709  0112F2  6E0B               	movwf	(??_fputc+4)^0,c
  4710  0112F4  50DE               	movf	postinc2,w,c
  4711  0112F6  0A80               	xorlw	128
  4712  0112F8  580B               	subwfb	(??_fputc+4)^0,w,c
  4713  0112FA  B0D8               	btfsc	status,0,c
  4714  0112FC  EF82  F089         	goto	u1801
  4715  011300  EF84  F089         	goto	u1800
  4716  011304                     u1801:
  4717  011304  EF8D  F089         	goto	l1223
  4718  011308                     u1800:
  4719  011308                     l3050:
  4720  011308  EE20 F002          	lfsr	2,2
  4721  01130C  5005               	movf	fputc@fp^0,w,c
  4722  01130E  26D9               	addwf	fsr2l,f,c
  4723  011310  5006               	movf	(fputc@fp+1)^0,w,c
  4724  011312  22DA               	addwfc	fsr2h,f,c
  4725  011314  2ADE               	incf	postinc2,f,c
  4726  011316  0E00               	movlw	0
  4727  011318  22DD               	addwfc	postdec2,f,c
  4728  01131A                     l1223:
  4729  01131A  0012               	return		;funcret
  4730  01131C                     __end_of_fputc:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _putch *****************
  4734 ;; Defined at:
  4735 ;;		line 40 in file "MAX17320.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  data            1    wreg     unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  data            1    1[COMRAM] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 1
  4756 ;; This function calls:
  4757 ;;		_SendCharUSB
  4758 ;; This function is called by:
  4759 ;;		_fputc
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text22
  4764  0118E0                     __ptext22:
  4765                           	callstack 0
  4766  0118E0                     _putch:
  4767                           	callstack 20
  4768                           
  4769                           ;incstack = 0
  4770                           ;putch@data stored from wreg
  4771  0118E0  6E02               	movwf	putch@data^0,c
  4772  0118E2                     
  4773                           ;MAX17320.c: 41:     SendCharUSB(data);
  4774  0118E2  5002               	movf	putch@data^0,w,c
  4775  0118E4  ECBC  F08A         	call	_SendCharUSB
  4776  0118E8  0012               	return		;funcret
  4777  0118EA                     __end_of_putch:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _SendCharUSB *****************
  4781 ;; Defined at:
  4782 ;;		line 169 in file "newmain.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  d               1    wreg     unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  d               1    0[COMRAM] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;Total ram usage:        1 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_putch
  4806 ;;		_showText
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text23
  4811  011578                     __ptext23:
  4812                           	callstack 0
  4813  011578                     _SendCharUSB:
  4814                           	callstack 29
  4815                           
  4816                           ;incstack = 0
  4817                           ;SendCharUSB@d stored from wreg
  4818  011578  6E01               	movwf	SendCharUSB@d^0,c
  4819  01157A                     l319:
  4820  01157A  010E               	movlb	14	; () banked
  4821  01157C  A937               	btfss	55,4,b	;volatile
  4822  01157E  EFC3  F08A         	goto	u1731
  4823  011582  EFC5  F08A         	goto	u1730
  4824  011586                     u1731:
  4825  011586  EFBD  F08A         	goto	l319
  4826  01158A                     u1730:
  4827  01158A                     
  4828                           ; BSR set to: 14
  4829                           ;newmain.c: 173:  if ((!RF6&&!!RF7&&!RF5))
  4830  01158A  BC8E               	btfsc	3982,6,c	;volatile
  4831  01158C  EFCA  F08A         	goto	u1741
  4832  011590  EFCC  F08A         	goto	u1740
  4833  011594                     u1741:
  4834  011594  EFDC  F08A         	goto	l323
  4835  011598                     u1740:
  4836  011598                     
  4837                           ; BSR set to: 14
  4838  011598  AE8E               	btfss	3982,7,c	;volatile
  4839  01159A  EFD1  F08A         	goto	u1751
  4840  01159E  EFD3  F08A         	goto	u1750
  4841  0115A2                     u1751:
  4842  0115A2  EFDC  F08A         	goto	l323
  4843  0115A6                     u1750:
  4844  0115A6                     
  4845                           ; BSR set to: 14
  4846  0115A6  BA8E               	btfsc	3982,5,c	;volatile
  4847  0115A8  EFD8  F08A         	goto	u1761
  4848  0115AC  EFDA  F08A         	goto	u1760
  4849  0115B0                     u1761:
  4850  0115B0  EFDC  F08A         	goto	l323
  4851  0115B4                     u1760:
  4852  0115B4                     
  4853                           ; BSR set to: 14
  4854                           ;newmain.c: 174:  {;newmain.c: 184:   TX5REG = d;
  4855  0115B4  C001  FEDD         	movff	SendCharUSB@d,3805	;volatile
  4856  0115B8                     l323:
  4857                           
  4858                           ; BSR set to: 14
  4859  0115B8  0012               	return		;funcret
  4860  0115BA                     __end_of_SendCharUSB:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _abs *****************
  4864 ;; Defined at:
  4865 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  a               2   18[COMRAM] int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2   18[COMRAM] int 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;Total ram usage:        4 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_dtoa
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text24
  4893  0115BA                     __ptext24:
  4894                           	callstack 0
  4895  0115BA                     _abs:
  4896                           	callstack 24
  4897  0115BA  BE14               	btfsc	(abs@a+1)^0,7,c
  4898  0115BC  EFEA  F08A         	goto	u2020
  4899  0115C0  5014               	movf	(abs@a+1)^0,w,c
  4900  0115C2  E106               	bnz	u2021
  4901  0115C4  0413               	decf	abs@a^0,w,c
  4902  0115C6  B0D8               	btfsc	status,0,c
  4903  0115C8  EFE8  F08A         	goto	u2021
  4904  0115CC  EFEA  F08A         	goto	u2020
  4905  0115D0                     u2021:
  4906  0115D0  EFF8  F08A         	goto	l1151
  4907  0115D4                     u2020:
  4908  0115D4  C013  F015         	movff	abs@a,??_abs
  4909  0115D8  C014  F016         	movff	abs@a+1,??_abs+1
  4910  0115DC  1E15               	comf	??_abs^0,f,c
  4911  0115DE  1E16               	comf	(??_abs+1)^0,f,c
  4912  0115E0  4A15               	infsnz	??_abs^0,f,c
  4913  0115E2  2A16               	incf	(??_abs+1)^0,f,c
  4914  0115E4  C015  F013         	movff	??_abs,?_abs
  4915  0115E8  C016  F014         	movff	??_abs+1,?_abs+1
  4916  0115EC  EFFC  F08A         	goto	l1154
  4917  0115F0                     l1151:
  4918  0115F0  C013  F013         	movff	abs@a,?_abs
  4919  0115F4  C014  F014         	movff	abs@a+1,?_abs+1
  4920  0115F8                     l1154:
  4921  0115F8  0012               	return		;funcret
  4922  0115FA                     __end_of_abs:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function ___aomod *****************
  4926 ;; Defined at:
  4927 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  dividend        8    0[COMRAM] long long 
  4930 ;;  divisor         8    8[COMRAM] long long 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  sign            1   17[COMRAM] unsigned char 
  4933 ;;  counter         1   16[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  8    0[COMRAM] long long 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4943 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;Total ram usage:       18 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_dtoa
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text25
  4957  010D62                     __ptext25:
  4958                           	callstack 0
  4959  010D62                     ___aomod:
  4960                           	callstack 24
  4961  010D62  0E00               	movlw	0
  4962  010D64  6E12               	movwf	___aomod@sign^0,c
  4963  010D66  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4964  010D68  EFBA  F086         	goto	u1920
  4965  010D6C  EFB8  F086         	goto	u1921
  4966  010D70                     u1921:
  4967  010D70  EFCC  F086         	goto	l3134
  4968  010D74                     u1920:
  4969  010D74  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4970  010D76  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4971  010D78  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4972  010D7A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4973  010D7C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4974  010D7E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4975  010D80  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4976  010D82  6C01               	negf	___aomod@dividend^0,c
  4977  010D84  0E00               	movlw	0
  4978  010D86  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4979  010D88  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4980  010D8A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4981  010D8C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4982  010D8E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4983  010D90  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4984  010D92  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4985  010D94  0E01               	movlw	1
  4986  010D96  6E12               	movwf	___aomod@sign^0,c
  4987  010D98                     l3134:
  4988  010D98  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4989  010D9A  EFD3  F086         	goto	u1930
  4990  010D9E  EFD1  F086         	goto	u1931
  4991  010DA2                     u1931:
  4992  010DA2  EFE3  F086         	goto	l3138
  4993  010DA6                     u1930:
  4994  010DA6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4995  010DA8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4996  010DAA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4997  010DAC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4998  010DAE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4999  010DB0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5000  010DB2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5001  010DB4  6C09               	negf	___aomod@divisor^0,c
  5002  010DB6  0E00               	movlw	0
  5003  010DB8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5004  010DBA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5005  010DBC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5006  010DBE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5007  010DC0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5008  010DC2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5009  010DC4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5010  010DC6                     l3138:
  5011  010DC6  5009               	movf	___aomod@divisor^0,w,c
  5012  010DC8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5013  010DCA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5014  010DCC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5015  010DCE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5016  010DD0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5017  010DD2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5018  010DD4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5019  010DD6  B4D8               	btfsc	status,2,c
  5020  010DD8  EFF0  F086         	goto	u1941
  5021  010DDC  EFF2  F086         	goto	u1940
  5022  010DE0                     u1941:
  5023  010DE0  EF3A  F087         	goto	l3154
  5024  010DE4                     u1940:
  5025  010DE4  0E01               	movlw	1
  5026  010DE6  6E11               	movwf	___aomod@counter^0,c
  5027  010DE8  EF00  F087         	goto	l3144
  5028  010DEC                     l3142:
  5029  010DEC  90D8               	bcf	status,0,c
  5030  010DEE  3609               	rlcf	___aomod@divisor^0,f,c
  5031  010DF0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5032  010DF2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5033  010DF4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5034  010DF6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5035  010DF8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5036  010DFA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5037  010DFC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5038  010DFE  2A11               	incf	___aomod@counter^0,f,c
  5039  010E00                     l3144:
  5040  010E00  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5041  010E02  EF05  F087         	goto	u1951
  5042  010E06  EF07  F087         	goto	u1950
  5043  010E0A                     u1951:
  5044  010E0A  EFF6  F086         	goto	l3142
  5045  010E0E                     u1950:
  5046  010E0E                     l3146:
  5047  010E0E  5009               	movf	___aomod@divisor^0,w,c
  5048  010E10  5C01               	subwf	___aomod@dividend^0,w,c
  5049  010E12  500A               	movf	(___aomod@divisor+1)^0,w,c
  5050  010E14  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5051  010E16  500B               	movf	(___aomod@divisor+2)^0,w,c
  5052  010E18  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5053  010E1A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5054  010E1C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5055  010E1E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5056  010E20  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5057  010E22  500E               	movf	(___aomod@divisor+5)^0,w,c
  5058  010E24  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5059  010E26  500F               	movf	(___aomod@divisor+6)^0,w,c
  5060  010E28  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5061  010E2A  5010               	movf	(___aomod@divisor+7)^0,w,c
  5062  010E2C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5063  010E2E  A0D8               	btfss	status,0,c
  5064  010E30  EF1C  F087         	goto	u1961
  5065  010E34  EF1E  F087         	goto	u1960
  5066  010E38                     u1961:
  5067  010E38  EF2E  F087         	goto	l3150
  5068  010E3C                     u1960:
  5069  010E3C  5009               	movf	___aomod@divisor^0,w,c
  5070  010E3E  5E01               	subwf	___aomod@dividend^0,f,c
  5071  010E40  500A               	movf	(___aomod@divisor+1)^0,w,c
  5072  010E42  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5073  010E44  500B               	movf	(___aomod@divisor+2)^0,w,c
  5074  010E46  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5075  010E48  500C               	movf	(___aomod@divisor+3)^0,w,c
  5076  010E4A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5077  010E4C  500D               	movf	(___aomod@divisor+4)^0,w,c
  5078  010E4E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5079  010E50  500E               	movf	(___aomod@divisor+5)^0,w,c
  5080  010E52  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5081  010E54  500F               	movf	(___aomod@divisor+6)^0,w,c
  5082  010E56  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5083  010E58  5010               	movf	(___aomod@divisor+7)^0,w,c
  5084  010E5A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5085  010E5C                     l3150:
  5086  010E5C  90D8               	bcf	status,0,c
  5087  010E5E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5088  010E60  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5089  010E62  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5090  010E64  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5091  010E66  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5092  010E68  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5093  010E6A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5094  010E6C  3209               	rrcf	___aomod@divisor^0,f,c
  5095  010E6E  2E11               	decfsz	___aomod@counter^0,f,c
  5096  010E70  EF07  F087         	goto	l3146
  5097  010E74                     l3154:
  5098  010E74  5012               	movf	___aomod@sign^0,w,c
  5099  010E76  B4D8               	btfsc	status,2,c
  5100  010E78  EF40  F087         	goto	u1971
  5101  010E7C  EF42  F087         	goto	u1970
  5102  010E80                     u1971:
  5103  010E80  EF52  F087         	goto	l3158
  5104  010E84                     u1970:
  5105  010E84  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5106  010E86  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5107  010E88  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5108  010E8A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5109  010E8C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5110  010E8E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5111  010E90  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5112  010E92  6C01               	negf	___aomod@dividend^0,c
  5113  010E94  0E00               	movlw	0
  5114  010E96  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5115  010E98  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5116  010E9A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5117  010E9C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5118  010E9E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5119  010EA0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5120  010EA2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5121  010EA4                     l3158:
  5122  010EA4  C001  F001         	movff	___aomod@dividend,?___aomod
  5123  010EA8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5124  010EAC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5125  010EB0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5126  010EB4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5127  010EB8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5128  010EBC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5129  010EC0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5130  010EC4  0012               	return		;funcret
  5131  010EC6                     __end_of___aomod:
  5132                           	callstack 0
  5133                           
  5134 ;; *************** function ___aodiv *****************
  5135 ;; Defined at:
  5136 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  dividend        8    0[COMRAM] long long 
  5139 ;;  divisor         8    8[COMRAM] long long 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  quotient        8   18[COMRAM] long long 
  5142 ;;  sign            1   17[COMRAM] unsigned char 
  5143 ;;  counter         1   16[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  8    0[COMRAM] long long 
  5146 ;; Registers used:
  5147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5153 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;Total ram usage:       26 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_dtoa
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text26
  5167  010BDA                     __ptext26:
  5168                           	callstack 0
  5169  010BDA                     ___aodiv:
  5170                           	callstack 24
  5171  010BDA  0E00               	movlw	0
  5172  010BDC  6E12               	movwf	___aodiv@sign^0,c
  5173  010BDE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5174  010BE0  EFF6  F085         	goto	u1850
  5175  010BE4  EFF4  F085         	goto	u1851
  5176  010BE8                     u1851:
  5177  010BE8  EF08  F086         	goto	l3090
  5178  010BEC                     u1850:
  5179  010BEC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5180  010BEE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5181  010BF0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5182  010BF2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5183  010BF4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5184  010BF6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5185  010BF8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5186  010BFA  6C09               	negf	___aodiv@divisor^0,c
  5187  010BFC  0E00               	movlw	0
  5188  010BFE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5189  010C00  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5190  010C02  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5191  010C04  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5192  010C06  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5193  010C08  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5194  010C0A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5195  010C0C  0E01               	movlw	1
  5196  010C0E  6E12               	movwf	___aodiv@sign^0,c
  5197  010C10                     l3090:
  5198  010C10  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5199  010C12  EF0F  F086         	goto	u1860
  5200  010C16  EF0D  F086         	goto	u1861
  5201  010C1A                     u1861:
  5202  010C1A  EF21  F086         	goto	l3096
  5203  010C1E                     u1860:
  5204  010C1E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5205  010C20  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5206  010C22  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5207  010C24  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5208  010C26  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5209  010C28  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5210  010C2A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5211  010C2C  6C01               	negf	___aodiv@dividend^0,c
  5212  010C2E  0E00               	movlw	0
  5213  010C30  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5214  010C32  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5215  010C34  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5216  010C36  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5217  010C38  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5218  010C3A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5219  010C3C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5220  010C3E  0E01               	movlw	1
  5221  010C40  1A12               	xorwf	___aodiv@sign^0,f,c
  5222  010C42                     l3096:
  5223  010C42  EE20  F013         	lfsr	2,___aodiv@quotient
  5224  010C46  0E07               	movlw	7
  5225  010C48                     u1871:
  5226  010C48  6ADE               	clrf	postinc2,c
  5227  010C4A  06E8               	decf	wreg,f,c
  5228  010C4C  E2FD               	bc	u1871
  5229  010C4E  5009               	movf	___aodiv@divisor^0,w,c
  5230  010C50  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5231  010C52  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5232  010C54  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5233  010C56  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5234  010C58  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5235  010C5A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5236  010C5C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5237  010C5E  B4D8               	btfsc	status,2,c
  5238  010C60  EF34  F086         	goto	u1881
  5239  010C64  EF36  F086         	goto	u1880
  5240  010C68                     u1881:
  5241  010C68  EF88  F086         	goto	l3118
  5242  010C6C                     u1880:
  5243  010C6C  0E01               	movlw	1
  5244  010C6E  6E11               	movwf	___aodiv@counter^0,c
  5245  010C70  EF44  F086         	goto	l3104
  5246  010C74                     l3102:
  5247  010C74  90D8               	bcf	status,0,c
  5248  010C76  3609               	rlcf	___aodiv@divisor^0,f,c
  5249  010C78  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5250  010C7A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5251  010C7C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5252  010C7E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5253  010C80  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5254  010C82  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5255  010C84  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5256  010C86  2A11               	incf	___aodiv@counter^0,f,c
  5257  010C88                     l3104:
  5258  010C88  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5259  010C8A  EF49  F086         	goto	u1891
  5260  010C8E  EF4B  F086         	goto	u1890
  5261  010C92                     u1891:
  5262  010C92  EF3A  F086         	goto	l3102
  5263  010C96                     u1890:
  5264  010C96                     l3106:
  5265  010C96  90D8               	bcf	status,0,c
  5266  010C98  3613               	rlcf	___aodiv@quotient^0,f,c
  5267  010C9A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5268  010C9C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5269  010C9E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5270  010CA0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5271  010CA2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5272  010CA4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5273  010CA6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5274  010CA8  5009               	movf	___aodiv@divisor^0,w,c
  5275  010CAA  5C01               	subwf	___aodiv@dividend^0,w,c
  5276  010CAC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5277  010CAE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5278  010CB0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5279  010CB2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5280  010CB4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5281  010CB6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5282  010CB8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5283  010CBA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5284  010CBC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5285  010CBE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5286  010CC0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5287  010CC2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5288  010CC4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5289  010CC6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5290  010CC8  A0D8               	btfss	status,0,c
  5291  010CCA  EF69  F086         	goto	u1901
  5292  010CCE  EF6B  F086         	goto	u1900
  5293  010CD2                     u1901:
  5294  010CD2  EF7C  F086         	goto	l3114
  5295  010CD6                     u1900:
  5296  010CD6  5009               	movf	___aodiv@divisor^0,w,c
  5297  010CD8  5E01               	subwf	___aodiv@dividend^0,f,c
  5298  010CDA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5299  010CDC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5300  010CDE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5301  010CE0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5302  010CE2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5303  010CE4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5304  010CE6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5305  010CE8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5306  010CEA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5307  010CEC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5308  010CEE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5309  010CF0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5310  010CF2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5311  010CF4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5312  010CF6  8013               	bsf	___aodiv@quotient^0,0,c
  5313  010CF8                     l3114:
  5314  010CF8  90D8               	bcf	status,0,c
  5315  010CFA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5316  010CFC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5317  010CFE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5318  010D00  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5319  010D02  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5320  010D04  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5321  010D06  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5322  010D08  3209               	rrcf	___aodiv@divisor^0,f,c
  5323  010D0A  2E11               	decfsz	___aodiv@counter^0,f,c
  5324  010D0C  EF4B  F086         	goto	l3106
  5325  010D10                     l3118:
  5326  010D10  5012               	movf	___aodiv@sign^0,w,c
  5327  010D12  B4D8               	btfsc	status,2,c
  5328  010D14  EF8E  F086         	goto	u1911
  5329  010D18  EF90  F086         	goto	u1910
  5330  010D1C                     u1911:
  5331  010D1C  EFA0  F086         	goto	l3122
  5332  010D20                     u1910:
  5333  010D20  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5334  010D22  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5335  010D24  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5336  010D26  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5337  010D28  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5338  010D2A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5339  010D2C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5340  010D2E  6C13               	negf	___aodiv@quotient^0,c
  5341  010D30  0E00               	movlw	0
  5342  010D32  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5343  010D34  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5344  010D36  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5345  010D38  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5346  010D3A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5347  010D3C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5348  010D3E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5349  010D40                     l3122:
  5350  010D40  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5351  010D44  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5352  010D48  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5353  010D4C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5354  010D50  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5355  010D54  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5356  010D58  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5357  010D5C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5358  010D60  0012               	return		;funcret
  5359  010D62                     __end_of___aodiv:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function _atoi *****************
  5363 ;; Defined at:
  5364 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5367 ;;		 -> STR_36(30), STR_35(30), STR_34(22), STR_33(22), 
  5368 ;;		 -> STR_32(22), STR_31(11), STR_30(17), STR_29(17), 
  5369 ;;		 -> STR_28(26), STR_27(26), STR_26(26), STR_25(28), 
  5370 ;;		 -> STR_24(26), STR_23(26), STR_22(26), STR_21(26), 
  5371 ;;		 -> STR_20(26), STR_19(26), STR_18(26), STR_17(26), 
  5372 ;;		 -> STR_16(27), STR_15(27), STR_14(17), STR_13(17), 
  5373 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  5374 ;;		 -> STR_8(17), STR_7(11), STR_6(10), STR_5(17), 
  5375 ;;		 -> STR_4(17), STR_3(14), STR_2(14), STR_1(6), 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  n               2   20[COMRAM] int 
  5378 ;;  neg             2   13[COMRAM] int 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  2    7[COMRAM] int 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5389 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;Total ram usage:       15 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 1
  5395 ;; This function calls:
  5396 ;;		___wmul
  5397 ;;		_isdigit
  5398 ;;		_isspace
  5399 ;; This function is called by:
  5400 ;;		_vfpfcnvrt
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text27
  5405  010A36                     __ptext27:
  5406                           	callstack 0
  5407  010A36                     _atoi:
  5408                           	callstack 24
  5409  010A36  0E00               	movlw	0
  5410  010A38  6E16               	movwf	(atoi@n+1)^0,c
  5411  010A3A  0E00               	movlw	0
  5412  010A3C  6E15               	movwf	atoi@n^0,c
  5413  010A3E  0E00               	movlw	0
  5414  010A40  6E0F               	movwf	(atoi@neg+1)^0,c
  5415  010A42  0E00               	movlw	0
  5416  010A44  6E0E               	movwf	atoi@neg^0,c
  5417  010A46  EF27  F085         	goto	l3354
  5418  010A4A                     l3352:
  5419  010A4A  4A08               	infsnz	atoi@s^0,f,c
  5420  010A4C  2A09               	incf	(atoi@s+1)^0,f,c
  5421  010A4E                     l3354:
  5422  010A4E  0E01               	movlw	1
  5423  010A50  6E14               	movwf	_atoi$1729^0,c
  5424  010A52  C008  FFF6         	movff	atoi@s,tblptrl
  5425  010A56  C009  FFF7         	movff	atoi@s+1,tblptrh
  5426  010A5A                     	if	0	;tblptru may be non-zero
  5427  010A5A                     	endif
  5428  010A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5429  010A5A  0E00               	movlw	low (__mediumconst shr (0+16))
  5430  010A5C  6EF8               	movwf	tblptru,c
  5431  010A5E                     	endif
  5432  010A5E  0008               	tblrd		*
  5433  010A60  50F5               	movf	tablat,w,c
  5434  010A62  0A20               	xorlw	32
  5435  010A64  B4D8               	btfsc	status,2,c
  5436  010A66  EF37  F085         	goto	u2461
  5437  010A6A  EF39  F085         	goto	u2460
  5438  010A6E                     u2461:
  5439  010A6E  EF58  F085         	goto	l3362
  5440  010A72                     u2460:
  5441  010A72  0EF7               	movlw	247
  5442  010A74  6E0A               	movwf	??_atoi^0,c
  5443  010A76  0EFF               	movlw	255
  5444  010A78  6E0B               	movwf	(??_atoi+1)^0,c
  5445  010A7A  C008  FFF6         	movff	atoi@s,tblptrl
  5446  010A7E  C009  FFF7         	movff	atoi@s+1,tblptrh
  5447  010A82                     	if	0	;tblptru may be non-zero
  5448  010A82                     	endif
  5449  010A82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5450  010A82  0E00               	movlw	low (__mediumconst shr (0+16))
  5451  010A84  6EF8               	movwf	tblptru,c
  5452  010A86                     	endif
  5453  010A86  0008               	tblrd		*
  5454  010A88  50F5               	movf	tablat,w,c
  5455  010A8A  6E0C               	movwf	(??_atoi+2)^0,c
  5456  010A8C  6A0D               	clrf	(??_atoi+3)^0,c
  5457  010A8E  500A               	movf	??_atoi^0,w,c
  5458  010A90  260C               	addwf	(??_atoi+2)^0,f,c
  5459  010A92  500B               	movf	(??_atoi+1)^0,w,c
  5460  010A94  220D               	addwfc	(??_atoi+3)^0,f,c
  5461  010A96  500D               	movf	(??_atoi+3)^0,w,c
  5462  010A98  E109               	bnz	u2470
  5463  010A9A  0E05               	movlw	5
  5464  010A9C  5C0C               	subwf	(??_atoi+2)^0,w,c
  5465  010A9E  A0D8               	btfss	status,0,c
  5466  010AA0  EF54  F085         	goto	u2471
  5467  010AA4  EF56  F085         	goto	u2470
  5468  010AA8                     u2471:
  5469  010AA8  EF58  F085         	goto	l3362
  5470  010AAC                     u2470:
  5471  010AAC  0E00               	movlw	0
  5472  010AAE  6E14               	movwf	_atoi$1729^0,c
  5473  010AB0                     l3362:
  5474  010AB0  C014  F010         	movff	_atoi$1729,_atoi$1728
  5475  010AB4  6A11               	clrf	(_atoi$1728+1)^0,c
  5476  010AB6  5010               	movf	_atoi$1728^0,w,c
  5477  010AB8  1011               	iorwf	(_atoi$1728+1)^0,w,c
  5478  010ABA  A4D8               	btfss	status,2,c
  5479  010ABC  EF62  F085         	goto	u2481
  5480  010AC0  EF64  F085         	goto	u2480
  5481  010AC4                     u2481:
  5482  010AC4  EF25  F085         	goto	l3352
  5483  010AC8                     u2480:
  5484  010AC8  EF6E  F085         	goto	l3372
  5485  010ACC                     l3368:
  5486  010ACC  0E00               	movlw	0
  5487  010ACE  6E0F               	movwf	(atoi@neg+1)^0,c
  5488  010AD0  0E01               	movlw	1
  5489  010AD2  6E0E               	movwf	atoi@neg^0,c
  5490  010AD4                     l3370:
  5491  010AD4  4A08               	infsnz	atoi@s^0,f,c
  5492  010AD6  2A09               	incf	(atoi@s+1)^0,f,c
  5493  010AD8  EFA7  F085         	goto	l3378
  5494  010ADC                     l3372:
  5495  010ADC  C008  FFF6         	movff	atoi@s,tblptrl
  5496  010AE0  C009  FFF7         	movff	atoi@s+1,tblptrh
  5497  010AE4                     	if	0	;tblptru may be non-zero
  5498  010AE4                     	endif
  5499  010AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5500  010AE4  0E00               	movlw	low (__mediumconst shr (0+16))
  5501  010AE6  6EF8               	movwf	tblptru,c
  5502  010AE8                     	endif
  5503  010AE8  0008               	tblrd		*
  5504  010AEA  50F5               	movf	tablat,w,c
  5505  010AEC  6E0A               	movwf	??_atoi^0,c
  5506  010AEE  6A0B               	clrf	(??_atoi+1)^0,c
  5507                           
  5508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5509                           ; Switch size 1, requested type "simple"
  5510                           ; Number of cases is 1, Range of values is 0 to 0
  5511                           ; switch strategies available:
  5512                           ; Name         Instructions Cycles
  5513                           ; simple_byte            4     3 (average)
  5514                           ;	Chosen strategy is simple_byte
  5515  010AF0  500B               	movf	(??_atoi+1)^0,w,c
  5516  010AF2  0A00               	xorlw	0	; case 0
  5517  010AF4  B4D8               	btfsc	status,2,c
  5518  010AF6  EF7F  F085         	goto	l4034
  5519  010AFA  EFA7  F085         	goto	l3378
  5520  010AFE                     l4034:
  5521                           
  5522                           ; Switch size 1, requested type "simple"
  5523                           ; Number of cases is 2, Range of values is 43 to 45
  5524                           ; switch strategies available:
  5525                           ; Name         Instructions Cycles
  5526                           ; simple_byte            7     4 (average)
  5527                           ;	Chosen strategy is simple_byte
  5528  010AFE  500A               	movf	??_atoi^0,w,c
  5529  010B00  0A2B               	xorlw	43	; case 43
  5530  010B02  B4D8               	btfsc	status,2,c
  5531  010B04  EF6A  F085         	goto	l3370
  5532  010B08  0A06               	xorlw	6	; case 45
  5533  010B0A  B4D8               	btfsc	status,2,c
  5534  010B0C  EF66  F085         	goto	l3368
  5535  010B10  EFA7  F085         	goto	l3378
  5536  010B14                     l3374:
  5537  010B14  C015  F001         	movff	atoi@n,___wmul@multiplier
  5538  010B18  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5539  010B1C  0E00               	movlw	0
  5540  010B1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5541  010B20  0E0A               	movlw	10
  5542  010B22  6E03               	movwf	___wmul@multiplicand^0,c
  5543  010B24  ECE4  F08B         	call	___wmul	;wreg free
  5544  010B28  C008  FFF6         	movff	atoi@s,tblptrl
  5545  010B2C  C009  FFF7         	movff	atoi@s+1,tblptrh
  5546  010B30                     	if	0	;tblptru may be non-zero
  5547  010B30                     	endif
  5548  010B30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5549  010B30  0E00               	movlw	low (__mediumconst shr (0+16))
  5550  010B32  6EF8               	movwf	tblptru,c
  5551  010B34                     	endif
  5552  010B34  0008               	tblrd		*
  5553  010B36  50F5               	movf	tablat,w,c
  5554  010B38  5E01               	subwf	?___wmul^0,f,c
  5555  010B3A  0E00               	movlw	0
  5556  010B3C  5A02               	subwfb	(?___wmul+1)^0,f,c
  5557  010B3E  0E30               	movlw	48
  5558  010B40  2401               	addwf	?___wmul^0,w,c
  5559  010B42  6E15               	movwf	atoi@n^0,c
  5560  010B44  0E00               	movlw	0
  5561  010B46  2002               	addwfc	(?___wmul+1)^0,w,c
  5562  010B48  6E16               	movwf	(atoi@n+1)^0,c
  5563  010B4A  EF6A  F085         	goto	l3370
  5564  010B4E                     l3378:
  5565  010B4E  0ED0               	movlw	208
  5566  010B50  6E0A               	movwf	??_atoi^0,c
  5567  010B52  0EFF               	movlw	255
  5568  010B54  6E0B               	movwf	(??_atoi+1)^0,c
  5569  010B56  C008  FFF6         	movff	atoi@s,tblptrl
  5570  010B5A  C009  FFF7         	movff	atoi@s+1,tblptrh
  5571  010B5E                     	if	0	;tblptru may be non-zero
  5572  010B5E                     	endif
  5573  010B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5574  010B5E  0E00               	movlw	low (__mediumconst shr (0+16))
  5575  010B60  6EF8               	movwf	tblptru,c
  5576  010B62                     	endif
  5577  010B62  0008               	tblrd		*
  5578  010B64  50F5               	movf	tablat,w,c
  5579  010B66  6E0C               	movwf	(??_atoi+2)^0,c
  5580  010B68  6A0D               	clrf	(??_atoi+3)^0,c
  5581  010B6A  500A               	movf	??_atoi^0,w,c
  5582  010B6C  260C               	addwf	(??_atoi+2)^0,f,c
  5583  010B6E  500B               	movf	(??_atoi+1)^0,w,c
  5584  010B70  220D               	addwfc	(??_atoi+3)^0,f,c
  5585  010B72  500D               	movf	(??_atoi+3)^0,w,c
  5586  010B74  E10A               	bnz	u2490
  5587  010B76  0E0A               	movlw	10
  5588  010B78  5C0C               	subwf	(??_atoi+2)^0,w,c
  5589  010B7A  A0D8               	btfss	status,0,c
  5590  010B7C  EFC2  F085         	goto	u2491
  5591  010B80  EFC5  F085         	goto	u2490
  5592  010B84                     u2491:
  5593  010B84  0E01               	movlw	1
  5594  010B86  EFC6  F085         	goto	u2500
  5595  010B8A                     u2490:
  5596  010B8A  0E00               	movlw	0
  5597  010B8C                     u2500:
  5598  010B8C  6E12               	movwf	_atoi$1730^0,c
  5599  010B8E  6A13               	clrf	(_atoi$1730+1)^0,c
  5600  010B90  5012               	movf	_atoi$1730^0,w,c
  5601  010B92  1013               	iorwf	(_atoi$1730+1)^0,w,c
  5602  010B94  A4D8               	btfss	status,2,c
  5603  010B96  EFCF  F085         	goto	u2511
  5604  010B9A  EFD1  F085         	goto	u2510
  5605  010B9E                     u2511:
  5606  010B9E  EF8A  F085         	goto	l3374
  5607  010BA2                     u2510:
  5608  010BA2  500E               	movf	atoi@neg^0,w,c
  5609  010BA4  100F               	iorwf	(atoi@neg+1)^0,w,c
  5610  010BA6  A4D8               	btfss	status,2,c
  5611  010BA8  EFD8  F085         	goto	u2521
  5612  010BAC  EFDA  F085         	goto	u2520
  5613  010BB0                     u2521:
  5614  010BB0  EFE8  F085         	goto	l1182
  5615  010BB4                     u2520:
  5616  010BB4  C015  F00A         	movff	atoi@n,??_atoi
  5617  010BB8  C016  F00B         	movff	atoi@n+1,??_atoi+1
  5618  010BBC  1E0A               	comf	??_atoi^0,f,c
  5619  010BBE  1E0B               	comf	(??_atoi+1)^0,f,c
  5620  010BC0  4A0A               	infsnz	??_atoi^0,f,c
  5621  010BC2  2A0B               	incf	(??_atoi+1)^0,f,c
  5622  010BC4  C00A  F008         	movff	??_atoi,?_atoi
  5623  010BC8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  5624  010BCC  EFEC  F085         	goto	l1185
  5625  010BD0                     l1182:
  5626  010BD0  C015  F008         	movff	atoi@n,?_atoi
  5627  010BD4  C016  F009         	movff	atoi@n+1,?_atoi+1
  5628  010BD8                     l1185:
  5629  010BD8  0012               	return		;funcret
  5630  010BDA                     __end_of_atoi:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function _isspace *****************
  5634 ;; Defined at:
  5635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  c               2    0[COMRAM] int 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2    0[COMRAM] int 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;Total ram usage:        7 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_atoi
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text28
  5663  0114E2                     __ptext28:
  5664                           	callstack 0
  5665  0114E2                     _isspace:
  5666                           	callstack 24
  5667  0114E2  0E01               	movlw	1
  5668  0114E4  6E07               	movwf	_isspace$1755^0,c
  5669  0114E6  0E20               	movlw	32
  5670  0114E8  1801               	xorwf	isspace@c^0,w,c
  5671  0114EA  1002               	iorwf	(isspace@c+1)^0,w,c
  5672  0114EC  B4D8               	btfsc	status,2,c
  5673  0114EE  EF7B  F08A         	goto	u2121
  5674  0114F2  EF7D  F08A         	goto	u2120
  5675  0114F6                     u2121:
  5676  0114F6  EF96  F08A         	goto	l3218
  5677  0114FA                     u2120:
  5678  0114FA  0EF7               	movlw	247
  5679  0114FC  6E03               	movwf	??_isspace^0,c
  5680  0114FE  0EFF               	movlw	255
  5681  011500  6E04               	movwf	(??_isspace+1)^0,c
  5682  011502  C001  F005         	movff	isspace@c,??_isspace+2
  5683  011506  C002  F006         	movff	isspace@c+1,??_isspace+3
  5684  01150A  5003               	movf	??_isspace^0,w,c
  5685  01150C  2605               	addwf	(??_isspace+2)^0,f,c
  5686  01150E  5004               	movf	(??_isspace+1)^0,w,c
  5687  011510  2206               	addwfc	(??_isspace+3)^0,f,c
  5688  011512  5006               	movf	(??_isspace+3)^0,w,c
  5689  011514  E109               	bnz	u2130
  5690  011516  0E05               	movlw	5
  5691  011518  5C05               	subwf	(??_isspace+2)^0,w,c
  5692  01151A  A0D8               	btfss	status,0,c
  5693  01151C  EF92  F08A         	goto	u2131
  5694  011520  EF94  F08A         	goto	u2130
  5695  011524                     u2131:
  5696  011524  EF96  F08A         	goto	l3218
  5697  011528                     u2130:
  5698  011528  0E00               	movlw	0
  5699  01152A  6E07               	movwf	_isspace$1755^0,c
  5700  01152C                     l3218:
  5701  01152C  C007  F001         	movff	_isspace$1755,?_isspace
  5702  011530  6A02               	clrf	(?_isspace+1)^0,c
  5703  011532  0012               	return		;funcret
  5704  011534                     __end_of_isspace:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function _isdigit *****************
  5708 ;; Defined at:
  5709 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  c               2    0[COMRAM] int 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2    0[COMRAM] int 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;Total ram usage:        6 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_vfpfcnvrt
  5733 ;;		_atoi
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text29
  5738  0116A6                     __ptext29:
  5739                           	callstack 0
  5740  0116A6                     _isdigit:
  5741                           	callstack 25
  5742  0116A6  0ED0               	movlw	208
  5743  0116A8  6E03               	movwf	??_isdigit^0,c
  5744  0116AA  0EFF               	movlw	255
  5745  0116AC  6E04               	movwf	(??_isdigit+1)^0,c
  5746  0116AE  C001  F005         	movff	isdigit@c,??_isdigit+2
  5747  0116B2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  5748  0116B6  5003               	movf	??_isdigit^0,w,c
  5749  0116B8  2605               	addwf	(??_isdigit+2)^0,f,c
  5750  0116BA  5004               	movf	(??_isdigit+1)^0,w,c
  5751  0116BC  2206               	addwfc	(??_isdigit+3)^0,f,c
  5752  0116BE  5006               	movf	(??_isdigit+3)^0,w,c
  5753  0116C0  E10A               	bnz	u2100
  5754  0116C2  0E0A               	movlw	10
  5755  0116C4  5C05               	subwf	(??_isdigit+2)^0,w,c
  5756  0116C6  A0D8               	btfss	status,0,c
  5757  0116C8  EF68  F08B         	goto	u2101
  5758  0116CC  EF6B  F08B         	goto	u2100
  5759  0116D0                     u2101:
  5760  0116D0  0E01               	movlw	1
  5761  0116D2  EF6C  F08B         	goto	u2110
  5762  0116D6                     u2100:
  5763  0116D6  0E00               	movlw	0
  5764  0116D8                     u2110:
  5765  0116D8  6E01               	movwf	?_isdigit^0,c
  5766  0116DA  6A02               	clrf	(?_isdigit+1)^0,c
  5767  0116DC  0012               	return		;funcret
  5768  0116DE                     __end_of_isdigit:
  5769                           	callstack 0
  5770                           
  5771 ;; *************** function ___wmul *****************
  5772 ;; Defined at:
  5773 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  multiplier      2    0[COMRAM] unsigned int 
  5776 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  product         2    4[COMRAM] unsigned int 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  2    0[COMRAM] unsigned int 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0, prodl, prodh
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;Total ram usage:        6 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_MAX17345_dump
  5798 ;;		_atoi
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text30
  5803  0117C8                     __ptext30:
  5804                           	callstack 0
  5805  0117C8                     ___wmul:
  5806                           	callstack 24
  5807  0117C8  5001               	movf	___wmul@multiplier^0,w,c
  5808  0117CA  0203               	mulwf	___wmul@multiplicand^0,c
  5809  0117CC  CFF3 F005          	movff	prodl,___wmul@product
  5810  0117D0  CFF4 F006          	movff	prodh,___wmul@product+1
  5811  0117D4  5001               	movf	___wmul@multiplier^0,w,c
  5812  0117D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5813  0117D8  50F3               	movf	243,w,c
  5814  0117DA  2606               	addwf	(___wmul@product+1)^0,f,c
  5815  0117DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5816  0117DE  0203               	mulwf	___wmul@multiplicand^0,c
  5817  0117E0  50F3               	movf	243,w,c
  5818  0117E2  2606               	addwf	(___wmul@product+1)^0,f,c
  5819  0117E4  C005  F001         	movff	___wmul@product,?___wmul
  5820  0117E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5821  0117EC  0012               	return		;funcret
  5822  0117EE                     __end_of___wmul:
  5823                           	callstack 0
  5824                           
  5825 ;; *************** function _MAX17345_read_word *****************
  5826 ;; Defined at:
  5827 ;;		line 57 in file "MAX17435.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  command         2    2[COMRAM] unsigned short 
  5830 ;;  data            2    4[COMRAM] PTR unsigned short 
  5831 ;;		 -> MAX17345_dump@data(2), 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  r               1   12[COMRAM] unsigned char 
  5834 ;;  dataL           1   11[COMRAM] unsigned char 
  5835 ;;  dataH           1   10[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      unsigned char 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;Total ram usage:       11 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 1
  5852 ;; This function calls:
  5853 ;;		_i2c_ack
  5854 ;;		_i2c_nack
  5855 ;;		_i2c_read_byte
  5856 ;;		_i2c_restart
  5857 ;;		_i2c_start
  5858 ;;		_i2c_stop
  5859 ;;		_i2c_write_byte
  5860 ;; This function is called by:
  5861 ;;		_MAX17345_dump
  5862 ;;		_MAX17345_get_Dev_ID
  5863 ;;		_MAX17345_get_IINPVoltage
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text31
  5868  011026                     __ptext31:
  5869                           	callstack 0
  5870  011026                     _MAX17345_read_word:
  5871                           	callstack 27
  5872  011026                     
  5873                           ;MAX17435.c: 60:  unsigned char dataH = 0;
  5874  011026  0E00               	movlw	0
  5875  011028  6E0B               	movwf	MAX17345_read_word@dataH^0,c
  5876                           
  5877                           ;MAX17435.c: 61:  unsigned char dataL = 0;
  5878  01102A  0E00               	movlw	0
  5879  01102C  6E0C               	movwf	MAX17345_read_word@dataL^0,c
  5880  01102E                     
  5881                           ;MAX17435.c: 63:  i2c_start();
  5882  01102E  EC58  F08C         	call	_i2c_start	;wreg free
  5883                           
  5884                           ;MAX17435.c: 64:  if (r = i2c_write_byte(0x12))return r;
  5885  011032  0E12               	movlw	18
  5886  011034  ECBD  F08B         	call	_i2c_write_byte
  5887  011038  6E0D               	movwf	MAX17345_read_word@r^0,c
  5888  01103A  500D               	movf	MAX17345_read_word@r^0,w,c
  5889  01103C  B4D8               	btfsc	status,2,c
  5890  01103E  EF23  F088         	goto	u2751
  5891  011042  EF25  F088         	goto	u2750
  5892  011046                     u2751:
  5893  011046  EF28  F088         	goto	l3546
  5894  01104A                     u2750:
  5895  01104A                     l3542:
  5896  01104A  500D               	movf	MAX17345_read_word@r^0,w,c
  5897  01104C  EF81  F088         	goto	l190
  5898  011050                     l3546:
  5899                           
  5900                           ;MAX17435.c: 65:  if (r = i2c_write_byte(command))return r;
  5901  011050  5003               	movf	MAX17345_read_word@command^0,w,c
  5902  011052  ECBD  F08B         	call	_i2c_write_byte
  5903  011056  6E0D               	movwf	MAX17345_read_word@r^0,c
  5904  011058  500D               	movf	MAX17345_read_word@r^0,w,c
  5905  01105A  B4D8               	btfsc	status,2,c
  5906  01105C  EF32  F088         	goto	u2761
  5907  011060  EF34  F088         	goto	u2760
  5908  011064                     u2761:
  5909  011064  EF36  F088         	goto	l3552
  5910  011068                     u2760:
  5911  011068  EF25  F088         	goto	l3542
  5912  01106C                     l3552:
  5913                           
  5914                           ;MAX17435.c: 66:  i2c_restart();
  5915  01106C  EC61  F08C         	call	_i2c_restart	;wreg free
  5916  011070                     
  5917                           ;MAX17435.c: 67:  if (r = i2c_write_byte((0x12 | 1)))return r;
  5918  011070  0E13               	movlw	19
  5919  011072  ECBD  F08B         	call	_i2c_write_byte
  5920  011076  6E0D               	movwf	MAX17345_read_word@r^0,c
  5921  011078  500D               	movf	MAX17345_read_word@r^0,w,c
  5922  01107A  B4D8               	btfsc	status,2,c
  5923  01107C  EF42  F088         	goto	u2771
  5924  011080  EF44  F088         	goto	u2770
  5925  011084                     u2771:
  5926  011084  EF46  F088         	goto	l3560
  5927  011088                     u2770:
  5928  011088  EF25  F088         	goto	l3542
  5929  01108C                     l3560:
  5930                           
  5931                           ;MAX17435.c: 68:  if (r = i2c_read_byte(&dataL))return r;
  5932  01108C  0E0C               	movlw	low MAX17345_read_word@dataL
  5933  01108E  6E01               	movwf	i2c_read_byte@data^0,c
  5934  011090  0E00               	movlw	high MAX17345_read_word@dataL
  5935  011092  6E02               	movwf	(i2c_read_byte@data+1)^0,c
  5936  011094  ECF7  F08B         	call	_i2c_read_byte	;wreg free
  5937  011098  6E0D               	movwf	MAX17345_read_word@r^0,c
  5938  01109A  500D               	movf	MAX17345_read_word@r^0,w,c
  5939  01109C  B4D8               	btfsc	status,2,c
  5940  01109E  EF53  F088         	goto	u2781
  5941  0110A2  EF55  F088         	goto	u2780
  5942  0110A6                     u2781:
  5943  0110A6  EF57  F088         	goto	l3566
  5944  0110AA                     u2780:
  5945  0110AA  EF25  F088         	goto	l3542
  5946  0110AE                     l3566:
  5947                           
  5948                           ;MAX17435.c: 69:  i2c_ack();
  5949  0110AE  EC45  F08C         	call	_i2c_ack	;wreg free
  5950  0110B2                     
  5951                           ;MAX17435.c: 70:  if (r = i2c_read_byte(&dataH))return r;
  5952  0110B2  0E0B               	movlw	low MAX17345_read_word@dataH
  5953  0110B4  6E01               	movwf	i2c_read_byte@data^0,c
  5954  0110B6  0E00               	movlw	high MAX17345_read_word@dataH
  5955  0110B8  6E02               	movwf	(i2c_read_byte@data+1)^0,c
  5956  0110BA  ECF7  F08B         	call	_i2c_read_byte	;wreg free
  5957  0110BE  6E0D               	movwf	MAX17345_read_word@r^0,c
  5958  0110C0  500D               	movf	MAX17345_read_word@r^0,w,c
  5959  0110C2  B4D8               	btfsc	status,2,c
  5960  0110C4  EF66  F088         	goto	u2791
  5961  0110C8  EF68  F088         	goto	u2790
  5962  0110CC                     u2791:
  5963  0110CC  EF6A  F088         	goto	l3574
  5964  0110D0                     u2790:
  5965  0110D0  EF25  F088         	goto	l3542
  5966  0110D4                     l3574:
  5967                           
  5968                           ;MAX17435.c: 71:  i2c_nack();
  5969  0110D4  EC3B  F08C         	call	_i2c_nack	;wreg free
  5970                           
  5971                           ;MAX17435.c: 72:  i2c_stop();
  5972  0110D8  EC4F  F08C         	call	_i2c_stop	;wreg free
  5973  0110DC                     
  5974                           ;MAX17435.c: 73:  *data = dataL | ((dataH) << 8);
  5975  0110DC  500B               	movf	MAX17345_read_word@dataH^0,w,c
  5976  0110DE  6E08               	movwf	(??_MAX17345_read_word+1)^0,c
  5977  0110E0  6A07               	clrf	??_MAX17345_read_word^0,c
  5978  0110E2  500C               	movf	MAX17345_read_word@dataL^0,w,c
  5979  0110E4  6E09               	movwf	(??_MAX17345_read_word+2)^0,c
  5980  0110E6  6A0A               	clrf	(??_MAX17345_read_word+3)^0,c
  5981  0110E8  5007               	movf	??_MAX17345_read_word^0,w,c
  5982  0110EA  1209               	iorwf	(??_MAX17345_read_word+2)^0,f,c
  5983  0110EC  5008               	movf	(??_MAX17345_read_word+1)^0,w,c
  5984  0110EE  120A               	iorwf	(??_MAX17345_read_word+3)^0,f,c
  5985  0110F0  C005  FFD9         	movff	MAX17345_read_word@data,fsr2l
  5986  0110F4  C006  FFDA         	movff	MAX17345_read_word@data+1,fsr2h
  5987  0110F8  C009  FFDE         	movff	??_MAX17345_read_word+2,postinc2
  5988  0110FC  C00A  FFDD         	movff	??_MAX17345_read_word+3,postdec2
  5989  011100                     
  5990                           ;MAX17435.c: 74:  return 0;
  5991  011100  0E00               	movlw	0
  5992  011102                     l190:
  5993  011102  0012               	return		;funcret
  5994  011104                     __end_of_MAX17345_read_word:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _i2c_write_byte *****************
  5998 ;; Defined at:
  5999 ;;		line 50 in file "MAX17435.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  data            1    wreg     unsigned char 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  data            1    0[COMRAM] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      unsigned char 
  6006 ;; Registers used:
  6007 ;;		wreg
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;Total ram usage:        1 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_MAX17345_read_word
  6023 ;;		_MAX17345_write_word
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text32
  6028  01177A                     __ptext32:
  6029                           	callstack 0
  6030  01177A                     _i2c_write_byte:
  6031                           	callstack 27
  6032                           
  6033                           ;incstack = 0
  6034                           ;i2c_write_byte@data stored from wreg
  6035  01177A  6E01               	movwf	i2c_write_byte@data^0,c
  6036  01177C                     
  6037                           ;MAX17435.c: 50: unsigned char i2c_write_byte(unsigned char data);MAX17435.c: 51: {;MAX1
      +                          7435.c: 52:  SSP1BUF = data;
  6038  01177C  C001  FF91         	movff	i2c_write_byte@data,3985	;volatile
  6039  011780                     l183:
  6040  011780  B494               	btfsc	148,2,c	;volatile
  6041  011782  EFC5  F08B         	goto	u2721
  6042  011786  EFC7  F08B         	goto	u2720
  6043  01178A                     u2721:
  6044  01178A  EFC0  F08B         	goto	l183
  6045  01178E                     u2720:
  6046  01178E                     
  6047                           ;MAX17435.c: 54:  return SSP1CON2bits.ACKSTAT;
  6048  01178E  BC96               	btfsc	150,6,c	;volatile
  6049  011790  EFCC  F08B         	goto	u2731
  6050  011794  EFCF  F08B         	goto	u2730
  6051  011798                     u2731:
  6052  011798  0E01               	movlw	1
  6053  01179A  EFD0  F08B         	goto	u2736
  6054  01179E                     u2730:
  6055  01179E  0E00               	movlw	0
  6056  0117A0                     u2736:
  6057  0117A0  0012               	return		;funcret
  6058  0117A2                     __end_of_i2c_write_byte:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function _i2c_stop *****************
  6062 ;; Defined at:
  6063 ;;		line 22 in file "MAX17435.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		None
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_MAX17345_read_word
  6087 ;;		_MAX17345_write_word
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text33
  6092  01189E                     __ptext33:
  6093                           	callstack 0
  6094  01189E                     _i2c_stop:
  6095                           	callstack 27
  6096  01189E                     
  6097                           ;MAX17435.c: 24:  SSP1CON2bits.PEN = 1;
  6098  01189E  8496               	bsf	150,2,c	;volatile
  6099  0118A0                     l159:
  6100  0118A0  B496               	btfsc	150,2,c	;volatile
  6101  0118A2  EF55  F08C         	goto	u2681
  6102  0118A6  EF57  F08C         	goto	u2680
  6103  0118AA                     u2681:
  6104  0118AA  EF50  F08C         	goto	l159
  6105  0118AE                     u2680:
  6106  0118AE  0012               	return		;funcret
  6107  0118B0                     __end_of_i2c_stop:
  6108                           	callstack 0
  6109                           
  6110 ;; *************** function _i2c_start *****************
  6111 ;; Defined at:
  6112 ;;		line 10 in file "MAX17435.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;		None
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		None
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;Total ram usage:        0 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_MAX17345_read_word
  6136 ;;		_MAX17345_write_word
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text34
  6141  0118B0                     __ptext34:
  6142                           	callstack 0
  6143  0118B0                     _i2c_start:
  6144                           	callstack 27
  6145  0118B0                     
  6146                           ;MAX17435.c: 12:  SSP1CON2bits.SEN = 1;
  6147  0118B0  8096               	bsf	150,0,c	;volatile
  6148  0118B2                     l147:
  6149  0118B2  B096               	btfsc	150,0,c	;volatile
  6150  0118B4  EF5E  F08C         	goto	u2661
  6151  0118B8  EF60  F08C         	goto	u2660
  6152  0118BC                     u2661:
  6153  0118BC  EF59  F08C         	goto	l147
  6154  0118C0                     u2660:
  6155  0118C0  0012               	return		;funcret
  6156  0118C2                     __end_of_i2c_start:
  6157                           	callstack 0
  6158                           
  6159 ;; *************** function _i2c_restart *****************
  6160 ;; Defined at:
  6161 ;;		line 16 in file "MAX17435.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;		None
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		None
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;Total ram usage:        0 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_MAX17345_read_word
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text35
  6189  0118C2                     __ptext35:
  6190                           	callstack 0
  6191  0118C2                     _i2c_restart:
  6192                           	callstack 27
  6193  0118C2                     
  6194                           ;MAX17435.c: 18:  SSP1CON2bits.RSEN = 1;
  6195  0118C2  8296               	bsf	150,1,c	;volatile
  6196  0118C4                     l153:
  6197  0118C4  B296               	btfsc	150,1,c	;volatile
  6198  0118C6  EF67  F08C         	goto	u2671
  6199  0118CA  EF69  F08C         	goto	u2670
  6200  0118CE                     u2671:
  6201  0118CE  EF62  F08C         	goto	l153
  6202  0118D2                     u2670:
  6203  0118D2  0012               	return		;funcret
  6204  0118D4                     __end_of_i2c_restart:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function _i2c_read_byte *****************
  6208 ;; Defined at:
  6209 ;;		line 42 in file "MAX17435.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  data            2    0[COMRAM] PTR unsigned char 
  6212 ;;		 -> MAX17345_read_word@dataL(1), MAX17345_read_word@dataH(1), 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      unsigned char 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr2l, fsr2h
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;Total ram usage:        2 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_MAX17345_read_word
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text36
  6238  0117EE                     __ptext36:
  6239                           	callstack 0
  6240  0117EE                     _i2c_read_byte:
  6241                           	callstack 27
  6242  0117EE                     
  6243                           ;MAX17435.c: 42: unsigned char i2c_read_byte(unsigned char *data);MAX17435.c: 43: {;MAX1
      +                          7435.c: 44:  SSP1CON2bits.RCEN = 1;
  6244  0117EE  8696               	bsf	150,3,c	;volatile
  6245  0117F0                     l177:
  6246  0117F0  B696               	btfsc	150,3,c	;volatile
  6247  0117F2  EFFD  F08B         	goto	u2711
  6248  0117F6  EFFF  F08B         	goto	u2710
  6249  0117FA                     u2711:
  6250  0117FA  EFF8  F08B         	goto	l177
  6251  0117FE                     u2710:
  6252  0117FE                     
  6253                           ;MAX17435.c: 46:  *data = SSP1BUF;
  6254  0117FE  C001  FFD9         	movff	i2c_read_byte@data,fsr2l
  6255  011802  C002  FFDA         	movff	i2c_read_byte@data+1,fsr2h
  6256  011806  CF91 FFDF          	movff	3985,indf2	;volatile
  6257  01180A                     
  6258                           ;MAX17435.c: 47:  return 0;
  6259  01180A  0E00               	movlw	0
  6260  01180C  0012               	return		;funcret
  6261  01180E                     __end_of_i2c_read_byte:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function _i2c_nack *****************
  6265 ;; Defined at:
  6266 ;;		line 35 in file "MAX17435.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		None
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_MAX17345_read_word
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text37
  6294  011876                     __ptext37:
  6295                           	callstack 0
  6296  011876                     _i2c_nack:
  6297                           	callstack 27
  6298  011876                     
  6299                           ;MAX17435.c: 37:  SSP1CON2bits.ACKDT = 1;
  6300  011876  8A96               	bsf	150,5,c	;volatile
  6301                           
  6302                           ;MAX17435.c: 38:  SSP1CON2bits.ACKEN = 1;
  6303  011878  8896               	bsf	150,4,c	;volatile
  6304  01187A                     l171:
  6305  01187A  B896               	btfsc	150,4,c	;volatile
  6306  01187C  EF42  F08C         	goto	u2701
  6307  011880  EF44  F08C         	goto	u2700
  6308  011884                     u2701:
  6309  011884  EF3D  F08C         	goto	l171
  6310  011888                     u2700:
  6311  011888  0012               	return		;funcret
  6312  01188A                     __end_of_i2c_nack:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _i2c_ack *****************
  6316 ;; Defined at:
  6317 ;;		line 28 in file "MAX17435.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		None
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;Total ram usage:        0 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_MAX17345_read_word
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text38
  6345  01188A                     __ptext38:
  6346                           	callstack 0
  6347  01188A                     _i2c_ack:
  6348                           	callstack 27
  6349  01188A                     
  6350                           ;MAX17435.c: 30:  SSP1CON2bits.ACKDT = 0;
  6351  01188A  9A96               	bcf	150,5,c	;volatile
  6352                           
  6353                           ;MAX17435.c: 31:  SSP1CON2bits.ACKEN = 1;
  6354  01188C  8896               	bsf	150,4,c	;volatile
  6355  01188E                     l165:
  6356  01188E  B896               	btfsc	150,4,c	;volatile
  6357  011890  EF4C  F08C         	goto	u2691
  6358  011894  EF4E  F08C         	goto	u2690
  6359  011898                     u2691:
  6360  011898  EF47  F08C         	goto	l165
  6361  01189C                     u2690:
  6362  01189C  0012               	return		;funcret
  6363  01189E                     __end_of_i2c_ack:
  6364                           	callstack 0
  6365                           
  6366                           	psect	rparam
  6367  0000                     
  6368                           	psect	idloc
  6369                           
  6370                           ;Config register IDLOC0 @ 0x200000
  6371                           ;	unspecified, using default values
  6372  200000                     	org	2097152
  6373  200000  0FFF               	dw	4095
  6374                           
  6375                           ;Config register IDLOC1 @ 0x200002
  6376                           ;	unspecified, using default values
  6377  200002                     	org	2097154
  6378  200002  0FFF               	dw	4095
  6379                           
  6380                           ;Config register IDLOC2 @ 0x200004
  6381                           ;	unspecified, using default values
  6382  200004                     	org	2097156
  6383  200004  0FFF               	dw	4095
  6384                           
  6385                           ;Config register IDLOC3 @ 0x200006
  6386                           ;	unspecified, using default values
  6387  200006                     	org	2097158
  6388  200006  0FFF               	dw	4095
  6389                           
  6390                           ;Config register IDLOC4 @ 0x200008
  6391                           ;	unspecified, using default values
  6392  200008                     	org	2097160
  6393  200008  0FFF               	dw	4095
  6394                           
  6395                           ;Config register IDLOC5 @ 0x20000A
  6396                           ;	unspecified, using default values
  6397  20000A                     	org	2097162
  6398  20000A  0FFF               	dw	4095
  6399                           
  6400                           ;Config register IDLOC6 @ 0x20000C
  6401                           ;	unspecified, using default values
  6402  20000C                     	org	2097164
  6403  20000C  0FFF               	dw	4095
  6404                           
  6405                           ;Config register IDLOC7 @ 0x20000E
  6406                           ;	unspecified, using default values
  6407  20000E                     	org	2097166
  6408  20000E  0FFF               	dw	4095
  6409                           
  6410                           	psect	config
  6411                           
  6412                           ;Config register CONFIG1L @ 0x300000
  6413                           ;	External Oscillator mode Selection bits
  6414                           ;	FEXTOSC = OFF, Oscillator not enabled
  6415                           ;	Power-up default value for COSC bits
  6416                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  6417  300000                     	org	3145728
  6418  300000  EC                 	db	236
  6419                           
  6420                           ;Config register CONFIG1H @ 0x300001
  6421                           ;	Clock Out Enable bit
  6422                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  6423                           ;	Clock Switch Enable bit
  6424                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6425                           ;	Fail-Safe Clock Monitor Enable bit
  6426                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6427  300001                     	org	3145729
  6428  300001  DF                 	db	223
  6429                           
  6430                           ;Config register CONFIG2L @ 0x300002
  6431                           ;	Master Clear Enable bit
  6432                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
  6433                           ;	Power-up Timer Enable bit
  6434                           ;	PWRTE = OFF, Power up timer disabled
  6435                           ;	Low-power BOR enable bit
  6436                           ;	LPBOREN = ON, ULPBOR enabled
  6437                           ;	Brown-out Reset Enable bits
  6438                           ;	BOREN = OFF, Brown-out Reset disabled
  6439  300002                     	org	3145730
  6440  300002  1F                 	db	31
  6441                           
  6442                           ;Config register CONFIG2H @ 0x300003
  6443                           ;	Brown Out Reset Voltage selection bits
  6444                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  6445                           ;	ZCD Disable bit
  6446                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  6447                           ;	PPSLOCK bit One-Way Set Enable bit
  6448                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  6449                           ;	Stack Full/Underflow Reset Enable bit
  6450                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6451                           ;	Debugger Enable bit
  6452                           ;	DEBUG = OFF, Background debugger disabled
  6453                           ;	Extended Instruction Set Enable bit
  6454                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  6455  300003                     	org	3145731
  6456  300003  F7                 	db	247
  6457                           
  6458                           ;Config register CONFIG3L @ 0x300004
  6459                           ;	WDT Period Select bits
  6460                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6461                           ;	WDT operating mode
  6462                           ;	WDTE = OFF, WDT Disabled
  6463  300004                     	org	3145732
  6464  300004  9F                 	db	159
  6465                           
  6466                           ;Config register CONFIG3H @ 0x300005
  6467                           ;	WDT Window Select bits
  6468                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6469                           ;	WDT input clock selector
  6470                           ;	WDTCCS = SC, Software Control
  6471  300005                     	org	3145733
  6472  300005  FF                 	db	255
  6473                           
  6474                           ;Config register CONFIG4L @ 0x300006
  6475                           ;	Write Protection Block 0
  6476                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6477                           ;	Write Protection Block 1
  6478                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6479                           ;	Write Protection Block 2
  6480                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6481                           ;	Write Protection Block 3
  6482                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6483                           ;	Write Protection Block 3
  6484                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  6485                           ;	Write Protection Block 3
  6486                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  6487                           ;	Write Protection Block 3
  6488                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  6489                           ;	Write Protection Block 3
  6490                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  6491  300006                     	org	3145734
  6492  300006  FF                 	db	255
  6493                           
  6494                           ;Config register CONFIG4H @ 0x300007
  6495                           ;	Configuration Register Write Protection bit
  6496                           ;	WRTC = ON, Configuration registers (300000-30000Bh) write-protected
  6497                           ;	Boot Block Write Protection bit
  6498                           ;	WRTB = ON, Boot Block (000000-0007FFh) write-protected
  6499                           ;	Data EEPROM Write Protection bit
  6500                           ;	WRTD = OFF, Data EEPROM not write-protected
  6501                           ;	Scanner Enable bit
  6502                           ;	SCANE = OFF, Scanner module is NOT available for use, SCANMD bit is ignored
  6503                           ;	Low Voltage Programming Enable bit
  6504                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  6505  300007                     	org	3145735
  6506  300007  CC                 	db	204
  6507                           
  6508                           ;Config register CONFIG5L @ 0x300008
  6509                           ;	UserNVM Program Memory Code Protection bit
  6510                           ;	CP = OFF, UserNVM code protection disabled
  6511                           ;	DataNVM Memory Code Protection bit
  6512                           ;	CPD = OFF, DataNVM code protection disabled
  6513  300008                     	org	3145736
  6514  300008  FF                 	db	255
  6515                           
  6516                           ;Config register CONFIG5H @ 0x300009
  6517                           ;	unspecified, using default values
  6518  300009                     	org	3145737
  6519  300009  FF                 	db	255
  6520                           
  6521                           ;Config register CONFIG6L @ 0x30000A
  6522                           ;	Table Read Protection Block 0
  6523                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6524                           ;	Table Read Protection Block 1
  6525                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6526                           ;	Table Read Protection Block 2
  6527                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6528                           ;	Table Read Protection Block 3
  6529                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6530                           ;	Table Read Protection Block 4
  6531                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  6532                           ;	Table Read Protection Block 5
  6533                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  6534                           ;	Table Read Protection Block 6
  6535                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  6536                           ;	Table Read Protection Block 7
  6537                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  6538  30000A                     	org	3145738
  6539  30000A  FF                 	db	255
  6540                           
  6541                           ;Config register CONFIG6H @ 0x30000B
  6542                           ;	Boot Block Table Read Protection bit
  6543                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6544  30000B                     	org	3145739
  6545  30000B  FF                 	db	255
  6546                           tosu	equ	0xFFF
  6547                           tosh	equ	0xFFE
  6548                           tosl	equ	0xFFD
  6549                           stkptr	equ	0xFFC
  6550                           pclatu	equ	0xFFB
  6551                           pclath	equ	0xFFA
  6552                           pcl	equ	0xFF9
  6553                           tblptru	equ	0xFF8
  6554                           tblptrh	equ	0xFF7
  6555                           tblptrl	equ	0xFF6
  6556                           tablat	equ	0xFF5
  6557                           prodh	equ	0xFF4
  6558                           prodl	equ	0xFF3
  6559                           indf0	equ	0xFEF
  6560                           postinc0	equ	0xFEE
  6561                           postdec0	equ	0xFED
  6562                           preinc0	equ	0xFEC
  6563                           plusw0	equ	0xFEB
  6564                           fsr0h	equ	0xFEA
  6565                           fsr0l	equ	0xFE9
  6566                           wreg	equ	0xFE8
  6567                           indf1	equ	0xFE7
  6568                           postinc1	equ	0xFE6
  6569                           postdec1	equ	0xFE5
  6570                           preinc1	equ	0xFE4
  6571                           plusw1	equ	0xFE3
  6572                           fsr1h	equ	0xFE2
  6573                           fsr1l	equ	0xFE1
  6574                           bsr	equ	0xFE0
  6575                           indf2	equ	0xFDF
  6576                           postinc2	equ	0xFDE
  6577                           postdec2	equ	0xFDD
  6578                           preinc2	equ	0xFDC
  6579                           plusw2	equ	0xFDB
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8

Data Sizes:
    Strings     747
    Constant    0
    Data        11
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     25      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1592_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[30]), STR_35(CODE[30]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[11]), STR_30(CODE[17]), STR_29(CODE[17]), 
		 -> STR_28(CODE[26]), STR_27(CODE[26]), STR_26(CODE[26]), STR_25(CODE[28]), 
		 -> STR_24(CODE[26]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[14]), STR_1(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[30]), STR_35(CODE[30]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[11]), STR_30(CODE[17]), STR_29(CODE[17]), 
		 -> STR_28(CODE[26]), STR_27(CODE[26]), STR_26(CODE[26]), STR_25(CODE[28]), 
		 -> STR_24(CODE[26]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[14]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[30]), STR_35(CODE[30]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[11]), STR_30(CODE[17]), STR_29(CODE[17]), 
		 -> STR_28(CODE[26]), STR_27(CODE[26]), STR_26(CODE[26]), STR_25(CODE[28]), 
		 -> STR_24(CODE[26]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[14]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[30]), STR_35(CODE[30]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[11]), STR_30(CODE[17]), STR_29(CODE[17]), 
		 -> STR_28(CODE[26]), STR_27(CODE[26]), STR_26(CODE[26]), STR_25(CODE[28]), 
		 -> STR_24(CODE[26]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[26]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[14]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    showText@t	PTR unsigned char  size(2) Largest target is 11
		 -> hello(BANK0[11]), 

    MAX17345_read_word@data	PTR unsigned short  size(2) Largest target is 2
		 -> MAX17345_dump@data(BANK0[2]), 

    i2c_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> MAX17345_read_word@dataL(COMRAM[1]), MAX17345_read_word@dataH(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_MAX17345_init
    _showText->_SendCharUSB
    _MAX17345_set_relearn_voltage->_MAX17345_write_word
    _MAX17345_set_input_current->_MAX17345_write_word
    _MAX17345_set_charge_voltage->_MAX17345_write_word
    _MAX17345_set_charge_current->_MAX17345_write_word
    _MAX17345_write_word->_i2c_write_byte
    _MAX17345_dump->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_SendCharUSB
    _abs->___aomod
    _atoi->_isspace
    _MAX17345_read_word->_i2c_read_byte

Critical Paths under _main in BANK0

    _main->_MAX17345_dump
    _MAX17345_init->_MAX17345_dump
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40256
                      _MAX17345_dump
                      _MAX17345_init
                           _showText
 ---------------------------------------------------------------------------------
 (1) _showText                                             2     0      2     143
                                              1 COMRAM     2     0      2
                        _SendCharUSB
 ---------------------------------------------------------------------------------
 (1) _MAX17345_init                                        3     3      0   21893
                                             94 COMRAM     1     1      0
                      _MAX17345_dump
        _MAX17345_set_charge_current
        _MAX17345_set_charge_voltage
         _MAX17345_set_input_current
       _MAX17345_set_relearn_voltage
 ---------------------------------------------------------------------------------
 (2) _MAX17345_set_relearn_voltage                         3     1      2     911
                                              6 COMRAM     3     1      2
                _MAX17345_write_word
 ---------------------------------------------------------------------------------
 (2) _MAX17345_set_input_current                           3     1      2     911
                                              6 COMRAM     3     1      2
                _MAX17345_write_word
 ---------------------------------------------------------------------------------
 (2) _MAX17345_set_charge_voltage                          3     1      2     911
                                              6 COMRAM     3     1      2
                _MAX17345_write_word
 ---------------------------------------------------------------------------------
 (2) _MAX17345_set_charge_current                          3     1      2     911
                                              6 COMRAM     3     1      2
                _MAX17345_write_word
 ---------------------------------------------------------------------------------
 (3) _MAX17345_write_word                                  5     1      4     789
                                              1 COMRAM     5     1      4
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
 ---------------------------------------------------------------------------------
 (2) _MAX17345_dump                                        4     4      0   18220
                                             21 BANK0      4     4      0
                 _MAX17345_read_word
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   15769
                                             86 COMRAM     8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   12975
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   12597
                                             68 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    4447
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4542
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2893
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      44
                                              1 COMRAM     1     1      0
                        _SendCharUSB
 ---------------------------------------------------------------------------------
 (2) _SendCharUSB                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1488
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     647
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _MAX17345_read_word                                  11     7      4    1514
                                              2 COMRAM    11     7      4
                            _i2c_ack
                           _i2c_nack
                      _i2c_read_byte
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                     _i2c_write_byte
 ---------------------------------------------------------------------------------
 (4) _i2c_write_byte                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_read_byte                                        2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX17345_dump
     _MAX17345_read_word
       _i2c_ack
       _i2c_nack
       _i2c_read_byte
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write_byte
     ___wmul
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _SendCharUSB
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _MAX17345_init
     _MAX17345_dump
     _MAX17345_set_charge_current
       _MAX17345_write_word
         _i2c_start
         _i2c_stop
         _i2c_write_byte
     _MAX17345_set_charge_voltage
       _MAX17345_write_word
     _MAX17345_set_input_current
       _MAX17345_write_word
     _MAX17345_set_relearn_voltage
       _MAX17345_write_word
   _showText
     _SendCharUSB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB       8        0.0%
DATA                 0      0      AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 10 17:48:16 2021

                                         l29 18E8                          ___wmul@multiplicand 0003  
                                        l210 1874                                          l213 185A  
                                        l150 18C0                                          l231 1284  
                                        l216 1840                                          l153 18C4  
                                        l321 158A                                          l162 18AE  
                                        l171 187A                                          l147 18B2  
                                        l323 15B8                                          l227 1024  
                                        l219 1826                                          l180 180C  
                                        l156 18D2                                          l332 17EC  
                                        l165 188E                                          l174 1888  
                                        l190 1102                                          l159 18A0  
                                        l183 1780                                          l319 157A  
                                        l168 189C                                          l177 17F0  
                                        l185 178E                                          l329 1746  
                                        l186 17A0                                          l446 0D60  
                                        l198 141C                                          l459 0EC4  
                                        _RF5 007C75                                          _RF6 007C76  
                                        _RF7 007C77                                          _abs 15BA  
                                        _pad 1104                                          wreg 000FE8  
                    __size_of_i2c_write_byte 0028                                         l1010 17C6  
                                       l1202 1532                                         l1050 118C  
                                       l1106 09D0                                         l1122 00FA  
                                       ?_abs 0013                                         l1052 11C8  
                                       l1060 0524                                         l1108 0A34  
                                       l1151 15F0                                         l1223 131A  
                                       l1231 1576                                         l1047 114A  
                                       l1208 16A4                                         l1137 047A  
                                       l1154 15F8                                         l1058 051C  
                                       l1242 14D8                                         l1146 147A  
                                       l1083 0796                                         l1147 1482  
                                       l3100 0C6C                                         l1092 0832  
                                       l1237 1712                                         l1253 166C  
                                       l1085 079E                                         l1182 0BD0  
                                       l3110 0CD6                                         l3102 0C74  
                                       l3030 157A                                         l1078 075C  
                                       l1247 14E0                                         l3120 0D20  
                                       l3112 0CF6                                         l3104 0C88  
                                       l3032 1598                                         l3040 1286  
                                       l3200 14BA                                         l1185 0BD8  
                                       l1194 16DC                                         l3210 14E2  
                                       l3122 0D40                                         l3114 0CF8  
                                       l3106 0C96                                         l3130 0D74  
                                       l3034 15A6                                         l3050 1308  
                                       l3042 1298                                         l3202 14CC  
                                       l3212 14E6                                         l3116 0D0A  
                                       l3108 0CA8                                         l3140 0DE4  
                                       l3132 0D94                                         l3036 15B4  
                                       l3044 12AA                                         l3060 1556  
                                       l1188 1634                                         l3300 07EC  
                                       l3206 16A6                                         l3214 14FA  
                                       l3118 0D10                                         l3150 0E5C  
                                       l3142 0DEC                                         l3134 0D98  
                                       l3126 0D62                                         l3038 18E2  
                                       l3046 12B4                                         l3054 1534  
                                       l3062 16DE                                         l3230 04F4  
                                       l3222 047C                                         l3302 07F2  
                                       l3216 1528                                         l3152 0E6E  
                                       l3144 0E00                                         l3136 0DA6  
                                       l3128 0D66                                         l3048 12D2  
                                       l3056 1540                                         l3064 16EA  
                                       l3240 054C                                         l3232 04F6  
                                       l3224 049C                                         l3072 1636  
                                       l3320 08C4                                         l3312 0866  
                                       l3304 07FA                                         l4032 00BA  
                                       l3400 004C                                         l3218 152C  
                                       l4034 0AFE                                         l3090 0C10  
                                       l3082 0BDA                                         l3146 0E0E  
                                       l3154 0E74                                         l3138 0DC6  
                                       l3058 1552                                         l3066 16EE  
                                       l3170 1142                                         l3162 1104  
                                       l3250 05EA                                         l3242 0552  
                                       l3234 0510                                         l3226 04C4  
                                       l3314 0878                                         l3322 08D8  
                                       l3306 0816                                         l3330 0952  
                                       l3410 0072                                         l3402 0058  
                                       l3076 17C8                                         l3092 0C1E  
                                       l3084 0BDE                                         l3156 0E84  
                                       l3148 0E3C                                         l3068 1706  
                                       l3180 11B0                                         l3172 1156  
                                       l3164 1114                                         l3260 0692  
                                       l3252 05F0                                         l3244 055A  
                                       l3236 052C                                         l3228 04E4  
                                       l3340 09E0                                         l3332 096E  
                                       l3324 08E8                                         l3308 0826  
                                       l3404 005A                                         l3510 188A  
                                       l3078 17E4                                         l3350 0A36  
                                       l3094 0C3E                                         l3086 0BEC  
                                       l3158 0EA4                                         l3174 116A  
                                       l3166 1128                                         l3270 06F8  
                                       l3262 06AC                                         l3254 05F6  
                                       l3246 0562                                         l3238 053E  
                                       l3342 09E6                                         l3334 098C  
                                       l3326 08EE                                         l3318 08B2  
                                       l3430 0108                                         l3422 0084  
                                       l3414 0078                                         l3406 006C  
                                       l3512 1876                                         l3504 18B0  
                                       l3360 0AAC                                         l3352 0A4A  
                                       l3096 0C42                                         l3088 0C0C  
                                       l3184 15BA                                         l3176 116E  
                                       l3168 1136                                         l3272 06FE  
                                       l3280 0734                                         l3264 06C6  
                                       l3248 0568                                         l3256 065A  
                                       l3192 15FA                                         l3344 09F6  
                                       l3336 09A6                                         l3328 08F4  
                                       l3440 0184                                         l3432 010A  
                                       l3514 17EE                                         l3506 18C2  
                                       l3522 177C                                         l3370 0AD4  
                                       l3362 0AB0                                         l3354 0A4E  
                                       l3098 0C4E                                         l3186 15D4  
                                       l3178 119C                                         l3274 0710  
                                       l3258 0674                                         l3266 06D6  
                                       l3346 0A0C                                         l3338 09C0  
                                       l3290 078A                                         l3442 01A4  
                                       l3450 0210                                         l3434 0132  
                                       l3426 0090                                         l3418 007E  
                                       l3530 145A                                         l3610 141A  
                                       l3602 13FA                                         l3516 17FE  
                                       l3508 189E                                         l3540 102E  
                                       l3372 0ADC                                         l3356 0A52  
                                       l3276 071C                                         l3268 06E8  
                                       l3188 166E                                         l3196 1484  
                                       l3292 07B4                                         l3284 075E  
                                       l3460 02E0                                         l3452 0238  
                                       l3444 01B2                                         l3436 0168  
                                       l3428 00E8                                         l3524 141E  
                                       l3532 17A2                                         l3518 180A  
                                       l3542 104A                                         l3382 0B90  
                                       l3374 0B14                                         l3366 0AB6  
                                       l3358 0A72                                         l3278 0724  
                                       l3294 07BC                                         l3286 076E  
                                       l3470 0394                                         l3462 0308  
                                       l3454 0260                                         l3438 0176  
                                       l3526 1426                                         l3534 17AA  
                                       l3614 185C                                         l3622 1842  
                                       l3630 1828                                         l3702 125E  
                                       l3710 1714                                         l3560 108C  
                                       l3552 106C                                         l3384 0BA2  
                                       l3368 0ACC                                         l3296 07DC  
                                       l3288 0770                                         l3480 041A  
                                       l3464 0330                                         l3456 02A8  
                                       l3448 01FE                                         l3392 0000  
                                       l3528 1434                                         l3608 1416  
                                       l3616 185C                                         l3624 1842  
                                       l3632 1828                                         l3640 180E  
                                       l3712 171C                                         l3554 1070  
                                       l3546 1050                                         l3538 1026  
                                       l3386 0BB4                                         l3378 0B4E  
                                       l3298 07E4                                         l3466 034A  
                                       l3474 03D0                                         l3394 0028  
                                       l3490 0440                                         l3650 0EDC  
                                       l3618 1872                                         l3626 1858  
                                       l3634 183E                                         l3642 1824  
                                       l3706 1280                                         l3714 172A  
                                       l3492 0468                                         l3476 03F8  
                                       l3484 0426                                         l3468 0358  
                                       l3396 0036                                         l3660 0F70  
                                       l3652 0F00                                         l3716 172E  
                                       l3574 10D4                                         l3566 10AE  
                                       l3486 0434                                         l3478 0406  
                                       l3398 0048                                         l3670 1004  
                                       l3662 0F84                                         l3654 0F14  
                                       l3646 0EC6                                         l3590 13C2  
                                       l3582 13A0                                         l3638 180E  
                                       ?_pad 0013                                         l3576 10DC  
                                       l3568 10B2                                         l3664 0FA8  
                                       l3656 0F38                                         l3648 0ED0  
                                       l3584 13A0                                         l3680 11E8  
                                       l3672 11CA                                         l3578 1100  
                                       l3666 0FC4                                         l3658 0F4C  
                                       l3586 13BC                                         l3690 11F8  
                                       l3682 11EC                                         l3674 11DC  
                                       l3668 0FE0                                         l3596 13DE  
                                       l3684 11F0                                         l3676 11E0  
                                       l3940 133A                                         l3932 131C  
                                       l3694 121A                                         l3686 11F2  
                                       l3678 11E4                                         l3950 1352  
                                       l3942 1342                                         l3934 132C  
                                       l3688 11F4                                         l3960 136A  
                                       l3952 1356                                         l3944 1346  
                                       l3936 1334                                         l3698 123C  
                                       l3970 1382                                         l3962 136E  
                                       l3954 1358                                         l3946 134A  
                                       l3938 1338                                         l3980 1394  
                                       l3972 1386                                         l3964 1372  
                                       l3956 135A                                         l3948 134E  
                                       l3974 138C                                         l3966 1376  
                                       l3958 1366                                         l3976 1390  
                                       l3968 137A                                         l3978 1392  
                                       STR_1 FFF8                                         STR_2 FFCA  
                                       STR_3 FFBC                                         STR_4 FFAB  
                                       STR_5 FF9A                                         STR_6 FFEE  
                                       STR_7 FFE3                                         STR_8 FF12  
                                       STR_9 FF34                                         u2000 118C  
                                       u2001 1188                                         u2010 119C  
                                       u2011 1198                                         u2100 16D6  
                                       u2020 15D4                                         u2101 16D0  
                                       u2021 15D0                                         u2110 16D8  
                                       u2030 169E                                         u2031 1698  
                                       u2120 14FA                                         u2200 054C  
                                       u2040 16A0                                         u2121 14F6  
                                       u2201 0548                                         u2130 1528  
                                       u2210 0674                                         u2050 162E  
                                       u2131 1524                                         u2211 0670  
                                       u2051 1628                                         u2220 0692  
                                       u2140 04AC                                         u2060 1630  
                                       u2300 078A                                         u2221 068E  
                                       u2141 04A6                                         u2301 0786  
                                       u2230 06AC                                         u2150 04AE  
                                       u2070 14B4                                         u2310 07B4  
                                       u2231 06A8                                         u2071 14AE  
                                       u2311 07B0                                         u2240 06C6  
                                       u2160 04C4                                         u2080 14B6  
                                       u2400 096E                                         u2320 0816  
                                       u2241 06C2                                         u2161 04C0  
                                       u2401 096A                                         u2321 0812  
                                       u2250 06D6                                         u2170 04F4  
                                       u2090 14CC                                         u2410 098C  
                                       u2330 0860                                         u2251 06D2  
                                       u2171 04F0                                         u2091 14C8  
                                       u2411 0988                                         u2331 085A  
                                       u2500 0B8C                                         u2260 06E8  
                                       u2180 0510                                         u2420 09A6  
                                       u2340 0862                                         u2261 06E4  
                                       u2181 050C                                         u2421 09A2  
                                       u2510 0BA2                                         u2270 06F8  
                                       u2190 053E                                         u2430 09C0  
                                       u2350 0878                                         u2511 0B9E  
                                       u2271 06F4                                         u2191 053A  
                                       u2431 09BC                                         u2351 0874  
                                       u2520 0BB4                                         u1800 1308  
                                       u2280 0710                                         u2440 09D0  
                                       u2360 08AC                                         u2600 0210  
                                       u2521 0BB0                                         u1801 1304  
                                       u2281 070C                                         u2441 09CC  
                                       u2361 08A6                                         u2601 020C  
                                       u1730 158A                                         u1810 1576  
                                       u2450 09E0                                         u2370 08AE  
                                       u2290 076E                                         u2610 0238  
                                       u2530 0028                                         _T2PR 000FBC  
                                       u1731 1586                                         u1811 1572  
                                       u2451 09DC                                         u2291 076A  
                                       u2611 0234                                         u2531 0024  
                                       u2700 1888                                         u2460 0A72  
                                       u1900 0CD6                                         u1740 1598  
                                       u1820 1706                                         u2380 08C4  
                                       u2620 0260                                         u2540 00FA  
                                       u2701 1884                                         u2461 0A6E  
                                       u1901 0CD2                                         u1741 1594  
                                       u1821 1702                                         u2381 08C0  
                                       u2621 025C                                         u2541 00F6  
                                       u2710 17FE                                         u2470 0AAC  
                                       u1910 0D20                                         u1750 15A6  
                                       u1830 1666                                         u2390 092C  
                                       u2630 0308                                         u2550 0108  
                                       u2711 17FA                                         u2471 0AA8  
                                       u1911 0D1C                                         u1751 15A2  
                                       u1831 1660                                         u2631 0304  
                                       u2551 0104                                         u2720 178E  
                                       u2480 0AC8                                         u1920 0D74  
                                       u1760 15B4                                         u1840 1668  
                                       u2640 0330                                         u2560 0132  
                                       u2800 13BC                                         u2721 178A  
                                       u2481 0AC4                                         u1921 0D70  
                                       u1761 15B0                                         u2641 032C  
                                       u2561 012E                                         u2801 13B8  
                                       u2730 179E                                         u2490 0B8A  
                                       u1850 0BEC                                         u1930 0DA6  
                                       u1770 1298                                         u2650 03F8  
                                       u2570 0176                                         u2810 13DA  
                                       u2731 1798                                         u2491 0B84  
                                       u1851 0BE8                                         u1931 0DA2  
                                       u1771 1294                                         u2395 091A  
                                       u2651 03F4                                         u2571 0172  
                                       u2811 13D6                                         u2660 18C0  
                                       u1860 0C1E                                         u1940 0DE4  
                                       u1780 12AA                                         u2580 01F6  
                                       u2740 147A                                         u2820 13F6  
                                       u2900 1238                                         u2661 18BC  
                                       u1861 0C1A                                         u1941 0DE0  
                                       u1781 12A6                                         u2581 01F0  
                                       u2741 1476                                         u2821 13F2  
                                       u2901 1234                                         u2670 18D2  
                                       u2750 104A                                         u1950 0E0E  
                                       u1790 12D2                                         u2590 01F8  
                                       u2830 1412                                         u2910 125A  
                                       u2671 18CE                                         u2751 1046  
                                       u1871 0C48                                         u1951 0E0A  
                                       u1791 12CE                                         u2831 140E  
                                       u2911 1256                                         u2680 18AE  
                                       u2736 17A0                                         u2760 1068  
                                       u1880 0C6C                                         u1960 0E3C  
                                       u2840 0F00                                         u2920 127C  
                                       u2681 18AA                                         u2761 1064  
                                       u1881 0C68                                         u1961 0E38  
                                       u2841 0EFC                                         u2921 1278  
                                       u2690 189C                                         u2770 1088  
                                       u1890 0C96                                         u1970 0E84  
                                       u2850 0F38                                         u2930 1746  
                                       u2691 1898                                         u2771 1084  
                                       u1891 0C92                                         u1971 0E80  
                                       u2851 0F34                                         u2931 1742  
                                       u2780 10AA                                         u1980 1114  
                                       u2860 0F70                                         u2781 10A6  
                                       u1981 1110                                         u2861 0F6C  
                                       u2790 10D0                                         u1990 1136  
                                       u2870 0FA8                                         u2791 10CC  
                                       u1991 1132                                         u2871 0FA4  
                                       u2880 1004                                         u2881 1000  
                                       u2890 1216                                         u2891 1212  
                                       _WREG 000FE8                                         _WPUC 000EA1  
                                       _WPUE 000EAE         __size_of_MAX17345_set_charge_current 001A  
                                       abs@a 0013                                         _dbuf 0068  
                              _i2c_read_byte 17EE                                         _atoi 0A36  
                                       _main 131C                                         _dtoa 047C  
                                       _prec 0064                                         _nout 0060  
                                       pad@i 001A                                         pad@p 0017  
                                       fsr1h 000FE2                                         fsr2h 000FDA  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       pad@w 001C                                         fsr2l 000FD9  
                                       _xtoa 075E                                         prodh 000FF4  
                                       prodl 000FF3                                         start 0000  
       __size_of_MAX17345_set_charge_voltage 001A                                ??_i2c_restart 0001  
                               ___param_bank 000000                              __end_of_i2c_ack 189E  
                                      ??_abs 0015                                        ??_pad 0019  
                            __end_of___aodiv 0D62                                        ?_atoi 0008  
                                      ?_main 0001                                        ?_dtoa 001E  
                            __end_of___aomod 0EC6                                        STR_10 FF78  
                                      STR_11 FF89                                        STR_12 FF01  
                                      STR_20 FE57                                        STR_13 FF23  
                                      STR_21 FE71                                        STR_30 FF56  
                                      STR_14 FF45                                        STR_22 FE8B  
                                      STR_31 FFD8                                        STR_23 FE23  
                                      STR_15 FD6B                                        STR_32 FED5  
                                      STR_24 FE09                                        STR_16 FD86  
                                      STR_33 FEBF                                        STR_17 FDBB  
                                      STR_25 FD4F                                        STR_34 FEEB  
                                      STR_26 FDD5                                        STR_18 FDA1  
                                      STR_19 FE3D                                        STR_27 FDEF  
                                      STR_35 FD13                                        STR_28 FEA5  
                                      STR_36 FD31                                        STR_29 FF67  
                                      ?_xtoa 001E                                        _T2CON 000FBD  
                                      _LATF0 007BF0                                        _LATD7 007BE7  
                               vfpfcnvrt@fmt 0047                                 vfpfcnvrt@llu 0090  
                                      _flags 0066                                        _hello 00A1  
                                      _fputc 1286                           _MAX17345_dump$2075 009D  
                            __end_of_isalpha 1636                                        _fputs 1534  
                            __end_of_isdigit 16DE                                        atoi@n 0015  
                                      pad@fp 0013                                        atoi@s 0008  
                                      _width 0062                                        _putch 18E0  
                                      dtoa@d 0020                                        dtoa@i 0040  
                                      dtoa@n 0038                                        dtoa@p 0032  
                                      dtoa@s 0036                                        dtoa@w 0034  
                            __end_of_islower 166E                              __end_of_isspace 1534  
                            __end_of_isupper 16A6                                        tablat 000FF5  
                             ?_i2c_read_byte 0001                                        status 000FD8  
                                      xtoa@c 0043                                        xtoa@d 0020  
                                      xtoa@i 0041                                        xtoa@n 0039  
                                      xtoa@p 0035                                        xtoa@w 0037  
                                      xtoa@x 0028                              __end_of_toupper 14E2  
               ??_MAX17345_set_input_current 0009                                ??_SendCharUSB 0001  
                               _toupper$1804 000D                              __initialization 1748  
                               __end_of_atoi 0BDA                                 __end_of_main 13A0  
                               __end_of_dtoa 075E                                 __end_of_xtoa 0A36  
                           __end_of_i2c_nack 188A                           _MAX17345_read_word 1026  
                           __end_of_i2c_stop 18B0                          __end_of_i2c_restart 18D4  
                                     ??_atoi 000A                                       ??_main 0060  
                                     ??_dtoa 0028                                       ??_xtoa 0029  
                              __activetblptr 000003                          ?_MAX17345_read_word 0003  
                         i2c_write_byte@data 0001          __size_of_MAX17345_set_input_current 001A  
                                     ?_fputc 0003                                       ?_fputs 000C  
                                     ?_putch 0001                                       _ANSELF 000EB4  
                                     _RC3PPS 000E65                                       _RC4PPS 000E66  
                                     _RE0PPS 000E72                                       _RE1PPS 000E73  
                                     _RC5STA 000EE0                                       _RG3PPS 000E85  
                             MAX17345_init@r 005F                                       _OSCFRQ 000E49  
                              vfpfcnvrt@done 0098                                       _PWM7DC 000F9F  
               __size_of_MAX17345_write_word 007E                                       _TX5REG 000EDD  
                                     _TX5STA 000EE1                           __size_of_i2c_start 0012  
                      __end_of_MAX17345_dump 1026                        __end_of_MAX17345_init 1286  
                                  ??_i2c_ack 0001                         ??_MAX17345_read_word 0007  
                               _CCPTMRS1bits 000FAE                                 vfprintf@cfmt 0055  
                                  ??___aodiv 0011                                    ??___aomod 0011  
                                     ___wmul 17C8                          __end_of_SendCharUSB 15BA  
                                     clear_0 176E                                       isa$std 000001  
                                     _printf 17A2                                       pad@buf 0015  
                                     dtoa@fp 001E                                       _strlen 16DE  
                                     fputc@c 0003                                       fputs@c 0010  
                                     fputs@i 0011                                       fputs@s 000C  
                                  ??_isalpha 0003                                    ??_isdigit 0003  
                                  ??_islower 0003                                 __mediumconst FD12  
                                  ??_isspace 0003                             __end_of_showText 1748  
                                     tblptrh 000FF7                                    ??_isupper 0003  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                             _i2c_write_byte 177A                             __end_of_vfprintf 1484  
  MAX17345_set_charge_voltage@charge_voltage 0007                              ??_i2c_read_byte 0003  
                                     xtoa@fp 001E                                    ??_toupper 0009  
                       MAX17345_write_word@r 0006                                   __accesstop 0060  
                    __end_of__initialization 1774    MAX17345_set_charge_current@charge_current 0007  
                              ___rparam_used 000001                               __pcstackCOMRAM 0001  
                                _i2c_restart 18C2                                 __pidataBANK0 18D4  
                              __end_of_fputc 131C                                __end_of_fputs 1578  
                              __end_of_putch 18EA                            __end_of_i2c_start 18C2  
                     __end_of_i2c_write_byte 17A2                                      ??_fputc 0007  
                                    ??_fputs 0010                                      ??_putch 0002  
                                 __pbssBANK0 0060                                    ?_i2c_nack 0001  
                                  ?_i2c_stop 0001           __end_of_MAX17345_set_input_current 1842  
                 _MAX17345_set_input_current 1828  MAX17345_set_relearn_voltage@relearn_voltage 0007  
                                _SendCharUSB 1578                                      ?___wmul 0001  
        __end_of_MAX17345_set_charge_current 1876                  _MAX17345_set_charge_current 185C  
                                    ?_printf 0057                                      ?_strlen 0001  
        __end_of_MAX17345_set_charge_voltage 185C                  _MAX17345_set_charge_voltage 1842  
                            ?_i2c_write_byte 0001                                      _SP5BRGL 000EDE  
                                    _OSCCON1 000E43      MAX17345_set_input_current@input_current 0007  
                         __size_of_vfpfcnvrt 047C                                      _TBLPTRU 000FF8  
                                    _PWM7CON 000FA1                                      _SSP1ADD 000F92  
                                    _SSP1BUF 000F91                                   ??_i2c_nack 0001  
                                 ??_i2c_stop 0001                                      _i2c_ack 188A  
                                    __Hparam 0000                                      __Lparam 0000  
                                  ?_showText 0002                                      ___aodiv 0BDA  
                                    ___aomod 0D62                              __size_of___wmul 0026  
                                  ?_vfprintf 004F                                      __pcinit 1748  
                                    __ramtop 0E00                                      __ptext0 131C  
                                    __ptext1 1714                                      __ptext2 11CA  
                                    __ptext3 180E                                      __ptext4 1828  
                                    __ptext5 1842                                      __ptext6 185C  
                                    __ptext7 13A0                                      __ptext8 0EC6  
                                    __ptext9 17A2                          _MAX17345_write_word 13A0  
                            __size_of_printf 0026                              __size_of_strlen 0036  
                               __size_of_abs 0040                                 __size_of_pad 00C6  
                                    _isalpha 15FA                                      _isdigit 16A6  
                                    _islower 1636                                      _isspace 14E2  
                                    _isupper 166E                                      atoi@neg 000E  
                                    _toupper 1484                         end_of_initialization 1774  
                          MAX17345_dump@data 009F                                      fputc@fp 0005  
                       ?_MAX17345_write_word 0002                                      fputs@fp 000E  
                               SendCharUSB@d 0001                            __end_of_vfpfcnvrt 047C  
                                 ??_showText 0004                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc1 000FE6                                      postinc2 000FDE  
                                 ??_vfprintf 0055                                      strlen@a 0003  
                                    strlen@s 0001                                    _PORTCbits 000F8B  
                                  _TRISAbits 000F81                                    _TRISCbits 000F83  
                                  _TRISDbits 000F84                                    _TRISEbits 000F85  
                                  _TRISFbits 000F86                                    _TRISGbits 000F87  
                      ??_MAX17345_write_word 0006                  __size_of_MAX17345_read_word 00DE  
                               ?_i2c_restart 0001                                  vfpfcnvrt@ap 0049  
                                vfpfcnvrt@fp 0045                                  vfpfcnvrt@ll 0088  
                             __end_of___wmul 17EE                               __end_of_printf 17C8  
                             __end_of_strlen 1714                       __size_of_MAX17345_dump 0160  
                     __size_of_MAX17345_init 00BC                          start_initialization 1748  
                                __end_of_abs 15FA                                    _i2c_start 18B0  
                                __end_of_pad 11CA                        __end_of_i2c_read_byte 180E  
                ?_MAX17345_set_input_current 0007                            __size_of_i2c_nack 0014  
                          __size_of_i2c_stop 0012                                 ?_SendCharUSB 0001  
                                vfprintf@fmt 0051                                     ??___wmul 0005  
                                __pdataBANK0 00A1                             ??_i2c_write_byte 0001  
                                   ??_printf 005D                                     ??_strlen 0003  
                              __pcstackBANK0 0088                             ___aodiv@dividend 0001  
                                 ?_i2c_start 0001                                    _atoi$1730 0012  
                                  _atoi$1728 0010                                    _atoi$1729 0014  
                                   ?_i2c_ack 0001                                _MAX17345_dump 0EC6  
                              _MAX17345_init 11CA                                    _dtoa$1681 0030  
                              __pmediumconst FD12                                     ?___aodiv 0001  
                                   ?___aomod 0001                             ___aodiv@quotient 0013  
                          __size_of_showText 0034                            __size_of_vfprintf 0066  
                                   _BAUD5CON 000EE2                                     ?_isalpha 0001  
                                   ?_isdigit 0001                                     ?_islower 0001  
                                   ?_isspace 0001                                     ?_isupper 0001  
                             __size_of_fputc 0096                                     _T2CLKCON 000FBF  
                             __size_of_fputs 0044         __end_of_MAX17345_set_relearn_voltage 1828  
      __size_of_MAX17345_set_relearn_voltage 001A                 _MAX17345_set_relearn_voltage 180E  
                                   ?_toupper 0007                               __size_of_putch 000A  
                             ___wmul@product 0005                                     _LATCbits 000F7B  
                             ?_MAX17345_dump 0001                               ?_MAX17345_init 0001  
                                   _PIR4bits 000E37                                     _SSP1CON1 000F95  
                                   _SSP1CON2 000F96                                     _SSP1CON3 000F97  
                                   _SSP1STAT 000F94                         __size_of_i2c_restart 0012  
                                  _vfpfcnvrt 0000                                    _xtoa$1692 0031  
                                  _xtoa$1693 0033                            ___wmul@multiplier 0001  
                                   _WPUCbits 000EA1                                  ??_i2c_start 0001  
                               _isspace$1755 0007                                   vfpfcnvrt@c 009C  
                                  copy_data0 175C                                     _i2c_nack 1876  
              ?_MAX17345_set_relearn_voltage 0007                                     _i2c_stop 189E  
                           __size_of_i2c_ack 0014                                     __Hrparam 0000  
                                 vfprintf@ap 0053                                     __Lrparam 0000  
                                 vfprintf@fp 004F                         __size_of_SendCharUSB 0042  
                           __size_of___aodiv 0188                             __size_of___aomod 0164  
                                 ?_vfpfcnvrt 0045                              ___aodiv@divisor 0009  
                    MAX17345_read_word@dataH 000B                      MAX17345_read_word@dataL 000C  
                            ___aodiv@counter 0011                                   _ANSELFbits 000EB4  
                                 _ANSELGbits 000EBC                             __size_of_isalpha 003C  
                           __size_of_isdigit 0038                  __end_of_MAX17345_write_word 141E  
                           __size_of_islower 0038                             __size_of_isspace 0052  
                                   __ptext10 141E                                     __ptext11 0000  
                                   __ptext20 1534                                     __ptext12 075E  
                                   __ptext21 1286                                     __ptext13 1484  
                                   __ptext30 17C8                                     __ptext22 18E0  
                                   __ptext14 1636                                     __ptext31 1026  
                                   __ptext23 1578                                     __ptext15 166E  
                                   __ptext32 177A                                     __ptext24 15BA  
                                   __ptext16 15FA                                     __ptext33 189E  
                                   __ptext25 0D62                                     __ptext17 047C  
                                   __ptext34 18B0                                     __ptext26 0BDA  
                                   __ptext18 1104                                     __ptext35 18C2  
                                   __ptext27 0A36                                     __ptext19 16DE  
                                   __ptext36 17EE                                     __ptext28 14E2  
                                   __ptext37 1876                                     __ptext29 16A6  
                                   __ptext38 188A                             __size_of_isupper 0038  
                               _SSP1CON1bits 000F95                                 _SSP1CON2bits 000F96  
                           __size_of_toupper 005E                              ??_MAX17345_dump 005F  
                            ??_MAX17345_init 005F                   __end_of_MAX17345_read_word 1104  
                              __size_of_atoi 01A4                                __size_of_main 0084  
                              __size_of_dtoa 02E2                                __size_of_xtoa 02D8  
                        MAX17345_read_word@r 000D                MAX17345_set_relearn_voltage@r 0009  
                                   isa$xinst 000000                                     _showText 1714  
                                  showText@t 0002                    MAX17345_read_word@command 0003  
                                 _ODCONCbits 000EA0                                   _ODCONFbits 000EB2  
                                   _vfprintf 141E                                    printf@fmt 0057  
               ?_MAX17345_set_charge_current 0007                                 _SSP1STATbits 000F94  
               MAX17345_set_charge_current@r 0009                             ___aomod@dividend 0001  
                                  putch@data 0002                                   _INLVLCbits 000E9E  
                             _vfpfcnvrt$1707 009A                 ?_MAX17345_set_charge_voltage 0007  
                                   isalpha@c 0001                                     isdigit@c 0001  
                     MAX17345_read_word@data 0005                                     islower@c 0001  
                                   isspace@c 0001                  MAX17345_set_input_current@r 0009  
                                   isupper@c 0001                   MAX17345_write_word@command 0002  
             ??_MAX17345_set_relearn_voltage 0009                                     printf@ap 005D  
                            ___aomod@divisor 0009                 MAX17345_set_charge_voltage@r 0009  
                                ??_vfpfcnvrt 004B                              ___aomod@counter 0011  
                     __size_of_i2c_read_byte 0020                ??_MAX17345_set_charge_current 0009  
                                 _SSP1DATPPS 000E1A                                   _SSP1CLKPPS 000E19  
                                 _RX5PPSbits 000E17                                     toupper@c 0007  
                    MAX17345_write_word@data 0004                ??_MAX17345_set_charge_voltage 0009  
                               ___aodiv@sign 0012                            i2c_read_byte@data 0001  
                               ___aomod@sign 0012  
